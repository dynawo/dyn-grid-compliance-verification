<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1274" onload="init(evt)" viewBox="0 0 1200 1274" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1274" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o profile.svg -- model_validation examples/Model/Wind/WECC ../WECC_Curves -o ../Results/WindWecc</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1263.00"> </text><svg id="frames" x="10" width="1180" total_samples="11043"><g><title>&lt;module&gt; (src/dycov/launchers.py:15) (25 samples, 0.23%)</title><rect x="0.0543%" y="164" width="0.2264%" height="15" fill="rgb(227,0,7)" fg:x="6" fg:w="25"/><text x="0.3043%" y="174.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (25 samples, 0.23%)</title><rect x="0.0543%" y="180" width="0.2264%" height="15" fill="rgb(217,0,24)" fg:x="6" fg:w="25"/><text x="0.3043%" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (25 samples, 0.23%)</title><rect x="0.0543%" y="196" width="0.2264%" height="15" fill="rgb(221,193,54)" fg:x="6" fg:w="25"/><text x="0.3043%" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (25 samples, 0.23%)</title><rect x="0.0543%" y="212" width="0.2264%" height="15" fill="rgb(248,212,6)" fg:x="6" fg:w="25"/><text x="0.3043%" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (25 samples, 0.23%)</title><rect x="0.0543%" y="228" width="0.2264%" height="15" fill="rgb(208,68,35)" fg:x="6" fg:w="25"/><text x="0.3043%" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (25 samples, 0.23%)</title><rect x="0.0543%" y="244" width="0.2264%" height="15" fill="rgb(232,128,0)" fg:x="6" fg:w="25"/><text x="0.3043%" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:790) (25 samples, 0.23%)</title><rect x="0.0543%" y="260" width="0.2264%" height="15" fill="rgb(207,160,47)" fg:x="6" fg:w="25"/><text x="0.3043%" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (25 samples, 0.23%)</title><rect x="0.0543%" y="276" width="0.2264%" height="15" fill="rgb(228,23,34)" fg:x="6" fg:w="25"/><text x="0.3043%" y="286.50"></text></g><g><title>&lt;module&gt; (src/dycov/core/prepare_tool.py:4) (25 samples, 0.23%)</title><rect x="0.0543%" y="292" width="0.2264%" height="15" fill="rgb(218,30,26)" fg:x="6" fg:w="25"/><text x="0.3043%" y="302.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (25 samples, 0.23%)</title><rect x="0.0543%" y="308" width="0.2264%" height="15" fill="rgb(220,122,19)" fg:x="6" fg:w="25"/><text x="0.3043%" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (25 samples, 0.23%)</title><rect x="0.0543%" y="324" width="0.2264%" height="15" fill="rgb(250,228,42)" fg:x="6" fg:w="25"/><text x="0.3043%" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (25 samples, 0.23%)</title><rect x="0.0543%" y="340" width="0.2264%" height="15" fill="rgb(240,193,28)" fg:x="6" fg:w="25"/><text x="0.3043%" y="350.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (25 samples, 0.23%)</title><rect x="0.0543%" y="356" width="0.2264%" height="15" fill="rgb(216,20,37)" fg:x="6" fg:w="25"/><text x="0.3043%" y="366.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (25 samples, 0.23%)</title><rect x="0.0543%" y="372" width="0.2264%" height="15" fill="rgb(206,188,39)" fg:x="6" fg:w="25"/><text x="0.3043%" y="382.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:790) (25 samples, 0.23%)</title><rect x="0.0543%" y="388" width="0.2264%" height="15" fill="rgb(217,207,13)" fg:x="6" fg:w="25"/><text x="0.3043%" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (25 samples, 0.23%)</title><rect x="0.0543%" y="404" width="0.2264%" height="15" fill="rgb(231,73,38)" fg:x="6" fg:w="25"/><text x="0.3043%" y="414.50"></text></g><g><title>&lt;module&gt; (src/dycov/dynawo/dynawo.py:17) (19 samples, 0.17%)</title><rect x="0.1087%" y="420" width="0.1721%" height="15" fill="rgb(225,20,46)" fg:x="12" fg:w="19"/><text x="0.3587%" y="430.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (19 samples, 0.17%)</title><rect x="0.1087%" y="436" width="0.1721%" height="15" fill="rgb(210,31,41)" fg:x="12" fg:w="19"/><text x="0.3587%" y="446.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (19 samples, 0.17%)</title><rect x="0.1087%" y="452" width="0.1721%" height="15" fill="rgb(221,200,47)" fg:x="12" fg:w="19"/><text x="0.3587%" y="462.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (19 samples, 0.17%)</title><rect x="0.1087%" y="468" width="0.1721%" height="15" fill="rgb(226,26,5)" fg:x="12" fg:w="19"/><text x="0.3587%" y="478.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:790) (19 samples, 0.17%)</title><rect x="0.1087%" y="484" width="0.1721%" height="15" fill="rgb(249,33,26)" fg:x="12" fg:w="19"/><text x="0.3587%" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (19 samples, 0.17%)</title><rect x="0.1087%" y="500" width="0.1721%" height="15" fill="rgb(235,183,28)" fg:x="12" fg:w="19"/><text x="0.3587%" y="510.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_stats_py.py:45) (14 samples, 0.13%)</title><rect x="0.3984%" y="1124" width="0.1268%" height="15" fill="rgb(221,5,38)" fg:x="44" fg:w="14"/><text x="0.6484%" y="1134.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (14 samples, 0.13%)</title><rect x="0.3984%" y="1140" width="0.1268%" height="15" fill="rgb(247,18,42)" fg:x="44" fg:w="14"/><text x="0.6484%" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (14 samples, 0.13%)</title><rect x="0.3984%" y="1156" width="0.1268%" height="15" fill="rgb(241,131,45)" fg:x="44" fg:w="14"/><text x="0.6484%" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (14 samples, 0.13%)</title><rect x="0.3984%" y="1172" width="0.1268%" height="15" fill="rgb(249,31,29)" fg:x="44" fg:w="14"/><text x="0.6484%" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (14 samples, 0.13%)</title><rect x="0.3984%" y="1188" width="0.1268%" height="15" fill="rgb(225,111,53)" fg:x="44" fg:w="14"/><text x="0.6484%" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (14 samples, 0.13%)</title><rect x="0.3984%" y="1204" width="0.1268%" height="15" fill="rgb(238,160,17)" fg:x="44" fg:w="14"/><text x="0.6484%" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:790) (14 samples, 0.13%)</title><rect x="0.3984%" y="1220" width="0.1268%" height="15" fill="rgb(214,148,48)" fg:x="44" fg:w="14"/><text x="0.6484%" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (14 samples, 0.13%)</title><rect x="0.3984%" y="1236" width="0.1268%" height="15" fill="rgb(232,36,49)" fg:x="44" fg:w="14"/><text x="0.6484%" y="1246.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:605) (19 samples, 0.17%)</title><rect x="0.3894%" y="1028" width="0.1721%" height="15" fill="rgb(209,103,24)" fg:x="43" fg:w="19"/><text x="0.6394%" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (19 samples, 0.17%)</title><rect x="0.3894%" y="1044" width="0.1721%" height="15" fill="rgb(229,88,8)" fg:x="43" fg:w="19"/><text x="0.6394%" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (19 samples, 0.17%)</title><rect x="0.3894%" y="1060" width="0.1721%" height="15" fill="rgb(213,181,19)" fg:x="43" fg:w="19"/><text x="0.6394%" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (19 samples, 0.17%)</title><rect x="0.3894%" y="1076" width="0.1721%" height="15" fill="rgb(254,191,54)" fg:x="43" fg:w="19"/><text x="0.6394%" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:790) (19 samples, 0.17%)</title><rect x="0.3894%" y="1092" width="0.1721%" height="15" fill="rgb(241,83,37)" fg:x="43" fg:w="19"/><text x="0.6394%" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (19 samples, 0.17%)</title><rect x="0.3894%" y="1108" width="0.1721%" height="15" fill="rgb(233,36,39)" fg:x="43" fg:w="19"/><text x="0.6394%" y="1118.50"></text></g><g><title>&lt;module&gt; (src/dycov/core/model_validation.py:24) (37 samples, 0.34%)</title><rect x="0.2807%" y="260" width="0.3351%" height="15" fill="rgb(226,3,54)" fg:x="31" fg:w="37"/><text x="0.5307%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (37 samples, 0.34%)</title><rect x="0.2807%" y="276" width="0.3351%" height="15" fill="rgb(245,192,40)" fg:x="31" fg:w="37"/><text x="0.5307%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (37 samples, 0.34%)</title><rect x="0.2807%" y="292" width="0.3351%" height="15" fill="rgb(238,167,29)" fg:x="31" fg:w="37"/><text x="0.5307%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (37 samples, 0.34%)</title><rect x="0.2807%" y="308" width="0.3351%" height="15" fill="rgb(232,182,51)" fg:x="31" fg:w="37"/><text x="0.5307%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:790) (37 samples, 0.34%)</title><rect x="0.2807%" y="324" width="0.3351%" height="15" fill="rgb(231,60,39)" fg:x="31" fg:w="37"/><text x="0.5307%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (37 samples, 0.34%)</title><rect x="0.2807%" y="340" width="0.3351%" height="15" fill="rgb(208,69,12)" fg:x="31" fg:w="37"/><text x="0.5307%" y="350.50"></text></g><g><title>&lt;module&gt; (src/dycov/core/pcs.py:13) (37 samples, 0.34%)</title><rect x="0.2807%" y="356" width="0.3351%" height="15" fill="rgb(235,93,37)" fg:x="31" fg:w="37"/><text x="0.5307%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (37 samples, 0.34%)</title><rect x="0.2807%" y="372" width="0.3351%" height="15" fill="rgb(213,116,39)" fg:x="31" fg:w="37"/><text x="0.5307%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (37 samples, 0.34%)</title><rect x="0.2807%" y="388" width="0.3351%" height="15" fill="rgb(222,207,29)" fg:x="31" fg:w="37"/><text x="0.5307%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (37 samples, 0.34%)</title><rect x="0.2807%" y="404" width="0.3351%" height="15" fill="rgb(206,96,30)" fg:x="31" fg:w="37"/><text x="0.5307%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:790) (37 samples, 0.34%)</title><rect x="0.2807%" y="420" width="0.3351%" height="15" fill="rgb(218,138,4)" fg:x="31" fg:w="37"/><text x="0.5307%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (37 samples, 0.34%)</title><rect x="0.2807%" y="436" width="0.3351%" height="15" fill="rgb(250,191,14)" fg:x="31" fg:w="37"/><text x="0.5307%" y="446.50"></text></g><g><title>&lt;module&gt; (src/dycov/core/benchmark.py:15) (37 samples, 0.34%)</title><rect x="0.2807%" y="452" width="0.3351%" height="15" fill="rgb(239,60,40)" fg:x="31" fg:w="37"/><text x="0.5307%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (37 samples, 0.34%)</title><rect x="0.2807%" y="468" width="0.3351%" height="15" fill="rgb(206,27,48)" fg:x="31" fg:w="37"/><text x="0.5307%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (37 samples, 0.34%)</title><rect x="0.2807%" y="484" width="0.3351%" height="15" fill="rgb(225,35,8)" fg:x="31" fg:w="37"/><text x="0.5307%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (37 samples, 0.34%)</title><rect x="0.2807%" y="500" width="0.3351%" height="15" fill="rgb(250,213,24)" fg:x="31" fg:w="37"/><text x="0.5307%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:790) (37 samples, 0.34%)</title><rect x="0.2807%" y="516" width="0.3351%" height="15" fill="rgb(247,123,22)" fg:x="31" fg:w="37"/><text x="0.5307%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (37 samples, 0.34%)</title><rect x="0.2807%" y="532" width="0.3351%" height="15" fill="rgb(231,138,38)" fg:x="31" fg:w="37"/><text x="0.5307%" y="542.50"></text></g><g><title>&lt;module&gt; (src/dycov/core/operating_condition.py:44) (37 samples, 0.34%)</title><rect x="0.2807%" y="548" width="0.3351%" height="15" fill="rgb(231,145,46)" fg:x="31" fg:w="37"/><text x="0.5307%" y="558.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (37 samples, 0.34%)</title><rect x="0.2807%" y="564" width="0.3351%" height="15" fill="rgb(251,118,11)" fg:x="31" fg:w="37"/><text x="0.5307%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (37 samples, 0.34%)</title><rect x="0.2807%" y="580" width="0.3351%" height="15" fill="rgb(217,147,25)" fg:x="31" fg:w="37"/><text x="0.5307%" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (37 samples, 0.34%)</title><rect x="0.2807%" y="596" width="0.3351%" height="15" fill="rgb(247,81,37)" fg:x="31" fg:w="37"/><text x="0.5307%" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (37 samples, 0.34%)</title><rect x="0.2807%" y="612" width="0.3351%" height="15" fill="rgb(209,12,38)" fg:x="31" fg:w="37"/><text x="0.5307%" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (37 samples, 0.34%)</title><rect x="0.2807%" y="628" width="0.3351%" height="15" fill="rgb(227,1,9)" fg:x="31" fg:w="37"/><text x="0.5307%" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:790) (37 samples, 0.34%)</title><rect x="0.2807%" y="644" width="0.3351%" height="15" fill="rgb(248,47,43)" fg:x="31" fg:w="37"/><text x="0.5307%" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (37 samples, 0.34%)</title><rect x="0.2807%" y="660" width="0.3351%" height="15" fill="rgb(221,10,30)" fg:x="31" fg:w="37"/><text x="0.5307%" y="670.50"></text></g><g><title>&lt;module&gt; (src/dycov/sigpro/sigpro.py:4) (37 samples, 0.34%)</title><rect x="0.2807%" y="676" width="0.3351%" height="15" fill="rgb(210,229,1)" fg:x="31" fg:w="37"/><text x="0.5307%" y="686.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1055) (35 samples, 0.32%)</title><rect x="0.2988%" y="692" width="0.3169%" height="15" fill="rgb(222,148,37)" fg:x="33" fg:w="35"/><text x="0.5488%" y="702.50"></text></g><g><title>__getattr__ (scipy/__init__.py:134) (35 samples, 0.32%)</title><rect x="0.2988%" y="708" width="0.3169%" height="15" fill="rgb(234,67,33)" fg:x="33" fg:w="35"/><text x="0.5488%" y="718.50"></text></g><g><title>import_module (importlib/__init__.py:127) (35 samples, 0.32%)</title><rect x="0.2988%" y="724" width="0.3169%" height="15" fill="rgb(247,98,35)" fg:x="33" fg:w="35"/><text x="0.5488%" y="734.50"></text></g><g><title>_gcd_import (&lt;frozen importlib._bootstrap&gt;:1030) (35 samples, 0.32%)</title><rect x="0.2988%" y="740" width="0.3169%" height="15" fill="rgb(247,138,52)" fg:x="33" fg:w="35"/><text x="0.5488%" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (35 samples, 0.32%)</title><rect x="0.2988%" y="756" width="0.3169%" height="15" fill="rgb(213,79,30)" fg:x="33" fg:w="35"/><text x="0.5488%" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (35 samples, 0.32%)</title><rect x="0.2988%" y="772" width="0.3169%" height="15" fill="rgb(246,177,23)" fg:x="33" fg:w="35"/><text x="0.5488%" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (35 samples, 0.32%)</title><rect x="0.2988%" y="788" width="0.3169%" height="15" fill="rgb(230,62,27)" fg:x="33" fg:w="35"/><text x="0.5488%" y="798.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:790) (35 samples, 0.32%)</title><rect x="0.2988%" y="804" width="0.3169%" height="15" fill="rgb(216,154,8)" fg:x="33" fg:w="35"/><text x="0.5488%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (35 samples, 0.32%)</title><rect x="0.2988%" y="820" width="0.3169%" height="15" fill="rgb(244,35,45)" fg:x="33" fg:w="35"/><text x="0.5488%" y="830.50"></text></g><g><title>&lt;module&gt; (scipy/signal/__init__.py:338) (25 samples, 0.23%)</title><rect x="0.3894%" y="836" width="0.2264%" height="15" fill="rgb(251,115,12)" fg:x="43" fg:w="25"/><text x="0.6394%" y="846.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (25 samples, 0.23%)</title><rect x="0.3894%" y="852" width="0.2264%" height="15" fill="rgb(240,54,50)" fg:x="43" fg:w="25"/><text x="0.6394%" y="862.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (25 samples, 0.23%)</title><rect x="0.3894%" y="868" width="0.2264%" height="15" fill="rgb(233,84,52)" fg:x="43" fg:w="25"/><text x="0.6394%" y="878.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (25 samples, 0.23%)</title><rect x="0.3894%" y="884" width="0.2264%" height="15" fill="rgb(207,117,47)" fg:x="43" fg:w="25"/><text x="0.6394%" y="894.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:790) (25 samples, 0.23%)</title><rect x="0.3894%" y="900" width="0.2264%" height="15" fill="rgb(249,43,39)" fg:x="43" fg:w="25"/><text x="0.6394%" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (25 samples, 0.23%)</title><rect x="0.3894%" y="916" width="0.2264%" height="15" fill="rgb(209,38,44)" fg:x="43" fg:w="25"/><text x="0.6394%" y="926.50"></text></g><g><title>&lt;module&gt; (scipy/signal/_peak_finding.py:8) (25 samples, 0.23%)</title><rect x="0.3894%" y="932" width="0.2264%" height="15" fill="rgb(236,212,23)" fg:x="43" fg:w="25"/><text x="0.6394%" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (25 samples, 0.23%)</title><rect x="0.3894%" y="948" width="0.2264%" height="15" fill="rgb(242,79,21)" fg:x="43" fg:w="25"/><text x="0.6394%" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (25 samples, 0.23%)</title><rect x="0.3894%" y="964" width="0.2264%" height="15" fill="rgb(211,96,35)" fg:x="43" fg:w="25"/><text x="0.6394%" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (25 samples, 0.23%)</title><rect x="0.3894%" y="980" width="0.2264%" height="15" fill="rgb(253,215,40)" fg:x="43" fg:w="25"/><text x="0.6394%" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:790) (25 samples, 0.23%)</title><rect x="0.3894%" y="996" width="0.2264%" height="15" fill="rgb(211,81,21)" fg:x="43" fg:w="25"/><text x="0.6394%" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (25 samples, 0.23%)</title><rect x="0.3894%" y="1012" width="0.2264%" height="15" fill="rgb(208,190,38)" fg:x="43" fg:w="25"/><text x="0.6394%" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:972) (14 samples, 0.13%)</title><rect x="0.6520%" y="548" width="0.1268%" height="15" fill="rgb(235,213,38)" fg:x="72" fg:w="14"/><text x="0.9020%" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (14 samples, 0.13%)</title><rect x="0.6520%" y="564" width="0.1268%" height="15" fill="rgb(237,122,38)" fg:x="72" fg:w="14"/><text x="0.9020%" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (14 samples, 0.13%)</title><rect x="0.6520%" y="580" width="0.1268%" height="15" fill="rgb(244,218,35)" fg:x="72" fg:w="14"/><text x="0.9020%" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (14 samples, 0.13%)</title><rect x="0.6520%" y="596" width="0.1268%" height="15" fill="rgb(240,68,47)" fg:x="72" fg:w="14"/><text x="0.9020%" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (14 samples, 0.13%)</title><rect x="0.6520%" y="612" width="0.1268%" height="15" fill="rgb(210,16,53)" fg:x="72" fg:w="14"/><text x="0.9020%" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:790) (14 samples, 0.13%)</title><rect x="0.6520%" y="628" width="0.1268%" height="15" fill="rgb(235,124,12)" fg:x="72" fg:w="14"/><text x="0.9020%" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (14 samples, 0.13%)</title><rect x="0.6520%" y="644" width="0.1268%" height="15" fill="rgb(224,169,11)" fg:x="72" fg:w="14"/><text x="0.9020%" y="654.50"></text></g><g><title>&lt;module&gt; (src/dycov/report/report.py:19) (41 samples, 0.37%)</title><rect x="0.6429%" y="388" width="0.3713%" height="15" fill="rgb(250,166,2)" fg:x="71" fg:w="41"/><text x="0.8929%" y="398.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (41 samples, 0.37%)</title><rect x="0.6429%" y="404" width="0.3713%" height="15" fill="rgb(242,216,29)" fg:x="71" fg:w="41"/><text x="0.8929%" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (41 samples, 0.37%)</title><rect x="0.6429%" y="420" width="0.3713%" height="15" fill="rgb(230,116,27)" fg:x="71" fg:w="41"/><text x="0.8929%" y="430.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (41 samples, 0.37%)</title><rect x="0.6429%" y="436" width="0.3713%" height="15" fill="rgb(228,99,48)" fg:x="71" fg:w="41"/><text x="0.8929%" y="446.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (41 samples, 0.37%)</title><rect x="0.6429%" y="452" width="0.3713%" height="15" fill="rgb(253,11,6)" fg:x="71" fg:w="41"/><text x="0.8929%" y="462.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (41 samples, 0.37%)</title><rect x="0.6429%" y="468" width="0.3713%" height="15" fill="rgb(247,143,39)" fg:x="71" fg:w="41"/><text x="0.8929%" y="478.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:790) (40 samples, 0.36%)</title><rect x="0.6520%" y="484" width="0.3622%" height="15" fill="rgb(236,97,10)" fg:x="72" fg:w="40"/><text x="0.9020%" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (40 samples, 0.36%)</title><rect x="0.6520%" y="500" width="0.3622%" height="15" fill="rgb(233,208,19)" fg:x="72" fg:w="40"/><text x="0.9020%" y="510.50"></text></g><g><title>&lt;module&gt; (src/dycov/report/figure.py:13) (40 samples, 0.36%)</title><rect x="0.6520%" y="516" width="0.3622%" height="15" fill="rgb(216,164,2)" fg:x="72" fg:w="40"/><text x="0.9020%" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (40 samples, 0.36%)</title><rect x="0.6520%" y="532" width="0.3622%" height="15" fill="rgb(220,129,5)" fg:x="72" fg:w="40"/><text x="0.9020%" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (26 samples, 0.24%)</title><rect x="0.7788%" y="548" width="0.2354%" height="15" fill="rgb(242,17,10)" fg:x="86" fg:w="26"/><text x="1.0288%" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (26 samples, 0.24%)</title><rect x="0.7788%" y="564" width="0.2354%" height="15" fill="rgb(242,107,0)" fg:x="86" fg:w="26"/><text x="1.0288%" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:790) (26 samples, 0.24%)</title><rect x="0.7788%" y="580" width="0.2354%" height="15" fill="rgb(251,28,31)" fg:x="86" fg:w="26"/><text x="1.0288%" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (26 samples, 0.24%)</title><rect x="0.7788%" y="596" width="0.2354%" height="15" fill="rgb(233,223,10)" fg:x="86" fg:w="26"/><text x="1.0288%" y="606.50"></text></g><g><title>&lt;module&gt; (matplotlib/pyplot.py:66) (15 samples, 0.14%)</title><rect x="0.8784%" y="612" width="0.1358%" height="15" fill="rgb(215,21,27)" fg:x="97" fg:w="15"/><text x="1.1284%" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (15 samples, 0.14%)</title><rect x="0.8784%" y="628" width="0.1358%" height="15" fill="rgb(232,23,21)" fg:x="97" fg:w="15"/><text x="1.1284%" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (15 samples, 0.14%)</title><rect x="0.8784%" y="644" width="0.1358%" height="15" fill="rgb(244,5,23)" fg:x="97" fg:w="15"/><text x="1.1284%" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (15 samples, 0.14%)</title><rect x="0.8784%" y="660" width="0.1358%" height="15" fill="rgb(226,81,46)" fg:x="97" fg:w="15"/><text x="1.1284%" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:790) (15 samples, 0.14%)</title><rect x="0.8784%" y="676" width="0.1358%" height="15" fill="rgb(247,70,30)" fg:x="97" fg:w="15"/><text x="1.1284%" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (15 samples, 0.14%)</title><rect x="0.8784%" y="692" width="0.1358%" height="15" fill="rgb(212,68,19)" fg:x="97" fg:w="15"/><text x="1.1284%" y="702.50"></text></g><g><title>&lt;module&gt; (matplotlib/figure.py:43) (14 samples, 0.13%)</title><rect x="0.8874%" y="708" width="0.1268%" height="15" fill="rgb(240,187,13)" fg:x="98" fg:w="14"/><text x="1.1374%" y="718.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (14 samples, 0.13%)</title><rect x="0.8874%" y="724" width="0.1268%" height="15" fill="rgb(223,113,26)" fg:x="98" fg:w="14"/><text x="1.1374%" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (14 samples, 0.13%)</title><rect x="0.8874%" y="740" width="0.1268%" height="15" fill="rgb(206,192,2)" fg:x="98" fg:w="14"/><text x="1.1374%" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (14 samples, 0.13%)</title><rect x="0.8874%" y="756" width="0.1268%" height="15" fill="rgb(241,108,4)" fg:x="98" fg:w="14"/><text x="1.1374%" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (14 samples, 0.13%)</title><rect x="0.8874%" y="772" width="0.1268%" height="15" fill="rgb(247,173,49)" fg:x="98" fg:w="14"/><text x="1.1374%" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (14 samples, 0.13%)</title><rect x="0.8874%" y="788" width="0.1268%" height="15" fill="rgb(224,114,35)" fg:x="98" fg:w="14"/><text x="1.1374%" y="798.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:790) (14 samples, 0.13%)</title><rect x="0.8874%" y="804" width="0.1268%" height="15" fill="rgb(245,159,27)" fg:x="98" fg:w="14"/><text x="1.1374%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (14 samples, 0.13%)</title><rect x="0.8874%" y="820" width="0.1268%" height="15" fill="rgb(245,172,44)" fg:x="98" fg:w="14"/><text x="1.1374%" y="830.50"></text></g><g><title>&lt;module&gt; (model_validation:5) (111 samples, 1.01%)</title><rect x="0.0181%" y="68" width="1.0052%" height="15" fill="rgb(236,23,11)" fg:x="2" fg:w="111"/><text x="0.2681%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (111 samples, 1.01%)</title><rect x="0.0181%" y="84" width="1.0052%" height="15" fill="rgb(205,117,38)" fg:x="2" fg:w="111"/><text x="0.2681%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (111 samples, 1.01%)</title><rect x="0.0181%" y="100" width="1.0052%" height="15" fill="rgb(237,72,25)" fg:x="2" fg:w="111"/><text x="0.2681%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (111 samples, 1.01%)</title><rect x="0.0181%" y="116" width="1.0052%" height="15" fill="rgb(244,70,9)" fg:x="2" fg:w="111"/><text x="0.2681%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:790) (111 samples, 1.01%)</title><rect x="0.0181%" y="132" width="1.0052%" height="15" fill="rgb(217,125,39)" fg:x="2" fg:w="111"/><text x="0.2681%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (111 samples, 1.01%)</title><rect x="0.0181%" y="148" width="1.0052%" height="15" fill="rgb(235,36,10)" fg:x="2" fg:w="111"/><text x="0.2681%" y="158.50"></text></g><g><title>&lt;module&gt; (src/dycov/launchers.py:18) (82 samples, 0.74%)</title><rect x="0.2807%" y="164" width="0.7426%" height="15" fill="rgb(251,123,47)" fg:x="31" fg:w="82"/><text x="0.5307%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (82 samples, 0.74%)</title><rect x="0.2807%" y="180" width="0.7426%" height="15" fill="rgb(221,13,13)" fg:x="31" fg:w="82"/><text x="0.5307%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (82 samples, 0.74%)</title><rect x="0.2807%" y="196" width="0.7426%" height="15" fill="rgb(238,131,9)" fg:x="31" fg:w="82"/><text x="0.5307%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (82 samples, 0.74%)</title><rect x="0.2807%" y="212" width="0.7426%" height="15" fill="rgb(211,50,8)" fg:x="31" fg:w="82"/><text x="0.5307%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:790) (82 samples, 0.74%)</title><rect x="0.2807%" y="228" width="0.7426%" height="15" fill="rgb(245,182,24)" fg:x="31" fg:w="82"/><text x="0.5307%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (82 samples, 0.74%)</title><rect x="0.2807%" y="244" width="0.7426%" height="15" fill="rgb(242,14,37)" fg:x="31" fg:w="82"/><text x="0.5307%" y="254.50"></text></g><g><title>&lt;module&gt; (src/dycov/core/model_validation.py:27) (45 samples, 0.41%)</title><rect x="0.6158%" y="260" width="0.4075%" height="15" fill="rgb(246,228,12)" fg:x="68" fg:w="45"/><text x="0.8658%" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (45 samples, 0.41%)</title><rect x="0.6158%" y="276" width="0.4075%" height="15" fill="rgb(213,55,15)" fg:x="68" fg:w="45"/><text x="0.8658%" y="286.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (45 samples, 0.41%)</title><rect x="0.6158%" y="292" width="0.4075%" height="15" fill="rgb(209,9,3)" fg:x="68" fg:w="45"/><text x="0.8658%" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (45 samples, 0.41%)</title><rect x="0.6158%" y="308" width="0.4075%" height="15" fill="rgb(230,59,30)" fg:x="68" fg:w="45"/><text x="0.8658%" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (45 samples, 0.41%)</title><rect x="0.6158%" y="324" width="0.4075%" height="15" fill="rgb(209,121,21)" fg:x="68" fg:w="45"/><text x="0.8658%" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (45 samples, 0.41%)</title><rect x="0.6158%" y="340" width="0.4075%" height="15" fill="rgb(220,109,13)" fg:x="68" fg:w="45"/><text x="0.8658%" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:790) (45 samples, 0.41%)</title><rect x="0.6158%" y="356" width="0.4075%" height="15" fill="rgb(232,18,1)" fg:x="68" fg:w="45"/><text x="0.8658%" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (45 samples, 0.41%)</title><rect x="0.6158%" y="372" width="0.4075%" height="15" fill="rgb(215,41,42)" fg:x="68" fg:w="45"/><text x="0.8658%" y="382.50"></text></g><g><title>__obtain_files_curve (src/dycov/core/operating_condition.py:1232) (15 samples, 0.14%)</title><rect x="1.1410%" y="180" width="0.1358%" height="15" fill="rgb(224,123,36)" fg:x="126" fg:w="15"/><text x="1.3910%" y="190.50"></text></g><g><title>get_curves_dataframe (src/dycov/curves_importer/curves_importer.py:84) (15 samples, 0.14%)</title><rect x="1.1410%" y="196" width="0.1358%" height="15" fill="rgb(240,125,3)" fg:x="126" fg:w="15"/><text x="1.3910%" y="206.50"></text></g><g><title>get_values_for_csv (pandas/core/indexes/base.py:7833) (28 samples, 0.25%)</title><rect x="1.3312%" y="372" width="0.2536%" height="15" fill="rgb(205,98,50)" fg:x="147" fg:w="28"/><text x="1.5812%" y="382.50"></text></g><g><title>_save_chunk (pandas/io/formats/csvs.py:320) (31 samples, 0.28%)</title><rect x="1.3221%" y="292" width="0.2807%" height="15" fill="rgb(205,185,37)" fg:x="146" fg:w="31"/><text x="1.5721%" y="302.50"></text></g><g><title>_get_values_for_csv (pandas/core/frame.py:1399) (31 samples, 0.28%)</title><rect x="1.3221%" y="308" width="0.2807%" height="15" fill="rgb(238,207,15)" fg:x="146" fg:w="31"/><text x="1.5721%" y="318.50"></text></g><g><title>get_values_for_csv (pandas/core/internals/managers.py:467) (31 samples, 0.28%)</title><rect x="1.3221%" y="324" width="0.2807%" height="15" fill="rgb(213,199,42)" fg:x="146" fg:w="31"/><text x="1.5721%" y="334.50"></text></g><g><title>apply (pandas/core/internals/managers.py:364) (31 samples, 0.28%)</title><rect x="1.3221%" y="340" width="0.2807%" height="15" fill="rgb(235,201,11)" fg:x="146" fg:w="31"/><text x="1.5721%" y="350.50"></text></g><g><title>get_values_for_csv (pandas/core/internals/blocks.py:780) (31 samples, 0.28%)</title><rect x="1.3221%" y="356" width="0.2807%" height="15" fill="rgb(207,46,11)" fg:x="146" fg:w="31"/><text x="1.5721%" y="366.50"></text></g><g><title>__obtain_curve (src/dycov/core/operating_condition.py:1335) (65 samples, 0.59%)</title><rect x="1.0776%" y="164" width="0.5886%" height="15" fill="rgb(241,35,35)" fg:x="119" fg:w="65"/><text x="1.3276%" y="174.50"></text></g><g><title>__obtain_files_curve (src/dycov/core/operating_condition.py:1239) (39 samples, 0.35%)</title><rect x="1.3130%" y="180" width="0.3532%" height="15" fill="rgb(243,32,47)" fg:x="145" fg:w="39"/><text x="1.5630%" y="190.50"></text></g><g><title>wrapper (pandas/util/_decorators.py:333) (39 samples, 0.35%)</title><rect x="1.3130%" y="196" width="0.3532%" height="15" fill="rgb(247,202,23)" fg:x="145" fg:w="39"/><text x="1.5630%" y="206.50"></text></g><g><title>to_csv (pandas/core/generic.py:3961) (39 samples, 0.35%)</title><rect x="1.3130%" y="212" width="0.3532%" height="15" fill="rgb(219,102,11)" fg:x="145" fg:w="39"/><text x="1.5630%" y="222.50"></text></g><g><title>to_csv (pandas/io/formats/format.py:1014) (39 samples, 0.35%)</title><rect x="1.3130%" y="228" width="0.3532%" height="15" fill="rgb(243,110,44)" fg:x="145" fg:w="39"/><text x="1.5630%" y="238.50"></text></g><g><title>save (pandas/io/formats/csvs.py:270) (38 samples, 0.34%)</title><rect x="1.3221%" y="244" width="0.3441%" height="15" fill="rgb(222,74,54)" fg:x="146" fg:w="38"/><text x="1.5721%" y="254.50"></text></g><g><title>_save (pandas/io/formats/csvs.py:275) (38 samples, 0.34%)</title><rect x="1.3221%" y="260" width="0.3441%" height="15" fill="rgb(216,99,12)" fg:x="146" fg:w="38"/><text x="1.5721%" y="270.50"></text></g><g><title>_save_body (pandas/io/formats/csvs.py:313) (38 samples, 0.34%)</title><rect x="1.3221%" y="276" width="0.3441%" height="15" fill="rgb(226,22,26)" fg:x="146" fg:w="38"/><text x="1.5721%" y="286.50"></text></g><g><title>__obtain_dynawo_curve (src/dycov/core/operating_condition.py:1067) (14 samples, 0.13%)</title><rect x="1.6662%" y="180" width="0.1268%" height="15" fill="rgb(217,163,10)" fg:x="184" fg:w="14"/><text x="1.9162%" y="190.50"></text></g><g><title>run_base_dynawo (src/dycov/dynawo/dynawo.py:305) (22 samples, 0.20%)</title><rect x="1.9741%" y="228" width="0.1992%" height="15" fill="rgb(213,25,53)" fg:x="218" fg:w="22"/><text x="2.2241%" y="238.50"></text></g><g><title>run_dynawo (src/dycov/dynawo/dynawo.py:207) (22 samples, 0.20%)</title><rect x="1.9741%" y="244" width="0.1992%" height="15" fill="rgb(252,105,26)" fg:x="218" fg:w="22"/><text x="2.2241%" y="254.50"></text></g><g><title>run (subprocess.py:505) (22 samples, 0.20%)</title><rect x="1.9741%" y="260" width="0.1992%" height="15" fill="rgb(220,39,43)" fg:x="218" fg:w="22"/><text x="2.2241%" y="270.50"></text></g><g><title>__init__ (subprocess.py:951) (21 samples, 0.19%)</title><rect x="1.9832%" y="276" width="0.1902%" height="15" fill="rgb(229,68,48)" fg:x="219" fg:w="21"/><text x="2.2332%" y="286.50"></text></g><g><title>_execute_child (subprocess.py:1756) (20 samples, 0.18%)</title><rect x="1.9922%" y="292" width="0.1811%" height="15" fill="rgb(252,8,32)" fg:x="220" fg:w="20"/><text x="2.2422%" y="302.50"></text></g><g><title>__execute_dynawo (src/dycov/core/operating_condition.py:897) (25 samples, 0.23%)</title><rect x="1.9741%" y="212" width="0.2264%" height="15" fill="rgb(223,20,43)" fg:x="218" fg:w="25"/><text x="2.2241%" y="222.50"></text></g><g><title>read (pandas/io/parsers/c_parser_wrapper.py:234) (19 samples, 0.17%)</title><rect x="2.2729%" y="292" width="0.1721%" height="15" fill="rgb(229,81,49)" fg:x="251" fg:w="19"/><text x="2.5229%" y="302.50"></text></g><g><title>read (pandas/io/parsers/readers.py:1921) (21 samples, 0.19%)</title><rect x="2.2729%" y="276" width="0.1902%" height="15" fill="rgb(236,28,36)" fg:x="251" fg:w="21"/><text x="2.5229%" y="286.50"></text></g><g><title>create_curves (src/dycov/dynawo/dynawo.py:411) (30 samples, 0.27%)</title><rect x="2.2095%" y="228" width="0.2717%" height="15" fill="rgb(249,185,26)" fg:x="244" fg:w="30"/><text x="2.4595%" y="238.50"></text></g><g><title>read_csv (pandas/io/parsers/readers.py:1024) (30 samples, 0.27%)</title><rect x="2.2095%" y="244" width="0.2717%" height="15" fill="rgb(249,174,33)" fg:x="244" fg:w="30"/><text x="2.4595%" y="254.50"></text></g><g><title>_read (pandas/io/parsers/readers.py:624) (23 samples, 0.21%)</title><rect x="2.2729%" y="260" width="0.2083%" height="15" fill="rgb(233,201,37)" fg:x="251" fg:w="23"/><text x="2.5229%" y="270.50"></text></g><g><title>create_curves (src/dycov/dynawo/dynawo.py:567) (14 samples, 0.13%)</title><rect x="2.7529%" y="228" width="0.1268%" height="15" fill="rgb(221,78,26)" fg:x="304" fg:w="14"/><text x="3.0029%" y="238.50"></text></g><g><title>__init__ (pandas/core/frame.py:767) (14 samples, 0.13%)</title><rect x="2.7529%" y="244" width="0.1268%" height="15" fill="rgb(250,127,30)" fg:x="304" fg:w="14"/><text x="3.0029%" y="254.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:503) (14 samples, 0.13%)</title><rect x="2.7529%" y="260" width="0.1268%" height="15" fill="rgb(230,49,44)" fg:x="304" fg:w="14"/><text x="3.0029%" y="270.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:119) (14 samples, 0.13%)</title><rect x="2.7529%" y="276" width="0.1268%" height="15" fill="rgb(229,67,23)" fg:x="304" fg:w="14"/><text x="3.0029%" y="286.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:629) (14 samples, 0.13%)</title><rect x="2.7529%" y="292" width="0.1268%" height="15" fill="rgb(249,83,47)" fg:x="304" fg:w="14"/><text x="3.0029%" y="302.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:651) (12 samples, 0.11%)</title><rect x="2.7710%" y="308" width="0.1087%" height="15" fill="rgb(215,43,3)" fg:x="306" fg:w="12"/><text x="3.0210%" y="318.50"></text></g><g><title>get_values_for_csv (pandas/core/indexes/base.py:7833) (52 samples, 0.47%)</title><rect x="2.9159%" y="420" width="0.4709%" height="15" fill="rgb(238,154,13)" fg:x="322" fg:w="52"/><text x="3.1659%" y="430.50"></text></g><g><title>_save_chunk (pandas/io/formats/csvs.py:320) (64 samples, 0.58%)</title><rect x="2.9068%" y="340" width="0.5796%" height="15" fill="rgb(219,56,2)" fg:x="321" fg:w="64"/><text x="3.1568%" y="350.50"></text></g><g><title>_get_values_for_csv (pandas/core/frame.py:1399) (64 samples, 0.58%)</title><rect x="2.9068%" y="356" width="0.5796%" height="15" fill="rgb(233,0,4)" fg:x="321" fg:w="64"/><text x="3.1568%" y="366.50"></text></g><g><title>get_values_for_csv (pandas/core/internals/managers.py:467) (64 samples, 0.58%)</title><rect x="2.9068%" y="372" width="0.5796%" height="15" fill="rgb(235,30,7)" fg:x="321" fg:w="64"/><text x="3.1568%" y="382.50"></text></g><g><title>apply (pandas/core/internals/managers.py:364) (64 samples, 0.58%)</title><rect x="2.9068%" y="388" width="0.5796%" height="15" fill="rgb(250,79,13)" fg:x="321" fg:w="64"/><text x="3.1568%" y="398.50"></text></g><g><title>get_values_for_csv (pandas/core/internals/blocks.py:780) (64 samples, 0.58%)</title><rect x="2.9068%" y="404" width="0.5796%" height="15" fill="rgb(211,146,34)" fg:x="321" fg:w="64"/><text x="3.1568%" y="414.50"></text></g><g><title>__get_hiz_fault (src/dycov/core/operating_condition.py:964) (215 samples, 1.95%)</title><rect x="1.9741%" y="196" width="1.9469%" height="15" fill="rgb(228,22,38)" fg:x="218" fg:w="215"/><text x="2.2241%" y="206.50">_..</text></g><g><title>__execute_dynawo (src/dycov/core/operating_condition.py:918) (190 samples, 1.72%)</title><rect x="2.2005%" y="212" width="1.7205%" height="15" fill="rgb(235,168,5)" fg:x="243" fg:w="190"/><text x="2.4505%" y="222.50"></text></g><g><title>create_curves (src/dycov/dynawo/dynawo.py:571) (114 samples, 1.03%)</title><rect x="2.8887%" y="228" width="1.0323%" height="15" fill="rgb(221,155,16)" fg:x="319" fg:w="114"/><text x="3.1387%" y="238.50"></text></g><g><title>wrapper (pandas/util/_decorators.py:333) (114 samples, 1.03%)</title><rect x="2.8887%" y="244" width="1.0323%" height="15" fill="rgb(215,215,53)" fg:x="319" fg:w="114"/><text x="3.1387%" y="254.50"></text></g><g><title>to_csv (pandas/core/generic.py:3961) (114 samples, 1.03%)</title><rect x="2.8887%" y="260" width="1.0323%" height="15" fill="rgb(223,4,10)" fg:x="319" fg:w="114"/><text x="3.1387%" y="270.50"></text></g><g><title>to_csv (pandas/io/formats/format.py:1014) (114 samples, 1.03%)</title><rect x="2.8887%" y="276" width="1.0323%" height="15" fill="rgb(234,103,6)" fg:x="319" fg:w="114"/><text x="3.1387%" y="286.50"></text></g><g><title>save (pandas/io/formats/csvs.py:270) (113 samples, 1.02%)</title><rect x="2.8978%" y="292" width="1.0233%" height="15" fill="rgb(227,97,0)" fg:x="320" fg:w="113"/><text x="3.1478%" y="302.50"></text></g><g><title>_save (pandas/io/formats/csvs.py:275) (113 samples, 1.02%)</title><rect x="2.8978%" y="308" width="1.0233%" height="15" fill="rgb(234,150,53)" fg:x="320" fg:w="113"/><text x="3.1478%" y="318.50"></text></g><g><title>_save_body (pandas/io/formats/csvs.py:313) (113 samples, 1.02%)</title><rect x="2.8978%" y="324" width="1.0233%" height="15" fill="rgb(228,201,54)" fg:x="320" fg:w="113"/><text x="3.1478%" y="334.50"></text></g><g><title>_save_chunk (pandas/io/formats/csvs.py:324) (43 samples, 0.39%)</title><rect x="3.5316%" y="340" width="0.3894%" height="15" fill="rgb(222,22,37)" fg:x="390" fg:w="43"/><text x="3.7816%" y="350.50"></text></g><g><title>__obtain_dynawo_curve (src/dycov/core/operating_condition.py:1136) (230 samples, 2.08%)</title><rect x="1.8835%" y="180" width="2.0828%" height="15" fill="rgb(237,53,32)" fg:x="208" fg:w="230"/><text x="2.1335%" y="190.50">_..</text></g><g><title>create_curves (src/dycov/dynawo/dynawo.py:411) (13 samples, 0.12%)</title><rect x="4.0659%" y="212" width="0.1177%" height="15" fill="rgb(233,25,53)" fg:x="449" fg:w="13"/><text x="4.3159%" y="222.50"></text></g><g><title>read_csv (pandas/io/parsers/readers.py:1024) (13 samples, 0.12%)</title><rect x="4.0659%" y="228" width="0.1177%" height="15" fill="rgb(210,40,34)" fg:x="449" fg:w="13"/><text x="4.3159%" y="238.50"></text></g><g><title>get_values_for_csv (pandas/core/internals/blocks.py:780) (13 samples, 0.12%)</title><rect x="4.4191%" y="388" width="0.1177%" height="15" fill="rgb(241,220,44)" fg:x="488" fg:w="13"/><text x="4.6691%" y="398.50"></text></g><g><title>_save_chunk (pandas/io/formats/csvs.py:320) (19 samples, 0.17%)</title><rect x="4.4191%" y="324" width="0.1721%" height="15" fill="rgb(235,28,35)" fg:x="488" fg:w="19"/><text x="4.6691%" y="334.50"></text></g><g><title>_get_values_for_csv (pandas/core/frame.py:1399) (19 samples, 0.17%)</title><rect x="4.4191%" y="340" width="0.1721%" height="15" fill="rgb(210,56,17)" fg:x="488" fg:w="19"/><text x="4.6691%" y="350.50"></text></g><g><title>get_values_for_csv (pandas/core/internals/managers.py:467) (19 samples, 0.17%)</title><rect x="4.4191%" y="356" width="0.1721%" height="15" fill="rgb(224,130,29)" fg:x="488" fg:w="19"/><text x="4.6691%" y="366.50"></text></g><g><title>apply (pandas/core/internals/managers.py:364) (19 samples, 0.17%)</title><rect x="4.4191%" y="372" width="0.1721%" height="15" fill="rgb(235,212,8)" fg:x="488" fg:w="19"/><text x="4.6691%" y="382.50"></text></g><g><title>validate (src/dycov/core/operating_condition.py:1908) (394 samples, 3.57%)</title><rect x="1.0776%" y="148" width="3.5679%" height="15" fill="rgb(223,33,50)" fg:x="119" fg:w="394"/><text x="1.3276%" y="158.50">vali..</text></g><g><title>__obtain_curve (src/dycov/core/operating_condition.py:1349) (329 samples, 2.98%)</title><rect x="1.6662%" y="164" width="2.9793%" height="15" fill="rgb(219,149,13)" fg:x="184" fg:w="329"/><text x="1.9162%" y="174.50">__o..</text></g><g><title>__obtain_dynawo_curve (src/dycov/core/operating_condition.py:1152) (74 samples, 0.67%)</title><rect x="3.9754%" y="180" width="0.6701%" height="15" fill="rgb(250,156,29)" fg:x="439" fg:w="74"/><text x="4.2254%" y="190.50"></text></g><g><title>__execute_dynawo (src/dycov/core/operating_condition.py:918) (64 samples, 0.58%)</title><rect x="4.0659%" y="196" width="0.5796%" height="15" fill="rgb(216,193,19)" fg:x="449" fg:w="64"/><text x="4.3159%" y="206.50"></text></g><g><title>create_curves (src/dycov/dynawo/dynawo.py:571) (26 samples, 0.24%)</title><rect x="4.4100%" y="212" width="0.2354%" height="15" fill="rgb(216,135,14)" fg:x="487" fg:w="26"/><text x="4.6600%" y="222.50"></text></g><g><title>wrapper (pandas/util/_decorators.py:333) (26 samples, 0.24%)</title><rect x="4.4100%" y="228" width="0.2354%" height="15" fill="rgb(241,47,5)" fg:x="487" fg:w="26"/><text x="4.6600%" y="238.50"></text></g><g><title>to_csv (pandas/core/generic.py:3961) (26 samples, 0.24%)</title><rect x="4.4100%" y="244" width="0.2354%" height="15" fill="rgb(233,42,35)" fg:x="487" fg:w="26"/><text x="4.6600%" y="254.50"></text></g><g><title>to_csv (pandas/io/formats/format.py:1014) (26 samples, 0.24%)</title><rect x="4.4100%" y="260" width="0.2354%" height="15" fill="rgb(231,13,6)" fg:x="487" fg:w="26"/><text x="4.6600%" y="270.50"></text></g><g><title>save (pandas/io/formats/csvs.py:270) (26 samples, 0.24%)</title><rect x="4.4100%" y="276" width="0.2354%" height="15" fill="rgb(207,181,40)" fg:x="487" fg:w="26"/><text x="4.6600%" y="286.50"></text></g><g><title>_save (pandas/io/formats/csvs.py:275) (25 samples, 0.23%)</title><rect x="4.4191%" y="292" width="0.2264%" height="15" fill="rgb(254,173,49)" fg:x="488" fg:w="25"/><text x="4.6691%" y="302.50"></text></g><g><title>_save_body (pandas/io/formats/csvs.py:313) (25 samples, 0.23%)</title><rect x="4.4191%" y="308" width="0.2264%" height="15" fill="rgb(221,1,38)" fg:x="488" fg:w="25"/><text x="4.6691%" y="318.50"></text></g><g><title>_getitem_iterable (pandas/core/indexing.py:1361) (14 samples, 0.13%)</title><rect x="4.9353%" y="276" width="0.1268%" height="15" fill="rgb(206,124,46)" fg:x="545" fg:w="14"/><text x="5.1853%" y="286.50"></text></g><g><title>_get_listlike_indexer (pandas/core/indexing.py:1559) (14 samples, 0.13%)</title><rect x="4.9353%" y="292" width="0.1268%" height="15" fill="rgb(249,21,11)" fg:x="545" fg:w="14"/><text x="5.1853%" y="302.50"></text></g><g><title>interpolate (src/dycov/sigpro/interpolation.py:124) (20 samples, 0.18%)</title><rect x="4.9081%" y="196" width="0.1811%" height="15" fill="rgb(222,201,40)" fg:x="542" fg:w="20"/><text x="5.1581%" y="206.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1143) (17 samples, 0.15%)</title><rect x="4.9353%" y="212" width="0.1539%" height="15" fill="rgb(235,61,29)" fg:x="545" fg:w="17"/><text x="5.1853%" y="222.50"></text></g><g><title>_get_with (pandas/core/series.py:1170) (17 samples, 0.15%)</title><rect x="4.9353%" y="228" width="0.1539%" height="15" fill="rgb(219,207,3)" fg:x="545" fg:w="17"/><text x="5.1853%" y="238.50"></text></g><g><title>__getitem__ (pandas/core/indexing.py:1192) (17 samples, 0.15%)</title><rect x="4.9353%" y="244" width="0.1539%" height="15" fill="rgb(222,56,46)" fg:x="545" fg:w="17"/><text x="5.1853%" y="254.50"></text></g><g><title>_getitem_axis (pandas/core/indexing.py:1421) (17 samples, 0.15%)</title><rect x="4.9353%" y="260" width="0.1539%" height="15" fill="rgb(239,76,54)" fg:x="545" fg:w="17"/><text x="5.1853%" y="270.50"></text></g><g><title>__call__ (scipy/interpolate/_interpolate.py:1012) (42 samples, 0.38%)</title><rect x="5.1073%" y="212" width="0.3803%" height="15" fill="rgb(231,124,27)" fg:x="564" fg:w="42"/><text x="5.3573%" y="222.50"></text></g><g><title>_evaluate (scipy/interpolate/_interpolate.py:1083) (42 samples, 0.38%)</title><rect x="5.1073%" y="228" width="0.3803%" height="15" fill="rgb(249,195,6)" fg:x="564" fg:w="42"/><text x="5.3573%" y="238.50"></text></g><g><title>interpolate (src/dycov/sigpro/interpolation.py:125) (58 samples, 0.53%)</title><rect x="5.0892%" y="196" width="0.5252%" height="15" fill="rgb(237,174,47)" fg:x="562" fg:w="58"/><text x="5.3392%" y="206.50"></text></g><g><title>__call__ (scipy/interpolate/_interpolate.py:1012) (40 samples, 0.36%)</title><rect x="5.6235%" y="212" width="0.3622%" height="15" fill="rgb(206,201,31)" fg:x="621" fg:w="40"/><text x="5.8735%" y="222.50"></text></g><g><title>_evaluate (scipy/interpolate/_interpolate.py:1083) (40 samples, 0.36%)</title><rect x="5.6235%" y="228" width="0.3622%" height="15" fill="rgb(231,57,52)" fg:x="621" fg:w="40"/><text x="5.8735%" y="238.50"></text></g><g><title>interpolate (src/dycov/sigpro/interpolation.py:126) (47 samples, 0.43%)</title><rect x="5.6144%" y="196" width="0.4256%" height="15" fill="rgb(248,177,22)" fg:x="620" fg:w="47"/><text x="5.8644%" y="206.50"></text></g><g><title>__validate_model (src/dycov/core/operating_condition.py:1472) (153 samples, 1.39%)</title><rect x="4.8085%" y="180" width="1.3855%" height="15" fill="rgb(215,211,37)" fg:x="531" fg:w="153"/><text x="5.0585%" y="190.50"></text></g><g><title>interpolate (src/dycov/sigpro/interpolation.py:130) (17 samples, 0.15%)</title><rect x="6.0400%" y="196" width="0.1539%" height="15" fill="rgb(241,128,51)" fg:x="667" fg:w="17"/><text x="6.2900%" y="206.50"></text></g><g><title>__init__ (pandas/core/frame.py:767) (17 samples, 0.15%)</title><rect x="6.0400%" y="212" width="0.1539%" height="15" fill="rgb(227,165,31)" fg:x="667" fg:w="17"/><text x="6.2900%" y="222.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:503) (17 samples, 0.15%)</title><rect x="6.0400%" y="228" width="0.1539%" height="15" fill="rgb(228,167,24)" fg:x="667" fg:w="17"/><text x="6.2900%" y="238.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:152) (17 samples, 0.15%)</title><rect x="6.0400%" y="244" width="0.1539%" height="15" fill="rgb(228,143,12)" fg:x="667" fg:w="17"/><text x="6.2900%" y="254.50"></text></g><g><title>create_block_manager_from_column_arrays (pandas/core/internals/managers.py:2138) (17 samples, 0.15%)</title><rect x="6.0400%" y="260" width="0.1539%" height="15" fill="rgb(249,149,8)" fg:x="667" fg:w="17"/><text x="6.2900%" y="270.50"></text></g><g><title>_form_blocks (pandas/core/internals/managers.py:2211) (17 samples, 0.15%)</title><rect x="6.0400%" y="276" width="0.1539%" height="15" fill="rgb(243,35,44)" fg:x="667" fg:w="17"/><text x="6.2900%" y="286.50"></text></g><g><title>_stack_arrays (pandas/core/internals/managers.py:2253) (17 samples, 0.15%)</title><rect x="6.0400%" y="292" width="0.1539%" height="15" fill="rgb(246,89,9)" fg:x="667" fg:w="17"/><text x="6.2900%" y="302.50"></text></g><g><title>get_windows_curves (src/dycov/sigpro/interpolation.py:100) (266 samples, 2.41%)</title><rect x="6.4837%" y="196" width="2.4088%" height="15" fill="rgb(233,213,13)" fg:x="716" fg:w="266"/><text x="6.7337%" y="206.50">ge..</text></g><g><title>get_windows_curves (src/dycov/sigpro/interpolation.py:101) (272 samples, 2.46%)</title><rect x="8.8925%" y="196" width="2.4631%" height="15" fill="rgb(233,141,41)" fg:x="982" fg:w="272"/><text x="9.1425%" y="206.50">ge..</text></g><g><title>get_windows_curves (src/dycov/sigpro/interpolation.py:102) (243 samples, 2.20%)</title><rect x="11.3556%" y="196" width="2.2005%" height="15" fill="rgb(239,167,4)" fg:x="1254" fg:w="243"/><text x="11.6056%" y="206.50">g..</text></g><g><title>sanitize_array (pandas/core/construction.py:641) (18 samples, 0.16%)</title><rect x="13.6285%" y="276" width="0.1630%" height="15" fill="rgb(209,217,16)" fg:x="1505" fg:w="18"/><text x="13.8785%" y="286.50"></text></g><g><title>maybe_convert_platform (pandas/core/dtypes/cast.py:131) (51 samples, 0.46%)</title><rect x="13.7915%" y="292" width="0.4618%" height="15" fill="rgb(219,88,35)" fg:x="1523" fg:w="51"/><text x="14.0415%" y="302.50"></text></g><g><title>construct_1d_object_array_from_listlike (pandas/core/dtypes/cast.py:1598) (48 samples, 0.43%)</title><rect x="13.8187%" y="308" width="0.4347%" height="15" fill="rgb(220,193,23)" fg:x="1526" fg:w="48"/><text x="14.0687%" y="318.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:119) (193 samples, 1.75%)</title><rect x="13.5742%" y="244" width="1.7477%" height="15" fill="rgb(230,90,52)" fg:x="1499" fg:w="193"/><text x="13.8242%" y="254.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:629) (193 samples, 1.75%)</title><rect x="13.5742%" y="260" width="1.7477%" height="15" fill="rgb(252,106,19)" fg:x="1499" fg:w="193"/><text x="13.8242%" y="270.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:651) (169 samples, 1.53%)</title><rect x="13.7915%" y="276" width="1.5304%" height="15" fill="rgb(206,74,20)" fg:x="1523" fg:w="169"/><text x="14.0415%" y="286.50"></text></g><g><title>maybe_convert_platform (pandas/core/dtypes/cast.py:139) (118 samples, 1.07%)</title><rect x="14.2534%" y="292" width="1.0686%" height="15" fill="rgb(230,138,44)" fg:x="1574" fg:w="118"/><text x="14.5034%" y="302.50"></text></g><g><title>__init__ (pandas/core/frame.py:767) (205 samples, 1.86%)</title><rect x="13.5561%" y="212" width="1.8564%" height="15" fill="rgb(235,182,43)" fg:x="1497" fg:w="205"/><text x="13.8061%" y="222.50">_..</text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:503) (203 samples, 1.84%)</title><rect x="13.5742%" y="228" width="1.8383%" height="15" fill="rgb(242,16,51)" fg:x="1499" fg:w="203"/><text x="13.8242%" y="238.50">d..</text></g><g><title>__validate_model (src/dycov/core/operating_condition.py:1475) (1,019 samples, 9.23%)</title><rect x="6.1940%" y="180" width="9.2276%" height="15" fill="rgb(248,9,4)" fg:x="684" fg:w="1019"/><text x="6.4440%" y="190.50">__validate_mo..</text></g><g><title>get_windows_curves (src/dycov/sigpro/interpolation.py:104) (206 samples, 1.87%)</title><rect x="13.5561%" y="196" width="1.8654%" height="15" fill="rgb(210,31,22)" fg:x="1497" fg:w="206"/><text x="13.8061%" y="206.50">g..</text></g><g><title>__validate_model (src/dycov/core/operating_condition.py:1477) (27 samples, 0.24%)</title><rect x="15.4215%" y="180" width="0.2445%" height="15" fill="rgb(239,54,39)" fg:x="1703" fg:w="27"/><text x="15.6715%" y="190.50"></text></g><g><title>__validate_model (src/dycov/core/operating_condition.py:1478) (13 samples, 0.12%)</title><rect x="15.6660%" y="180" width="0.1177%" height="15" fill="rgb(230,99,41)" fg:x="1730" fg:w="13"/><text x="15.9160%" y="190.50"></text></g><g><title>resampling_signal (src/dycov/sigpro/sigpro.py:84) (52 samples, 0.47%)</title><rect x="15.7928%" y="196" width="0.4709%" height="15" fill="rgb(253,106,12)" fg:x="1744" fg:w="52"/><text x="16.0428%" y="206.50"></text></g><g><title>resample (src/dycov/sigpro/sigpro.py:36) (35 samples, 0.32%)</title><rect x="15.9468%" y="212" width="0.3169%" height="15" fill="rgb(213,46,41)" fg:x="1761" fg:w="35"/><text x="16.1968%" y="222.50"></text></g><g><title>interp (numpy/lib/function_base.py:1599) (32 samples, 0.29%)</title><rect x="15.9739%" y="228" width="0.2898%" height="15" fill="rgb(215,133,35)" fg:x="1764" fg:w="32"/><text x="16.2239%" y="238.50"></text></g><g><title>resampling_signal (src/dycov/sigpro/sigpro.py:87) (48 samples, 0.43%)</title><rect x="16.2637%" y="196" width="0.4347%" height="15" fill="rgb(213,28,5)" fg:x="1796" fg:w="48"/><text x="16.5137%" y="206.50"></text></g><g><title>__validate_model (src/dycov/core/operating_condition.py:1492) (105 samples, 0.95%)</title><rect x="15.7928%" y="180" width="0.9508%" height="15" fill="rgb(215,77,49)" fg:x="1744" fg:w="105"/><text x="16.0428%" y="190.50"></text></g><g><title>__validate_model (src/dycov/core/operating_condition.py:1494) (15 samples, 0.14%)</title><rect x="16.7436%" y="180" width="0.1358%" height="15" fill="rgb(248,100,22)" fg:x="1849" fg:w="15"/><text x="16.9936%" y="190.50"></text></g><g><title>resampling_signal (src/dycov/sigpro/sigpro.py:90) (12 samples, 0.11%)</title><rect x="16.7708%" y="196" width="0.1087%" height="15" fill="rgb(208,67,9)" fg:x="1852" fg:w="12"/><text x="17.0208%" y="206.50"></text></g><g><title>lowpass_filter (src/dycov/sigpro/sigpro.py:42) (12 samples, 0.11%)</title><rect x="16.7708%" y="212" width="0.1087%" height="15" fill="rgb(219,133,21)" fg:x="1852" fg:w="12"/><text x="17.0208%" y="222.50"></text></g><g><title>bessel (scipy/signal/_filter_design.py:3734) (12 samples, 0.11%)</title><rect x="16.7708%" y="228" width="0.1087%" height="15" fill="rgb(246,46,29)" fg:x="1852" fg:w="12"/><text x="17.0208%" y="238.50"></text></g><g><title>resampling_signal (src/dycov/sigpro/sigpro.py:84) (147 samples, 1.33%)</title><rect x="16.8885%" y="196" width="1.3312%" height="15" fill="rgb(246,185,52)" fg:x="1865" fg:w="147"/><text x="17.1385%" y="206.50"></text></g><g><title>resample (src/dycov/sigpro/sigpro.py:36) (95 samples, 0.86%)</title><rect x="17.3594%" y="212" width="0.8603%" height="15" fill="rgb(252,136,11)" fg:x="1917" fg:w="95"/><text x="17.6094%" y="222.50"></text></g><g><title>interp (numpy/lib/function_base.py:1599) (93 samples, 0.84%)</title><rect x="17.3775%" y="228" width="0.8422%" height="15" fill="rgb(219,138,53)" fg:x="1919" fg:w="93"/><text x="17.6275%" y="238.50"></text></g><g><title>resampling_signal (src/dycov/sigpro/sigpro.py:87) (128 samples, 1.16%)</title><rect x="18.2197%" y="196" width="1.1591%" height="15" fill="rgb(211,51,23)" fg:x="2012" fg:w="128"/><text x="18.4697%" y="206.50"></text></g><g><title>iirfilter (scipy/signal/_filter_design.py:2587) (20 samples, 0.18%)</title><rect x="19.3969%" y="244" width="0.1811%" height="15" fill="rgb(247,221,28)" fg:x="2142" fg:w="20"/><text x="19.6469%" y="254.50"></text></g><g><title>besselap (scipy/signal/_filter_design.py:4898) (20 samples, 0.18%)</title><rect x="19.3969%" y="260" width="0.1811%" height="15" fill="rgb(251,222,45)" fg:x="2142" fg:w="20"/><text x="19.6469%" y="270.50"></text></g><g><title>lowpass_filter (src/dycov/sigpro/sigpro.py:42) (25 samples, 0.23%)</title><rect x="19.3788%" y="212" width="0.2264%" height="15" fill="rgb(217,162,53)" fg:x="2140" fg:w="25"/><text x="19.6288%" y="222.50"></text></g><g><title>bessel (scipy/signal/_filter_design.py:3734) (25 samples, 0.23%)</title><rect x="19.3788%" y="228" width="0.2264%" height="15" fill="rgb(229,93,14)" fg:x="2140" fg:w="25"/><text x="19.6288%" y="238.50"></text></g><g><title>resampling_signal (src/dycov/sigpro/sigpro.py:90) (34 samples, 0.31%)</title><rect x="19.3788%" y="196" width="0.3079%" height="15" fill="rgb(209,67,49)" fg:x="2140" fg:w="34"/><text x="19.6288%" y="206.50"></text></g><g><title>__validate_model (src/dycov/core/operating_condition.py:1495) (313 samples, 2.83%)</title><rect x="16.8795%" y="180" width="2.8344%" height="15" fill="rgb(213,87,29)" fg:x="1864" fg:w="313"/><text x="17.1295%" y="190.50">__..</text></g><g><title>resampling_signal (src/dycov/sigpro/sigpro.py:84) (172 samples, 1.56%)</title><rect x="19.7138%" y="196" width="1.5575%" height="15" fill="rgb(205,151,52)" fg:x="2177" fg:w="172"/><text x="19.9638%" y="206.50"></text></g><g><title>resample (src/dycov/sigpro/sigpro.py:36) (126 samples, 1.14%)</title><rect x="20.1304%" y="212" width="1.1410%" height="15" fill="rgb(253,215,39)" fg:x="2223" fg:w="126"/><text x="20.3804%" y="222.50"></text></g><g><title>interp (numpy/lib/function_base.py:1599) (124 samples, 1.12%)</title><rect x="20.1485%" y="228" width="1.1229%" height="15" fill="rgb(221,220,41)" fg:x="2225" fg:w="124"/><text x="20.3985%" y="238.50"></text></g><g><title>resampling_signal (src/dycov/sigpro/sigpro.py:87) (169 samples, 1.53%)</title><rect x="21.2714%" y="196" width="1.5304%" height="15" fill="rgb(218,133,21)" fg:x="2349" fg:w="169"/><text x="21.5214%" y="206.50"></text></g><g><title>_bessel_zeros (scipy/signal/_filter_design.py:4770) (15 samples, 0.14%)</title><rect x="22.8289%" y="276" width="0.1358%" height="15" fill="rgb(221,193,43)" fg:x="2521" fg:w="15"/><text x="23.0789%" y="286.50"></text></g><g><title>iirfilter (scipy/signal/_filter_design.py:2587) (21 samples, 0.19%)</title><rect x="22.8108%" y="244" width="0.1902%" height="15" fill="rgb(240,128,52)" fg:x="2519" fg:w="21"/><text x="23.0608%" y="254.50"></text></g><g><title>besselap (scipy/signal/_filter_design.py:4898) (21 samples, 0.19%)</title><rect x="22.8108%" y="260" width="0.1902%" height="15" fill="rgb(253,114,12)" fg:x="2519" fg:w="21"/><text x="23.0608%" y="270.50"></text></g><g><title>lowpass_filter (src/dycov/sigpro/sigpro.py:42) (29 samples, 0.26%)</title><rect x="22.8018%" y="212" width="0.2626%" height="15" fill="rgb(215,223,47)" fg:x="2518" fg:w="29"/><text x="23.0518%" y="222.50"></text></g><g><title>bessel (scipy/signal/_filter_design.py:3734) (28 samples, 0.25%)</title><rect x="22.8108%" y="228" width="0.2536%" height="15" fill="rgb(248,225,23)" fg:x="2519" fg:w="28"/><text x="23.0608%" y="238.50"></text></g><g><title>resampling_signal (src/dycov/sigpro/sigpro.py:90) (49 samples, 0.44%)</title><rect x="22.8018%" y="196" width="0.4437%" height="15" fill="rgb(250,108,0)" fg:x="2518" fg:w="49"/><text x="23.0518%" y="206.50"></text></g><g><title>lowpass_filter (src/dycov/sigpro/sigpro.py:43) (20 samples, 0.18%)</title><rect x="23.0644%" y="212" width="0.1811%" height="15" fill="rgb(228,208,7)" fg:x="2547" fg:w="20"/><text x="23.3144%" y="222.50"></text></g><g><title>__validate_model (src/dycov/core/operating_condition.py:1496) (395 samples, 3.58%)</title><rect x="19.7138%" y="180" width="3.5769%" height="15" fill="rgb(244,45,10)" fg:x="2177" fg:w="395"/><text x="19.9638%" y="190.50">__va..</text></g><g><title>get_windows_curves (src/dycov/sigpro/interpolation.py:100) (246 samples, 2.23%)</title><rect x="23.6168%" y="196" width="2.2277%" height="15" fill="rgb(207,125,25)" fg:x="2608" fg:w="246"/><text x="23.8668%" y="206.50">g..</text></g><g><title>get_windows_curves (src/dycov/sigpro/interpolation.py:101) (241 samples, 2.18%)</title><rect x="25.8444%" y="196" width="2.1824%" height="15" fill="rgb(210,195,18)" fg:x="2854" fg:w="241"/><text x="26.0944%" y="206.50">g..</text></g><g><title>get_windows_curves (src/dycov/sigpro/interpolation.py:102) (217 samples, 1.97%)</title><rect x="28.0268%" y="196" width="1.9650%" height="15" fill="rgb(249,80,12)" fg:x="3095" fg:w="217"/><text x="28.2768%" y="206.50">g..</text></g><g><title>sanitize_array (pandas/core/construction.py:641) (14 samples, 0.13%)</title><rect x="30.0733%" y="276" width="0.1268%" height="15" fill="rgb(221,65,9)" fg:x="3321" fg:w="14"/><text x="30.3233%" y="286.50"></text></g><g><title>maybe_convert_platform (pandas/core/dtypes/cast.py:131) (59 samples, 0.53%)</title><rect x="30.2001%" y="292" width="0.5343%" height="15" fill="rgb(235,49,36)" fg:x="3335" fg:w="59"/><text x="30.4501%" y="302.50"></text></g><g><title>construct_1d_object_array_from_listlike (pandas/core/dtypes/cast.py:1598) (55 samples, 0.50%)</title><rect x="30.2363%" y="308" width="0.4981%" height="15" fill="rgb(225,32,20)" fg:x="3339" fg:w="55"/><text x="30.4863%" y="318.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:119) (188 samples, 1.70%)</title><rect x="30.0281%" y="244" width="1.7024%" height="15" fill="rgb(215,141,46)" fg:x="3316" fg:w="188"/><text x="30.2781%" y="254.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:629) (188 samples, 1.70%)</title><rect x="30.0281%" y="260" width="1.7024%" height="15" fill="rgb(250,160,47)" fg:x="3316" fg:w="188"/><text x="30.2781%" y="270.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:651) (169 samples, 1.53%)</title><rect x="30.2001%" y="276" width="1.5304%" height="15" fill="rgb(216,222,40)" fg:x="3335" fg:w="169"/><text x="30.4501%" y="286.50"></text></g><g><title>maybe_convert_platform (pandas/core/dtypes/cast.py:139) (109 samples, 0.99%)</title><rect x="30.7435%" y="292" width="0.9871%" height="15" fill="rgb(234,217,39)" fg:x="3395" fg:w="109"/><text x="30.9935%" y="302.50"></text></g><g><title>__validate_model (src/dycov/core/operating_condition.py:1498) (938 samples, 8.49%)</title><rect x="23.2908%" y="180" width="8.4941%" height="15" fill="rgb(207,178,40)" fg:x="2572" fg:w="938"/><text x="23.5408%" y="190.50">__validate_m..</text></g><g><title>get_windows_curves (src/dycov/sigpro/interpolation.py:104) (198 samples, 1.79%)</title><rect x="29.9919%" y="196" width="1.7930%" height="15" fill="rgb(221,136,13)" fg:x="3312" fg:w="198"/><text x="30.2419%" y="206.50">g..</text></g><g><title>__init__ (pandas/core/frame.py:767) (198 samples, 1.79%)</title><rect x="29.9919%" y="212" width="1.7930%" height="15" fill="rgb(249,199,10)" fg:x="3312" fg:w="198"/><text x="30.2419%" y="222.50">_..</text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:503) (195 samples, 1.77%)</title><rect x="30.0190%" y="228" width="1.7658%" height="15" fill="rgb(249,222,13)" fg:x="3315" fg:w="195"/><text x="30.2690%" y="238.50"></text></g><g><title>__validate_model (src/dycov/core/operating_condition.py:1500) (27 samples, 0.24%)</title><rect x="31.7848%" y="180" width="0.2445%" height="15" fill="rgb(244,185,38)" fg:x="3510" fg:w="27"/><text x="32.0348%" y="190.50"></text></g><g><title>__validate_model (src/dycov/core/operating_condition.py:1501) (14 samples, 0.13%)</title><rect x="32.0293%" y="180" width="0.1268%" height="15" fill="rgb(236,202,9)" fg:x="3537" fg:w="14"/><text x="32.2793%" y="190.50"></text></g><g><title>resample (src/dycov/sigpro/sigpro.py:36) (24 samples, 0.22%)</title><rect x="32.4549%" y="212" width="0.2173%" height="15" fill="rgb(250,229,37)" fg:x="3584" fg:w="24"/><text x="32.7049%" y="222.50"></text></g><g><title>interp (numpy/lib/function_base.py:1599) (24 samples, 0.22%)</title><rect x="32.4549%" y="228" width="0.2173%" height="15" fill="rgb(206,174,23)" fg:x="3584" fg:w="24"/><text x="32.7049%" y="238.50"></text></g><g><title>resampling_signal (src/dycov/sigpro/sigpro.py:84) (41 samples, 0.37%)</title><rect x="32.3191%" y="196" width="0.3713%" height="15" fill="rgb(211,33,43)" fg:x="3569" fg:w="41"/><text x="32.5691%" y="206.50"></text></g><g><title>resampling_signal (src/dycov/sigpro/sigpro.py:87) (46 samples, 0.42%)</title><rect x="32.6904%" y="196" width="0.4166%" height="15" fill="rgb(245,58,50)" fg:x="3610" fg:w="46"/><text x="32.9404%" y="206.50"></text></g><g><title>_bessel_zeros (scipy/signal/_filter_design.py:4770) (12 samples, 0.11%)</title><rect x="33.1160%" y="276" width="0.1087%" height="15" fill="rgb(244,68,36)" fg:x="3657" fg:w="12"/><text x="33.3660%" y="286.50"></text></g><g><title>iirfilter (scipy/signal/_filter_design.py:2587) (17 samples, 0.15%)</title><rect x="33.1069%" y="244" width="0.1539%" height="15" fill="rgb(232,229,15)" fg:x="3656" fg:w="17"/><text x="33.3569%" y="254.50"></text></g><g><title>besselap (scipy/signal/_filter_design.py:4898) (17 samples, 0.15%)</title><rect x="33.1069%" y="260" width="0.1539%" height="15" fill="rgb(254,30,23)" fg:x="3656" fg:w="17"/><text x="33.3569%" y="270.50"></text></g><g><title>lowpass_filter (src/dycov/sigpro/sigpro.py:42) (20 samples, 0.18%)</title><rect x="33.1069%" y="212" width="0.1811%" height="15" fill="rgb(235,160,14)" fg:x="3656" fg:w="20"/><text x="33.3569%" y="222.50"></text></g><g><title>bessel (scipy/signal/_filter_design.py:3734) (20 samples, 0.18%)</title><rect x="33.1069%" y="228" width="0.1811%" height="15" fill="rgb(212,155,44)" fg:x="3656" fg:w="20"/><text x="33.3569%" y="238.50"></text></g><g><title>resampling_signal (src/dycov/sigpro/sigpro.py:90) (30 samples, 0.27%)</title><rect x="33.1069%" y="196" width="0.2717%" height="15" fill="rgb(226,2,50)" fg:x="3656" fg:w="30"/><text x="33.3569%" y="206.50"></text></g><g><title>__validate_model (src/dycov/core/operating_condition.py:1517) (120 samples, 1.09%)</title><rect x="32.3101%" y="180" width="1.0867%" height="15" fill="rgb(234,177,6)" fg:x="3568" fg:w="120"/><text x="32.5601%" y="190.50"></text></g><g><title>resampling_signal (src/dycov/sigpro/sigpro.py:84) (126 samples, 1.14%)</title><rect x="33.4420%" y="196" width="1.1410%" height="15" fill="rgb(217,24,9)" fg:x="3693" fg:w="126"/><text x="33.6920%" y="206.50"></text></g><g><title>resample (src/dycov/sigpro/sigpro.py:36) (86 samples, 0.78%)</title><rect x="33.8042%" y="212" width="0.7788%" height="15" fill="rgb(220,13,46)" fg:x="3733" fg:w="86"/><text x="34.0542%" y="222.50"></text></g><g><title>interp (numpy/lib/function_base.py:1599) (84 samples, 0.76%)</title><rect x="33.8223%" y="228" width="0.7607%" height="15" fill="rgb(239,221,27)" fg:x="3735" fg:w="84"/><text x="34.0723%" y="238.50"></text></g><g><title>resampling_signal (src/dycov/sigpro/sigpro.py:87) (132 samples, 1.20%)</title><rect x="34.5830%" y="196" width="1.1953%" height="15" fill="rgb(222,198,25)" fg:x="3819" fg:w="132"/><text x="34.8330%" y="206.50"></text></g><g><title>iirfilter (scipy/signal/_filter_design.py:2587) (13 samples, 0.12%)</title><rect x="35.7874%" y="244" width="0.1177%" height="15" fill="rgb(211,99,13)" fg:x="3952" fg:w="13"/><text x="36.0374%" y="254.50"></text></g><g><title>besselap (scipy/signal/_filter_design.py:4898) (13 samples, 0.12%)</title><rect x="35.7874%" y="260" width="0.1177%" height="15" fill="rgb(232,111,31)" fg:x="3952" fg:w="13"/><text x="36.0374%" y="270.50"></text></g><g><title>lowpass_filter (src/dycov/sigpro/sigpro.py:42) (18 samples, 0.16%)</title><rect x="35.7783%" y="212" width="0.1630%" height="15" fill="rgb(245,82,37)" fg:x="3951" fg:w="18"/><text x="36.0283%" y="222.50"></text></g><g><title>bessel (scipy/signal/_filter_design.py:3734) (17 samples, 0.15%)</title><rect x="35.7874%" y="228" width="0.1539%" height="15" fill="rgb(227,149,46)" fg:x="3952" fg:w="17"/><text x="36.0374%" y="238.50"></text></g><g><title>resampling_signal (src/dycov/sigpro/sigpro.py:90) (22 samples, 0.20%)</title><rect x="35.7783%" y="196" width="0.1992%" height="15" fill="rgb(218,36,50)" fg:x="3951" fg:w="22"/><text x="36.0283%" y="206.50"></text></g><g><title>__validate_model (src/dycov/core/operating_condition.py:1520) (284 samples, 2.57%)</title><rect x="33.4420%" y="180" width="2.5718%" height="15" fill="rgb(226,80,48)" fg:x="3693" fg:w="284"/><text x="33.6920%" y="190.50">__..</text></g><g><title>resampling_signal (src/dycov/sigpro/sigpro.py:84) (176 samples, 1.59%)</title><rect x="36.0138%" y="196" width="1.5938%" height="15" fill="rgb(238,224,15)" fg:x="3977" fg:w="176"/><text x="36.2638%" y="206.50"></text></g><g><title>resample (src/dycov/sigpro/sigpro.py:36) (106 samples, 0.96%)</title><rect x="36.6477%" y="212" width="0.9599%" height="15" fill="rgb(241,136,10)" fg:x="4047" fg:w="106"/><text x="36.8977%" y="222.50"></text></g><g><title>interp (numpy/lib/function_base.py:1599) (106 samples, 0.96%)</title><rect x="36.6477%" y="228" width="0.9599%" height="15" fill="rgb(208,32,45)" fg:x="4047" fg:w="106"/><text x="36.8977%" y="238.50"></text></g><g><title>resampling_signal (src/dycov/sigpro/sigpro.py:87) (181 samples, 1.64%)</title><rect x="37.6075%" y="196" width="1.6390%" height="15" fill="rgb(207,135,9)" fg:x="4153" fg:w="181"/><text x="37.8575%" y="206.50"></text></g><g><title>_bessel_zeros (scipy/signal/_filter_design.py:4770) (12 samples, 0.11%)</title><rect x="39.2919%" y="276" width="0.1087%" height="15" fill="rgb(206,86,44)" fg:x="4339" fg:w="12"/><text x="39.5419%" y="286.50"></text></g><g><title>iirfilter (scipy/signal/_filter_design.py:2587) (21 samples, 0.19%)</title><rect x="39.2647%" y="244" width="0.1902%" height="15" fill="rgb(245,177,15)" fg:x="4336" fg:w="21"/><text x="39.5147%" y="254.50"></text></g><g><title>besselap (scipy/signal/_filter_design.py:4898) (21 samples, 0.19%)</title><rect x="39.2647%" y="260" width="0.1902%" height="15" fill="rgb(206,64,50)" fg:x="4336" fg:w="21"/><text x="39.5147%" y="270.50"></text></g><g><title>lowpass_filter (src/dycov/sigpro/sigpro.py:42) (26 samples, 0.24%)</title><rect x="39.2466%" y="212" width="0.2354%" height="15" fill="rgb(234,36,40)" fg:x="4334" fg:w="26"/><text x="39.4966%" y="222.50"></text></g><g><title>bessel (scipy/signal/_filter_design.py:3734) (25 samples, 0.23%)</title><rect x="39.2556%" y="228" width="0.2264%" height="15" fill="rgb(213,64,8)" fg:x="4335" fg:w="25"/><text x="39.5056%" y="238.50"></text></g><g><title>resampling_signal (src/dycov/sigpro/sigpro.py:90) (48 samples, 0.43%)</title><rect x="39.2466%" y="196" width="0.4347%" height="15" fill="rgb(210,75,36)" fg:x="4334" fg:w="48"/><text x="39.4966%" y="206.50"></text></g><g><title>lowpass_filter (src/dycov/sigpro/sigpro.py:43) (22 samples, 0.20%)</title><rect x="39.4820%" y="212" width="0.1992%" height="15" fill="rgb(229,88,21)" fg:x="4360" fg:w="22"/><text x="39.7320%" y="222.50"></text></g><g><title>filtfilt (scipy/signal/_signaltools.py:4190) (12 samples, 0.11%)</title><rect x="39.5726%" y="228" width="0.1087%" height="15" fill="rgb(252,204,47)" fg:x="4370" fg:w="12"/><text x="39.8226%" y="238.50"></text></g><g><title>lfilter (scipy/signal/_signaltools.py:2157) (12 samples, 0.11%)</title><rect x="39.5726%" y="244" width="0.1087%" height="15" fill="rgb(208,77,27)" fg:x="4370" fg:w="12"/><text x="39.8226%" y="254.50"></text></g><g><title>__validate_model (src/dycov/core/operating_condition.py:1521) (407 samples, 3.69%)</title><rect x="36.0138%" y="180" width="3.6856%" height="15" fill="rgb(221,76,26)" fg:x="3977" fg:w="407"/><text x="36.2638%" y="190.50">__va..</text></g><g><title>check_dict_or_set_indexers (pandas/core/indexing.py:2772) (15 samples, 0.14%)</title><rect x="40.3423%" y="260" width="0.1358%" height="15" fill="rgb(225,139,18)" fg:x="4455" fg:w="15"/><text x="40.5923%" y="270.50"></text></g><g><title>check_dict_or_set_indexers (pandas/core/indexing.py:2773) (16 samples, 0.14%)</title><rect x="40.4781%" y="260" width="0.1449%" height="15" fill="rgb(230,137,11)" fg:x="4470" fg:w="16"/><text x="40.7281%" y="270.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1086) (66 samples, 0.60%)</title><rect x="40.0435%" y="244" width="0.5977%" height="15" fill="rgb(212,28,1)" fg:x="4422" fg:w="66"/><text x="40.2935%" y="254.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1087) (37 samples, 0.34%)</title><rect x="40.6411%" y="244" width="0.3351%" height="15" fill="rgb(248,164,17)" fg:x="4488" fg:w="37"/><text x="40.8911%" y="254.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1095) (26 samples, 0.24%)</title><rect x="41.1573%" y="244" width="0.2354%" height="15" fill="rgb(222,171,42)" fg:x="4545" fg:w="26"/><text x="41.4073%" y="254.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1098) (57 samples, 0.52%)</title><rect x="41.3927%" y="244" width="0.5162%" height="15" fill="rgb(243,84,45)" fg:x="4571" fg:w="57"/><text x="41.6427%" y="254.50"></text></g><g><title>get_loc (pandas/core/indexes/range.py:411) (17 samples, 0.15%)</title><rect x="42.8054%" y="276" width="0.1539%" height="15" fill="rgb(252,49,23)" fg:x="4727" fg:w="17"/><text x="43.0554%" y="286.50"></text></g><g><title>_get_value (pandas/core/series.py:1227) (126 samples, 1.14%)</title><rect x="42.2621%" y="260" width="1.1410%" height="15" fill="rgb(215,19,7)" fg:x="4667" fg:w="126"/><text x="42.5121%" y="270.50"></text></g><g><title>get_loc (pandas/core/indexes/range.py:413) (49 samples, 0.44%)</title><rect x="42.9593%" y="276" width="0.4437%" height="15" fill="rgb(238,81,41)" fg:x="4744" fg:w="49"/><text x="43.2093%" y="286.50"></text></g><g><title>calculate_errors (src/dycov/validation/model.py:317) (503 samples, 4.55%)</title><rect x="39.6994%" y="212" width="4.5549%" height="15" fill="rgb(210,199,37)" fg:x="4384" fg:w="503"/><text x="39.9494%" y="222.50">calcu..</text></g><g><title>mean_error (src/dycov/validation/common.py:540) (503 samples, 4.55%)</title><rect x="39.6994%" y="228" width="4.5549%" height="15" fill="rgb(244,192,49)" fg:x="4384" fg:w="503"/><text x="39.9494%" y="238.50">mean_..</text></g><g><title>__getitem__ (pandas/core/series.py:1111) (256 samples, 2.32%)</title><rect x="41.9361%" y="244" width="2.3182%" height="15" fill="rgb(226,211,11)" fg:x="4631" fg:w="256"/><text x="42.1861%" y="254.50">_..</text></g><g><title>_get_value (pandas/core/series.py:1230) (85 samples, 0.77%)</title><rect x="43.4846%" y="260" width="0.7697%" height="15" fill="rgb(236,162,54)" fg:x="4802" fg:w="85"/><text x="43.7346%" y="270.50"></text></g><g><title>_values (pandas/core/series.py:858) (54 samples, 0.49%)</title><rect x="43.7653%" y="276" width="0.4890%" height="15" fill="rgb(220,229,9)" fg:x="4833" fg:w="54"/><text x="44.0153%" y="286.50"></text></g><g><title>internal_values (pandas/core/internals/managers.py:2005) (26 samples, 0.24%)</title><rect x="44.0188%" y="292" width="0.2354%" height="15" fill="rgb(250,87,22)" fg:x="4861" fg:w="26"/><text x="44.2688%" y="302.50"></text></g><g><title>check_dict_or_set_indexers (pandas/core/indexing.py:2763) (13 samples, 0.12%)</title><rect x="44.8882%" y="260" width="0.1177%" height="15" fill="rgb(239,43,17)" fg:x="4957" fg:w="13"/><text x="45.1382%" y="270.50"></text></g><g><title>check_dict_or_set_indexers (pandas/core/indexing.py:2772) (12 samples, 0.11%)</title><rect x="45.1146%" y="260" width="0.1087%" height="15" fill="rgb(231,177,25)" fg:x="4982" fg:w="12"/><text x="45.3646%" y="270.50"></text></g><g><title>check_dict_or_set_indexers (pandas/core/indexing.py:2773) (14 samples, 0.13%)</title><rect x="45.2232%" y="260" width="0.1268%" height="15" fill="rgb(219,179,1)" fg:x="4994" fg:w="14"/><text x="45.4732%" y="270.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1086) (78 samples, 0.71%)</title><rect x="44.6799%" y="244" width="0.7063%" height="15" fill="rgb(238,219,53)" fg:x="4934" fg:w="78"/><text x="44.9299%" y="254.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1087) (35 samples, 0.32%)</title><rect x="45.3862%" y="244" width="0.3169%" height="15" fill="rgb(232,167,36)" fg:x="5012" fg:w="35"/><text x="45.6362%" y="254.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1095) (37 samples, 0.34%)</title><rect x="45.8028%" y="244" width="0.3351%" height="15" fill="rgb(244,19,51)" fg:x="5058" fg:w="37"/><text x="46.0528%" y="254.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1098) (49 samples, 0.44%)</title><rect x="46.1378%" y="244" width="0.4437%" height="15" fill="rgb(224,6,22)" fg:x="5095" fg:w="49"/><text x="46.3878%" y="254.50"></text></g><g><title>_get_value (pandas/core/series.py:1227) (107 samples, 0.97%)</title><rect x="46.8170%" y="260" width="0.9689%" height="15" fill="rgb(224,145,5)" fg:x="5170" fg:w="107"/><text x="47.0670%" y="270.50"></text></g><g><title>get_loc (pandas/core/indexes/range.py:413) (50 samples, 0.45%)</title><rect x="47.3332%" y="276" width="0.4528%" height="15" fill="rgb(234,130,49)" fg:x="5227" fg:w="50"/><text x="47.5832%" y="286.50"></text></g><g><title>calculate_errors (src/dycov/validation/model.py:321) (493 samples, 4.46%)</title><rect x="44.2543%" y="212" width="4.4644%" height="15" fill="rgb(254,6,2)" fg:x="4887" fg:w="493"/><text x="44.5043%" y="222.50">calcu..</text></g><g><title>mean_absolute_error (src/dycov/validation/common.py:569) (490 samples, 4.44%)</title><rect x="44.2814%" y="228" width="4.4372%" height="15" fill="rgb(208,96,46)" fg:x="4890" fg:w="490"/><text x="44.5314%" y="238.50">mean_..</text></g><g><title>__getitem__ (pandas/core/series.py:1111) (235 samples, 2.13%)</title><rect x="46.5906%" y="244" width="2.1280%" height="15" fill="rgb(239,3,39)" fg:x="5145" fg:w="235"/><text x="46.8406%" y="254.50">_..</text></g><g><title>_get_value (pandas/core/series.py:1230) (94 samples, 0.85%)</title><rect x="47.8674%" y="260" width="0.8512%" height="15" fill="rgb(233,210,1)" fg:x="5286" fg:w="94"/><text x="48.1174%" y="270.50"></text></g><g><title>_values (pandas/core/series.py:858) (62 samples, 0.56%)</title><rect x="48.1572%" y="276" width="0.5614%" height="15" fill="rgb(244,137,37)" fg:x="5318" fg:w="62"/><text x="48.4072%" y="286.50"></text></g><g><title>internal_values (pandas/core/internals/managers.py:2005) (20 samples, 0.18%)</title><rect x="48.5375%" y="292" width="0.1811%" height="15" fill="rgb(240,136,2)" fg:x="5360" fg:w="20"/><text x="48.7875%" y="302.50"></text></g><g><title>calculate (src/dycov/validation/model.py:72) (1,012 samples, 9.16%)</title><rect x="39.6994%" y="196" width="9.1642%" height="15" fill="rgb(239,18,37)" fg:x="4384" fg:w="1012"/><text x="39.9494%" y="206.50">calculate (sr..</text></g><g><title>calculate_errors (src/dycov/validation/model.py:325) (16 samples, 0.14%)</title><rect x="48.7186%" y="212" width="0.1449%" height="15" fill="rgb(218,185,22)" fg:x="5380" fg:w="16"/><text x="48.9686%" y="222.50"></text></g><g><title>maximum_error (src/dycov/validation/common.py:596) (16 samples, 0.14%)</title><rect x="48.7186%" y="228" width="0.1449%" height="15" fill="rgb(225,218,4)" fg:x="5380" fg:w="16"/><text x="48.9686%" y="238.50"></text></g><g><title>calculate (src/dycov/validation/model.py:73) (17 samples, 0.15%)</title><rect x="48.8635%" y="196" width="0.1539%" height="15" fill="rgb(230,182,32)" fg:x="5396" fg:w="17"/><text x="49.1135%" y="206.50"></text></g><g><title>check_dict_or_set_indexers (pandas/core/indexing.py:2763) (35 samples, 0.32%)</title><rect x="50.8467%" y="260" width="0.3169%" height="15" fill="rgb(242,56,43)" fg:x="5615" fg:w="35"/><text x="51.0967%" y="270.50"></text></g><g><title>check_dict_or_set_indexers (pandas/core/indexing.py:2764) (34 samples, 0.31%)</title><rect x="51.1636%" y="260" width="0.3079%" height="15" fill="rgb(233,99,24)" fg:x="5650" fg:w="34"/><text x="51.4136%" y="270.50"></text></g><g><title>check_dict_or_set_indexers (pandas/core/indexing.py:2772) (68 samples, 0.62%)</title><rect x="51.5530%" y="260" width="0.6158%" height="15" fill="rgb(234,209,42)" fg:x="5693" fg:w="68"/><text x="51.8030%" y="270.50"></text></g><g><title>check_dict_or_set_indexers (pandas/core/indexing.py:2773) (36 samples, 0.33%)</title><rect x="52.1688%" y="260" width="0.3260%" height="15" fill="rgb(227,7,12)" fg:x="5761" fg:w="36"/><text x="52.4188%" y="270.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1086) (261 samples, 2.36%)</title><rect x="50.2400%" y="244" width="2.3635%" height="15" fill="rgb(245,203,43)" fg:x="5548" fg:w="261"/><text x="50.4900%" y="254.50">__..</text></g><g><title>check_dict_or_set_indexers (pandas/core/indexing.py:2776) (12 samples, 0.11%)</title><rect x="52.4948%" y="260" width="0.1087%" height="15" fill="rgb(238,205,33)" fg:x="5797" fg:w="12"/><text x="52.7448%" y="270.50"></text></g><g><title>apply_if_callable (pandas/core/common.py:381) (36 samples, 0.33%)</title><rect x="53.4547%" y="260" width="0.3260%" height="15" fill="rgb(231,56,7)" fg:x="5903" fg:w="36"/><text x="53.7047%" y="270.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1087) (131 samples, 1.19%)</title><rect x="52.6035%" y="244" width="1.1863%" height="15" fill="rgb(244,186,29)" fg:x="5809" fg:w="131"/><text x="52.8535%" y="254.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1089) (14 samples, 0.13%)</title><rect x="53.7897%" y="244" width="0.1268%" height="15" fill="rgb(234,111,31)" fg:x="5940" fg:w="14"/><text x="54.0397%" y="254.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1094) (34 samples, 0.31%)</title><rect x="53.9165%" y="244" width="0.3079%" height="15" fill="rgb(241,149,10)" fg:x="5954" fg:w="34"/><text x="54.1665%" y="254.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1095) (91 samples, 0.82%)</title><rect x="54.2244%" y="244" width="0.8241%" height="15" fill="rgb(249,206,44)" fg:x="5988" fg:w="91"/><text x="54.4744%" y="254.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1098) (179 samples, 1.62%)</title><rect x="55.0484%" y="244" width="1.6209%" height="15" fill="rgb(251,153,30)" fg:x="6079" fg:w="179"/><text x="55.2984%" y="254.50"></text></g><g><title>get_loc (pandas/core/indexes/range.py:410) (22 samples, 0.20%)</title><rect x="59.1234%" y="276" width="0.1992%" height="15" fill="rgb(239,152,38)" fg:x="6529" fg:w="22"/><text x="59.3734%" y="286.50"></text></g><g><title>get_loc (pandas/core/indexes/range.py:411) (25 samples, 0.23%)</title><rect x="59.3226%" y="276" width="0.2264%" height="15" fill="rgb(249,139,47)" fg:x="6551" fg:w="25"/><text x="59.5726%" y="286.50"></text></g><g><title>_get_value (pandas/core/series.py:1227) (336 samples, 3.04%)</title><rect x="57.8104%" y="260" width="3.0427%" height="15" fill="rgb(244,64,35)" fg:x="6384" fg:w="336"/><text x="58.0604%" y="270.50">_ge..</text></g><g><title>get_loc (pandas/core/indexes/range.py:413) (142 samples, 1.29%)</title><rect x="59.5671%" y="276" width="1.2859%" height="15" fill="rgb(216,46,15)" fg:x="6578" fg:w="142"/><text x="59.8171%" y="286.50"></text></g><g><title>_get_value (pandas/core/series.py:1229) (28 samples, 0.25%)</title><rect x="60.8530%" y="260" width="0.2536%" height="15" fill="rgb(250,74,19)" fg:x="6720" fg:w="28"/><text x="61.1030%" y="270.50"></text></g><g><title>calculate_errors (src/dycov/validation/model.py:317) (1,604 samples, 14.53%)</title><rect x="49.0265%" y="212" width="14.5250%" height="15" fill="rgb(249,42,33)" fg:x="5414" fg:w="1604"/><text x="49.2765%" y="222.50">calculate_errors (src/..</text></g><g><title>mean_error (src/dycov/validation/common.py:540) (1,598 samples, 14.47%)</title><rect x="49.0809%" y="228" width="14.4707%" height="15" fill="rgb(242,149,17)" fg:x="5420" fg:w="1598"/><text x="49.3309%" y="238.50">mean_error (src/dynawo..</text></g><g><title>__getitem__ (pandas/core/series.py:1111) (751 samples, 6.80%)</title><rect x="56.7509%" y="244" width="6.8007%" height="15" fill="rgb(244,29,21)" fg:x="6267" fg:w="751"/><text x="57.0009%" y="254.50">__getitem..</text></g><g><title>_get_value (pandas/core/series.py:1230) (270 samples, 2.44%)</title><rect x="61.1066%" y="260" width="2.4450%" height="15" fill="rgb(220,130,37)" fg:x="6748" fg:w="270"/><text x="61.3566%" y="270.50">_g..</text></g><g><title>_values (pandas/core/series.py:858) (163 samples, 1.48%)</title><rect x="62.0755%" y="276" width="1.4760%" height="15" fill="rgb(211,67,2)" fg:x="6855" fg:w="163"/><text x="62.3255%" y="286.50"></text></g><g><title>internal_values (pandas/core/internals/managers.py:2005) (78 samples, 0.71%)</title><rect x="62.8452%" y="292" width="0.7063%" height="15" fill="rgb(235,68,52)" fg:x="6940" fg:w="78"/><text x="63.0952%" y="302.50"></text></g><g><title>check_dict_or_set_indexers (pandas/core/indexing.py:2763) (47 samples, 0.43%)</title><rect x="65.6253%" y="260" width="0.4256%" height="15" fill="rgb(246,142,3)" fg:x="7247" fg:w="47"/><text x="65.8753%" y="270.50"></text></g><g><title>check_dict_or_set_indexers (pandas/core/indexing.py:2764) (29 samples, 0.26%)</title><rect x="66.0509%" y="260" width="0.2626%" height="15" fill="rgb(241,25,7)" fg:x="7294" fg:w="29"/><text x="66.3009%" y="270.50"></text></g><g><title>check_dict_or_set_indexers (pandas/core/indexing.py:2772) (57 samples, 0.52%)</title><rect x="66.3316%" y="260" width="0.5162%" height="15" fill="rgb(242,119,39)" fg:x="7325" fg:w="57"/><text x="66.5816%" y="270.50"></text></g><g><title>check_dict_or_set_indexers (pandas/core/indexing.py:2773) (33 samples, 0.30%)</title><rect x="66.8478%" y="260" width="0.2988%" height="15" fill="rgb(241,98,45)" fg:x="7382" fg:w="33"/><text x="67.0978%" y="270.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1086) (265 samples, 2.40%)</title><rect x="64.9280%" y="244" width="2.3997%" height="15" fill="rgb(254,28,30)" fg:x="7170" fg:w="265"/><text x="65.1780%" y="254.50">__..</text></g><g><title>check_dict_or_set_indexers (pandas/core/indexing.py:2776) (20 samples, 0.18%)</title><rect x="67.1466%" y="260" width="0.1811%" height="15" fill="rgb(241,142,54)" fg:x="7415" fg:w="20"/><text x="67.3966%" y="270.50"></text></g><g><title>apply_if_callable (pandas/core/common.py:381) (20 samples, 0.18%)</title><rect x="68.3238%" y="260" width="0.1811%" height="15" fill="rgb(222,85,15)" fg:x="7545" fg:w="20"/><text x="68.5738%" y="270.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1087) (133 samples, 1.20%)</title><rect x="67.3277%" y="244" width="1.2044%" height="15" fill="rgb(210,85,47)" fg:x="7435" fg:w="133"/><text x="67.5777%" y="254.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1089) (14 samples, 0.13%)</title><rect x="68.5321%" y="244" width="0.1268%" height="15" fill="rgb(224,206,25)" fg:x="7568" fg:w="14"/><text x="68.7821%" y="254.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1094) (31 samples, 0.28%)</title><rect x="68.6589%" y="244" width="0.2807%" height="15" fill="rgb(243,201,19)" fg:x="7582" fg:w="31"/><text x="68.9089%" y="254.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1095) (105 samples, 0.95%)</title><rect x="68.9396%" y="244" width="0.9508%" height="15" fill="rgb(236,59,4)" fg:x="7613" fg:w="105"/><text x="69.1896%" y="254.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1098) (148 samples, 1.34%)</title><rect x="69.8904%" y="244" width="1.3402%" height="15" fill="rgb(254,179,45)" fg:x="7718" fg:w="148"/><text x="70.1404%" y="254.50"></text></g><g><title>get_loc (pandas/core/indexes/range.py:410) (13 samples, 0.12%)</title><rect x="73.7119%" y="276" width="0.1177%" height="15" fill="rgb(226,14,10)" fg:x="8140" fg:w="13"/><text x="73.9619%" y="286.50"></text></g><g><title>get_loc (pandas/core/indexes/range.py:411) (30 samples, 0.27%)</title><rect x="73.8296%" y="276" width="0.2717%" height="15" fill="rgb(244,27,41)" fg:x="8153" fg:w="30"/><text x="74.0796%" y="286.50"></text></g><g><title>_get_value (pandas/core/series.py:1227) (341 samples, 3.09%)</title><rect x="72.2358%" y="260" width="3.0879%" height="15" fill="rgb(235,35,32)" fg:x="7977" fg:w="341"/><text x="72.4858%" y="270.50">_ge..</text></g><g><title>get_loc (pandas/core/indexes/range.py:413) (131 samples, 1.19%)</title><rect x="74.1375%" y="276" width="1.1863%" height="15" fill="rgb(218,68,31)" fg:x="8187" fg:w="131"/><text x="74.3875%" y="286.50"></text></g><g><title>_get_value (pandas/core/series.py:1229) (27 samples, 0.24%)</title><rect x="75.3237%" y="260" width="0.2445%" height="15" fill="rgb(207,120,37)" fg:x="8318" fg:w="27"/><text x="75.5737%" y="270.50"></text></g><g><title>calculate_errors (src/dycov/validation/model.py:321) (1,620 samples, 14.67%)</title><rect x="63.5516%" y="212" width="14.6699%" height="15" fill="rgb(227,98,0)" fg:x="7018" fg:w="1620"/><text x="63.8016%" y="222.50">calculate_errors (src/..</text></g><g><title>mean_absolute_error (src/dycov/validation/common.py:569) (1,609 samples, 14.57%)</title><rect x="63.6512%" y="228" width="14.5703%" height="15" fill="rgb(207,7,3)" fg:x="7029" fg:w="1609"/><text x="63.9012%" y="238.50">mean_absolute_error (s..</text></g><g><title>__getitem__ (pandas/core/series.py:1111) (766 samples, 6.94%)</title><rect x="71.2850%" y="244" width="6.9365%" height="15" fill="rgb(206,98,19)" fg:x="7872" fg:w="766"/><text x="71.5350%" y="254.50">__getitem..</text></g><g><title>_get_value (pandas/core/series.py:1230) (293 samples, 2.65%)</title><rect x="75.5682%" y="260" width="2.6533%" height="15" fill="rgb(217,5,26)" fg:x="8345" fg:w="293"/><text x="75.8182%" y="270.50">_g..</text></g><g><title>_values (pandas/core/series.py:858) (176 samples, 1.59%)</title><rect x="76.6277%" y="276" width="1.5938%" height="15" fill="rgb(235,190,38)" fg:x="8462" fg:w="176"/><text x="76.8777%" y="286.50"></text></g><g><title>internal_values (pandas/core/internals/managers.py:2005) (78 samples, 0.71%)</title><rect x="77.5152%" y="292" width="0.7063%" height="15" fill="rgb(247,86,24)" fg:x="8560" fg:w="78"/><text x="77.7652%" y="302.50"></text></g><g><title>calculate (src/dycov/validation/model.py:74) (3,249 samples, 29.42%)</title><rect x="49.0175%" y="196" width="29.4214%" height="15" fill="rgb(205,101,16)" fg:x="5413" fg:w="3249"/><text x="49.2675%" y="206.50">calculate (src/dycov/validati..</text></g><g><title>calculate_errors (src/dycov/validation/model.py:325) (24 samples, 0.22%)</title><rect x="78.2215%" y="212" width="0.2173%" height="15" fill="rgb(246,168,33)" fg:x="8638" fg:w="24"/><text x="78.4715%" y="222.50"></text></g><g><title>maximum_error (src/dycov/validation/common.py:596) (24 samples, 0.22%)</title><rect x="78.2215%" y="228" width="0.2173%" height="15" fill="rgb(231,114,1)" fg:x="8638" fg:w="24"/><text x="78.4715%" y="238.50"></text></g><g><title>calculate (src/dycov/validation/model.py:77) (79 samples, 0.72%)</title><rect x="78.4388%" y="196" width="0.7154%" height="15" fill="rgb(207,184,53)" fg:x="8662" fg:w="79"/><text x="78.6888%" y="206.50"></text></g><g><title>calculate_curves_errors (src/dycov/validation/model.py:236) (32 samples, 0.29%)</title><rect x="79.1542%" y="212" width="0.2898%" height="15" fill="rgb(224,95,51)" fg:x="8741" fg:w="32"/><text x="79.4042%" y="222.50"></text></g><g><title>calculate (src/dycov/validation/model.py:91) (50 samples, 0.45%)</title><rect x="79.1542%" y="196" width="0.4528%" height="15" fill="rgb(212,188,45)" fg:x="8741" fg:w="50"/><text x="79.4042%" y="206.50"></text></g><g><title>get_settling_time (src/dycov/validation/common.py:685) (13 samples, 0.12%)</title><rect x="79.6342%" y="228" width="0.1177%" height="15" fill="rgb(223,154,38)" fg:x="8794" fg:w="13"/><text x="79.8842%" y="238.50"></text></g><g><title>calculate_mean_absolute_error (src/dycov/validation/model.py:344) (18 samples, 0.16%)</title><rect x="79.6070%" y="212" width="0.1630%" height="15" fill="rgb(251,22,52)" fg:x="8791" fg:w="18"/><text x="79.8570%" y="222.50"></text></g><g><title>calculate_mean_absolute_error (src/dycov/validation/model.py:351) (12 samples, 0.11%)</title><rect x="79.8515%" y="212" width="0.1087%" height="15" fill="rgb(229,209,22)" fg:x="8818" fg:w="12"/><text x="80.1015%" y="222.50"></text></g><g><title>validate (src/dycov/core/model_validation.py:163) (8,890 samples, 80.50%)</title><rect x="1.0686%" y="100" width="80.5035%" height="15" fill="rgb(234,138,34)" fg:x="118" fg:w="8890"/><text x="1.3186%" y="110.50">validate (src/dycov/core/model_validation.py:163)</text></g><g><title>validate (src/dycov/core/pcs.py:119) (8,889 samples, 80.49%)</title><rect x="1.0776%" y="116" width="80.4944%" height="15" fill="rgb(212,95,11)" fg:x="119" fg:w="8889"/><text x="1.3276%" y="126.50">validate (src/dycov/core/pcs.py:119)</text></g><g><title>validate (src/dycov/core/benchmark.py:568) (8,889 samples, 80.49%)</title><rect x="1.0776%" y="132" width="80.4944%" height="15" fill="rgb(240,179,47)" fg:x="119" fg:w="8889"/><text x="1.3276%" y="142.50">validate (src/dycov/core/benchmark.py:568)</text></g><g><title>validate (src/dycov/core/operating_condition.py:1915) (8,495 samples, 76.93%)</title><rect x="4.6455%" y="148" width="76.9266%" height="15" fill="rgb(240,163,11)" fg:x="513" fg:w="8495"/><text x="4.8955%" y="158.50">validate (src/dycov/core/operating_condition.py:1915)</text></g><g><title>__validate_op (src/dycov/core/operating_condition.py:1406) (8,481 samples, 76.80%)</title><rect x="4.7723%" y="164" width="76.7998%" height="15" fill="rgb(236,37,12)" fg:x="527" fg:w="8481"/><text x="5.0223%" y="174.50">__validate_op (src/dycov/core/operating_condition.py:1406)</text></g><g><title>__validate_model (src/dycov/core/operating_condition.py:1527) (4,624 samples, 41.87%)</title><rect x="39.6994%" y="180" width="41.8727%" height="15" fill="rgb(232,164,16)" fg:x="4384" fg:w="4624"/><text x="39.9494%" y="190.50">__validate_model (src/dycov/core/operating_conditi..</text></g><g><title>calculate (src/dycov/validation/model.py:92) (217 samples, 1.97%)</title><rect x="79.6070%" y="196" width="1.9650%" height="15" fill="rgb(244,205,15)" fg:x="8791" fg:w="217"/><text x="79.8570%" y="206.50">c..</text></g><g><title>get_curves2plot (src/dycov/report/figure.py:422) (38 samples, 0.34%)</title><rect x="81.6083%" y="132" width="0.3441%" height="15" fill="rgb(223,117,47)" fg:x="9012" fg:w="38"/><text x="81.8583%" y="142.50"></text></g><g><title>_add_curve2plot (src/dycov/report/figure.py:48) (38 samples, 0.34%)</title><rect x="81.6083%" y="148" width="0.3441%" height="15" fill="rgb(244,107,35)" fg:x="9012" fg:w="38"/><text x="81.8583%" y="158.50"></text></g><g><title>get_curves2plot (src/dycov/report/figure.py:428) (14 samples, 0.13%)</title><rect x="81.9524%" y="132" width="0.1268%" height="15" fill="rgb(205,140,8)" fg:x="9050" fg:w="14"/><text x="82.2024%" y="142.50"></text></g><g><title>_add_curve2plot (src/dycov/report/figure.py:48) (14 samples, 0.13%)</title><rect x="81.9524%" y="148" width="0.1268%" height="15" fill="rgb(228,84,46)" fg:x="9050" fg:w="14"/><text x="82.2024%" y="158.50"></text></g><g><title>create_pdf (src/dycov/report/report.py:111) (69 samples, 0.62%)</title><rect x="81.5720%" y="116" width="0.6248%" height="15" fill="rgb(254,188,9)" fg:x="9008" fg:w="69"/><text x="81.8220%" y="126.50"></text></g><g><title>get_curves2plot (src/dycov/report/figure.py:439) (13 samples, 0.12%)</title><rect x="82.0791%" y="132" width="0.1177%" height="15" fill="rgb(206,112,54)" fg:x="9064" fg:w="13"/><text x="82.3291%" y="142.50"></text></g><g><title>_add_curve2plot (src/dycov/report/figure.py:48) (13 samples, 0.12%)</title><rect x="82.0791%" y="148" width="0.1177%" height="15" fill="rgb(216,84,49)" fg:x="9064" fg:w="13"/><text x="82.3291%" y="158.50"></text></g><g><title>get_curves2plot (src/dycov/report/figure.py:422) (27 samples, 0.24%)</title><rect x="82.2512%" y="132" width="0.2445%" height="15" fill="rgb(214,194,35)" fg:x="9083" fg:w="27"/><text x="82.5012%" y="142.50"></text></g><g><title>_add_curve2plot (src/dycov/report/figure.py:48) (27 samples, 0.24%)</title><rect x="82.2512%" y="148" width="0.2445%" height="15" fill="rgb(249,28,3)" fg:x="9083" fg:w="27"/><text x="82.5012%" y="158.50"></text></g><g><title>create_pdf (src/dycov/report/report.py:116) (44 samples, 0.40%)</title><rect x="82.1969%" y="116" width="0.3984%" height="15" fill="rgb(222,56,52)" fg:x="9077" fg:w="44"/><text x="82.4469%" y="126.50"></text></g><g><title>_get_yrange_for_curve (src/dycov/report/figure.py:156) (29 samples, 0.26%)</title><rect x="82.6859%" y="164" width="0.2626%" height="15" fill="rgb(245,217,50)" fg:x="9131" fg:w="29"/><text x="82.9359%" y="174.50"></text></g><g><title>create_plot (src/dycov/report/figure.py:275) (60 samples, 0.54%)</title><rect x="82.6678%" y="132" width="0.5433%" height="15" fill="rgb(213,201,24)" fg:x="9129" fg:w="60"/><text x="82.9178%" y="142.50"></text></g><g><title>_get_yrange (src/dycov/report/figure.py:131) (60 samples, 0.54%)</title><rect x="82.6678%" y="148" width="0.5433%" height="15" fill="rgb(248,116,28)" fg:x="9129" fg:w="60"/><text x="82.9178%" y="158.50"></text></g><g><title>_get_yrange_for_curve (src/dycov/report/figure.py:157) (29 samples, 0.26%)</title><rect x="82.9485%" y="164" width="0.2626%" height="15" fill="rgb(219,72,43)" fg:x="9160" fg:w="29"/><text x="83.1985%" y="174.50"></text></g><g><title>__init__ (matplotlib/axis.py:413) (23 samples, 0.21%)</title><rect x="83.5824%" y="340" width="0.2083%" height="15" fill="rgb(209,138,14)" fg:x="9230" fg:w="23"/><text x="83.8324%" y="350.50"></text></g><g><title>__get__ (matplotlib/axis.py:586) (26 samples, 0.24%)</title><rect x="83.5824%" y="308" width="0.2354%" height="15" fill="rgb(222,18,33)" fg:x="9230" fg:w="26"/><text x="83.8324%" y="318.50"></text></g><g><title>_get_tick (matplotlib/axis.py:1562) (26 samples, 0.24%)</title><rect x="83.5824%" y="324" width="0.2354%" height="15" fill="rgb(213,199,7)" fg:x="9230" fg:w="26"/><text x="83.8324%" y="334.50"></text></g><g><title>set_tick_params (matplotlib/axis.py:973) (37 samples, 0.34%)</title><rect x="83.5824%" y="292" width="0.3351%" height="15" fill="rgb(250,110,10)" fg:x="9230" fg:w="37"/><text x="83.8324%" y="302.50"></text></g><g><title>grid (matplotlib/axes/_base.py:3196) (38 samples, 0.34%)</title><rect x="83.5824%" y="260" width="0.3441%" height="15" fill="rgb(248,123,6)" fg:x="9230" fg:w="38"/><text x="83.8324%" y="270.50"></text></g><g><title>grid (matplotlib/axis.py:1697) (38 samples, 0.34%)</title><rect x="83.5824%" y="276" width="0.3441%" height="15" fill="rgb(206,91,31)" fg:x="9230" fg:w="38"/><text x="83.8324%" y="286.50"></text></g><g><title>set_tick_params (matplotlib/axis.py:973) (17 samples, 0.15%)</title><rect x="83.9265%" y="292" width="0.1539%" height="15" fill="rgb(211,154,13)" fg:x="9268" fg:w="17"/><text x="84.1765%" y="302.50"></text></g><g><title>__clear (matplotlib/axes/_base.py:1304) (57 samples, 0.52%)</title><rect x="83.5824%" y="244" width="0.5162%" height="15" fill="rgb(225,148,7)" fg:x="9230" fg:w="57"/><text x="83.8324%" y="254.50"></text></g><g><title>grid (matplotlib/axes/_base.py:3198) (19 samples, 0.17%)</title><rect x="83.9265%" y="260" width="0.1721%" height="15" fill="rgb(220,160,43)" fg:x="9268" fg:w="19"/><text x="84.1765%" y="270.50"></text></g><g><title>grid (matplotlib/axis.py:1697) (19 samples, 0.17%)</title><rect x="83.9265%" y="276" width="0.1721%" height="15" fill="rgb(213,52,39)" fg:x="9268" fg:w="19"/><text x="84.1765%" y="286.50"></text></g><g><title>set_clip_path (matplotlib/axis.py:1111) (13 samples, 0.12%)</title><rect x="84.1710%" y="276" width="0.1177%" height="15" fill="rgb(243,137,7)" fg:x="9295" fg:w="13"/><text x="84.4210%" y="286.50"></text></g><g><title>__get__ (matplotlib/axis.py:591) (13 samples, 0.12%)</title><rect x="84.1710%" y="292" width="0.1177%" height="15" fill="rgb(230,79,13)" fg:x="9295" fg:w="13"/><text x="84.4210%" y="302.50"></text></g><g><title>_get_tick (matplotlib/axis.py:1562) (13 samples, 0.12%)</title><rect x="84.1710%" y="308" width="0.1177%" height="15" fill="rgb(247,105,23)" fg:x="9295" fg:w="13"/><text x="84.4210%" y="318.50"></text></g><g><title>__clear (matplotlib/axes/_base.py:1355) (16 samples, 0.14%)</title><rect x="84.1619%" y="244" width="0.1449%" height="15" fill="rgb(223,179,41)" fg:x="9294" fg:w="16"/><text x="84.4119%" y="254.50"></text></g><g><title>wrapper (matplotlib/_api/deprecation.py:297) (16 samples, 0.14%)</title><rect x="84.1619%" y="260" width="0.1449%" height="15" fill="rgb(218,9,34)" fg:x="9294" fg:w="16"/><text x="84.4119%" y="270.50"></text></g><g><title>set_clip_path (matplotlib/axis.py:1111) (13 samples, 0.12%)</title><rect x="84.3430%" y="276" width="0.1177%" height="15" fill="rgb(222,106,8)" fg:x="9314" fg:w="13"/><text x="84.5930%" y="286.50"></text></g><g><title>__get__ (matplotlib/axis.py:591) (13 samples, 0.12%)</title><rect x="84.3430%" y="292" width="0.1177%" height="15" fill="rgb(211,220,0)" fg:x="9314" fg:w="13"/><text x="84.5930%" y="302.50"></text></g><g><title>_get_tick (matplotlib/axis.py:1562) (13 samples, 0.12%)</title><rect x="84.3430%" y="308" width="0.1177%" height="15" fill="rgb(229,52,16)" fg:x="9314" fg:w="13"/><text x="84.5930%" y="318.50"></text></g><g><title>__clear (matplotlib/axes/_base.py:1356) (35 samples, 0.32%)</title><rect x="84.3068%" y="244" width="0.3169%" height="15" fill="rgb(212,155,18)" fg:x="9310" fg:w="35"/><text x="84.5568%" y="254.50"></text></g><g><title>wrapper (matplotlib/_api/deprecation.py:297) (35 samples, 0.32%)</title><rect x="84.3068%" y="260" width="0.3169%" height="15" fill="rgb(242,21,14)" fg:x="9310" fg:w="35"/><text x="84.5568%" y="270.50"></text></g><g><title>set_clip_path (matplotlib/axis.py:1112) (18 samples, 0.16%)</title><rect x="84.4607%" y="276" width="0.1630%" height="15" fill="rgb(222,19,48)" fg:x="9327" fg:w="18"/><text x="84.7107%" y="286.50"></text></g><g><title>wrapper (matplotlib/_api/deprecation.py:297) (18 samples, 0.16%)</title><rect x="84.4607%" y="292" width="0.1630%" height="15" fill="rgb(232,45,27)" fg:x="9327" fg:w="18"/><text x="84.7107%" y="302.50"></text></g><g><title>set_clip_path (matplotlib/axis.py:241) (16 samples, 0.14%)</title><rect x="84.4789%" y="308" width="0.1449%" height="15" fill="rgb(249,103,42)" fg:x="9329" fg:w="16"/><text x="84.7289%" y="318.50"></text></g><g><title>__init__ (matplotlib/axes/_base.py:678) (124 samples, 1.12%)</title><rect x="83.5280%" y="212" width="1.1229%" height="15" fill="rgb(246,81,33)" fg:x="9224" fg:w="124"/><text x="83.7780%" y="222.50"></text></g><g><title>clear (matplotlib/axes/_base.py:1388) (124 samples, 1.12%)</title><rect x="83.5280%" y="228" width="1.1229%" height="15" fill="rgb(252,33,42)" fg:x="9224" fg:w="124"/><text x="83.7780%" y="238.50"></text></g><g><title>gca (matplotlib/pyplot.py:2525) (154 samples, 1.39%)</title><rect x="83.2926%" y="164" width="1.3945%" height="15" fill="rgb(209,212,41)" fg:x="9198" fg:w="154"/><text x="83.5426%" y="174.50"></text></g><g><title>gca (matplotlib/figure.py:1658) (154 samples, 1.39%)</title><rect x="83.2926%" y="180" width="1.3945%" height="15" fill="rgb(207,154,6)" fg:x="9198" fg:w="154"/><text x="83.5426%" y="190.50"></text></g><g><title>add_subplot (matplotlib/figure.py:782) (154 samples, 1.39%)</title><rect x="83.2926%" y="196" width="1.3945%" height="15" fill="rgb(223,64,47)" fg:x="9198" fg:w="154"/><text x="83.5426%" y="206.50"></text></g><g><title>_plot_args (matplotlib/axes/_base.py:488) (35 samples, 0.32%)</title><rect x="84.7143%" y="196" width="0.3169%" height="15" fill="rgb(211,161,38)" fg:x="9355" fg:w="35"/><text x="84.9643%" y="206.50"></text></g><g><title>_check_1d (matplotlib/cbook.py:1358) (34 samples, 0.31%)</title><rect x="84.7234%" y="212" width="0.3079%" height="15" fill="rgb(219,138,40)" fg:x="9356" fg:w="34"/><text x="84.9734%" y="222.50"></text></g><g><title>atleast_1d (numpy/core/shape_base.py:65) (34 samples, 0.31%)</title><rect x="84.7234%" y="228" width="0.3079%" height="15" fill="rgb(241,228,46)" fg:x="9356" fg:w="34"/><text x="84.9734%" y="238.50"></text></g><g><title>_plot_args (matplotlib/axes/_base.py:489) (27 samples, 0.24%)</title><rect x="85.0312%" y="196" width="0.2445%" height="15" fill="rgb(223,209,38)" fg:x="9390" fg:w="27"/><text x="85.2812%" y="206.50"></text></g><g><title>_check_1d (matplotlib/cbook.py:1358) (27 samples, 0.24%)</title><rect x="85.0312%" y="212" width="0.2445%" height="15" fill="rgb(236,164,45)" fg:x="9390" fg:w="27"/><text x="85.2812%" y="222.50"></text></g><g><title>atleast_1d (numpy/core/shape_base.py:65) (27 samples, 0.24%)</title><rect x="85.0312%" y="228" width="0.2445%" height="15" fill="rgb(231,15,5)" fg:x="9390" fg:w="27"/><text x="85.2812%" y="238.50"></text></g><g><title>plot (matplotlib/axes/_axes.py:1721) (68 samples, 0.62%)</title><rect x="84.6871%" y="164" width="0.6158%" height="15" fill="rgb(252,35,15)" fg:x="9352" fg:w="68"/><text x="84.9371%" y="174.50"></text></g><g><title>__call__ (matplotlib/axes/_base.py:303) (68 samples, 0.62%)</title><rect x="84.6871%" y="180" width="0.6158%" height="15" fill="rgb(248,181,18)" fg:x="9352" fg:w="68"/><text x="84.9371%" y="190.50"></text></g><g><title>create_plot (src/dycov/report/figure.py:282) (240 samples, 2.17%)</title><rect x="83.2926%" y="132" width="2.1733%" height="15" fill="rgb(233,39,42)" fg:x="9198" fg:w="240"/><text x="83.5426%" y="142.50">c..</text></g><g><title>plot (matplotlib/pyplot.py:3575) (240 samples, 2.17%)</title><rect x="83.2926%" y="148" width="2.1733%" height="15" fill="rgb(238,110,33)" fg:x="9198" fg:w="240"/><text x="83.5426%" y="158.50">p..</text></g><g><title>plot (matplotlib/axes/_axes.py:1723) (18 samples, 0.16%)</title><rect x="85.3029%" y="164" width="0.1630%" height="15" fill="rgb(233,195,10)" fg:x="9420" fg:w="18"/><text x="85.5529%" y="174.50"></text></g><g><title>add_line (matplotlib/axes/_base.py:2309) (15 samples, 0.14%)</title><rect x="85.3301%" y="180" width="0.1358%" height="15" fill="rgb(254,105,3)" fg:x="9423" fg:w="15"/><text x="85.5801%" y="190.50"></text></g><g><title>_plot_args (matplotlib/axes/_base.py:488) (26 samples, 0.24%)</title><rect x="85.4659%" y="196" width="0.2354%" height="15" fill="rgb(221,225,9)" fg:x="9438" fg:w="26"/><text x="85.7159%" y="206.50"></text></g><g><title>_check_1d (matplotlib/cbook.py:1358) (26 samples, 0.24%)</title><rect x="85.4659%" y="212" width="0.2354%" height="15" fill="rgb(224,227,45)" fg:x="9438" fg:w="26"/><text x="85.7159%" y="222.50"></text></g><g><title>atleast_1d (numpy/core/shape_base.py:65) (26 samples, 0.24%)</title><rect x="85.4659%" y="228" width="0.2354%" height="15" fill="rgb(229,198,43)" fg:x="9438" fg:w="26"/><text x="85.7159%" y="238.50"></text></g><g><title>_plot_args (matplotlib/axes/_base.py:489) (21 samples, 0.19%)</title><rect x="85.7013%" y="196" width="0.1902%" height="15" fill="rgb(206,209,35)" fg:x="9464" fg:w="21"/><text x="85.9513%" y="206.50"></text></g><g><title>_check_1d (matplotlib/cbook.py:1358) (21 samples, 0.19%)</title><rect x="85.7013%" y="212" width="0.1902%" height="15" fill="rgb(245,195,53)" fg:x="9464" fg:w="21"/><text x="85.9513%" y="222.50"></text></g><g><title>atleast_1d (numpy/core/shape_base.py:65) (21 samples, 0.19%)</title><rect x="85.7013%" y="228" width="0.1902%" height="15" fill="rgb(240,92,26)" fg:x="9464" fg:w="21"/><text x="85.9513%" y="238.50"></text></g><g><title>plot (matplotlib/axes/_axes.py:1721) (51 samples, 0.46%)</title><rect x="85.4659%" y="164" width="0.4618%" height="15" fill="rgb(207,40,23)" fg:x="9438" fg:w="51"/><text x="85.7159%" y="174.50"></text></g><g><title>__call__ (matplotlib/axes/_base.py:303) (51 samples, 0.46%)</title><rect x="85.4659%" y="180" width="0.4618%" height="15" fill="rgb(223,111,35)" fg:x="9438" fg:w="51"/><text x="85.7159%" y="190.50"></text></g><g><title>create_plot (src/dycov/report/figure.py:377) (67 samples, 0.61%)</title><rect x="85.4659%" y="132" width="0.6067%" height="15" fill="rgb(229,147,28)" fg:x="9438" fg:w="67"/><text x="85.7159%" y="142.50"></text></g><g><title>plot (matplotlib/pyplot.py:3575) (67 samples, 0.61%)</title><rect x="85.4659%" y="148" width="0.6067%" height="15" fill="rgb(211,29,28)" fg:x="9438" fg:w="67"/><text x="85.7159%" y="158.50"></text></g><g><title>plot (matplotlib/axes/_axes.py:1723) (16 samples, 0.14%)</title><rect x="85.9277%" y="164" width="0.1449%" height="15" fill="rgb(228,72,33)" fg:x="9489" fg:w="16"/><text x="86.1777%" y="174.50"></text></g><g><title>add_line (matplotlib/axes/_base.py:2309) (16 samples, 0.14%)</title><rect x="85.9277%" y="180" width="0.1449%" height="15" fill="rgb(205,214,31)" fg:x="9489" fg:w="16"/><text x="86.1777%" y="190.50"></text></g><g><title>__init__ (matplotlib/axis.py:165) (15 samples, 0.14%)</title><rect x="86.6341%" y="436" width="0.1358%" height="15" fill="rgb(224,111,15)" fg:x="9567" fg:w="15"/><text x="86.8841%" y="446.50"></text></g><g><title>__init__ (matplotlib/axis.py:413) (66 samples, 0.60%)</title><rect x="86.4892%" y="420" width="0.5977%" height="15" fill="rgb(253,21,26)" fg:x="9551" fg:w="66"/><text x="86.7392%" y="430.50"></text></g><g><title>__init__ (matplotlib/axis.py:470) (43 samples, 0.39%)</title><rect x="87.2227%" y="420" width="0.3894%" height="15" fill="rgb(245,139,43)" fg:x="9632" fg:w="43"/><text x="87.4727%" y="430.50"></text></g><g><title>get_major_ticks (matplotlib/axis.py:1626) (137 samples, 1.24%)</title><rect x="86.4801%" y="388" width="1.2406%" height="15" fill="rgb(252,170,7)" fg:x="9550" fg:w="137"/><text x="86.7301%" y="398.50"></text></g><g><title>_get_tick (matplotlib/axis.py:1562) (137 samples, 1.24%)</title><rect x="86.4801%" y="404" width="1.2406%" height="15" fill="rgb(231,118,14)" fg:x="9550" fg:w="137"/><text x="86.7301%" y="414.50"></text></g><g><title>_copy_tick_props (matplotlib/axis.py:1582) (18 samples, 0.16%)</title><rect x="87.7660%" y="404" width="0.1630%" height="15" fill="rgb(238,83,0)" fg:x="9692" fg:w="18"/><text x="88.0160%" y="414.50"></text></g><g><title>update_from (matplotlib/lines.py:1356) (17 samples, 0.15%)</title><rect x="87.7751%" y="420" width="0.1539%" height="15" fill="rgb(221,39,39)" fg:x="9693" fg:w="17"/><text x="88.0251%" y="430.50"></text></g><g><title>__init__ (matplotlib/markers.py:255) (12 samples, 0.11%)</title><rect x="87.8203%" y="436" width="0.1087%" height="15" fill="rgb(222,119,46)" fg:x="9698" fg:w="12"/><text x="88.0703%" y="446.50"></text></g><g><title>_copy_tick_props (matplotlib/axis.py:1583) (16 samples, 0.14%)</title><rect x="87.9290%" y="404" width="0.1449%" height="15" fill="rgb(222,165,49)" fg:x="9710" fg:w="16"/><text x="88.1790%" y="414.50"></text></g><g><title>update_from (matplotlib/lines.py:1356) (13 samples, 0.12%)</title><rect x="87.9562%" y="420" width="0.1177%" height="15" fill="rgb(219,113,52)" fg:x="9713" fg:w="13"/><text x="88.2062%" y="430.50"></text></g><g><title>__init__ (matplotlib/markers.py:255) (13 samples, 0.12%)</title><rect x="87.9562%" y="436" width="0.1177%" height="15" fill="rgb(214,7,15)" fg:x="9713" fg:w="13"/><text x="88.2062%" y="446.50"></text></g><g><title>_set_marker (matplotlib/markers.py:332) (12 samples, 0.11%)</title><rect x="87.9652%" y="452" width="0.1087%" height="15" fill="rgb(235,32,4)" fg:x="9714" fg:w="12"/><text x="88.2152%" y="462.50"></text></g><g><title>deepcopy (copy.py:146) (12 samples, 0.11%)</title><rect x="87.9652%" y="468" width="0.1087%" height="15" fill="rgb(238,90,54)" fg:x="9714" fg:w="12"/><text x="88.2152%" y="478.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (12 samples, 0.11%)</title><rect x="87.9652%" y="484" width="0.1087%" height="15" fill="rgb(213,208,19)" fg:x="9714" fg:w="12"/><text x="88.2152%" y="494.50"></text></g><g><title>_update_ticks (matplotlib/axis.py:1277) (182 samples, 1.65%)</title><rect x="86.4801%" y="372" width="1.6481%" height="15" fill="rgb(233,156,4)" fg:x="9550" fg:w="182"/><text x="86.7301%" y="382.50"></text></g><g><title>get_major_ticks (matplotlib/axis.py:1628) (45 samples, 0.41%)</title><rect x="87.7207%" y="388" width="0.4075%" height="15" fill="rgb(207,194,5)" fg:x="9687" fg:w="45"/><text x="87.9707%" y="398.50"></text></g><g><title>draw (matplotlib/axis.py:1387) (208 samples, 1.88%)</title><rect x="86.3715%" y="356" width="1.8835%" height="15" fill="rgb(206,111,30)" fg:x="9538" fg:w="208"/><text x="86.6215%" y="366.50">d..</text></g><g><title>_get_layout (matplotlib/text.py:381) (13 samples, 0.12%)</title><rect x="88.3456%" y="420" width="0.1177%" height="15" fill="rgb(243,70,54)" fg:x="9756" fg:w="13"/><text x="88.5956%" y="430.50"></text></g><g><title>_get_text_metrics_with_cache (matplotlib/text.py:69) (13 samples, 0.12%)</title><rect x="88.3456%" y="436" width="0.1177%" height="15" fill="rgb(242,28,8)" fg:x="9756" fg:w="13"/><text x="88.5956%" y="446.50"></text></g><g><title>_get_text_metrics_with_cache_impl (matplotlib/text.py:77) (13 samples, 0.12%)</title><rect x="88.3456%" y="452" width="0.1177%" height="15" fill="rgb(219,106,18)" fg:x="9756" fg:w="13"/><text x="88.5956%" y="462.50"></text></g><g><title>get_window_extent (matplotlib/text.py:956) (32 samples, 0.29%)</title><rect x="88.2822%" y="404" width="0.2898%" height="15" fill="rgb(244,222,10)" fg:x="9749" fg:w="32"/><text x="88.5322%" y="414.50"></text></g><g><title>draw (matplotlib/axis.py:1388) (44 samples, 0.40%)</title><rect x="88.2550%" y="356" width="0.3984%" height="15" fill="rgb(236,179,52)" fg:x="9746" fg:w="44"/><text x="88.5050%" y="366.50"></text></g><g><title>_get_ticklabel_bboxes (matplotlib/axis.py:1315) (44 samples, 0.40%)</title><rect x="88.2550%" y="372" width="0.3984%" height="15" fill="rgb(213,23,39)" fg:x="9746" fg:w="44"/><text x="88.5050%" y="382.50"></text></g><g><title>&lt;listcomp&gt; (matplotlib/axis.py:1315) (44 samples, 0.40%)</title><rect x="88.2550%" y="388" width="0.3984%" height="15" fill="rgb(238,48,10)" fg:x="9746" fg:w="44"/><text x="88.5050%" y="398.50"></text></g><g><title>draw_markers (matplotlib/backend_bases.py:224) (17 samples, 0.15%)</title><rect x="88.9613%" y="452" width="0.1539%" height="15" fill="rgb(251,196,23)" fg:x="9824" fg:w="17"/><text x="89.2113%" y="462.50"></text></g><g><title>draw (matplotlib/lines.py:867) (28 samples, 0.25%)</title><rect x="88.9251%" y="420" width="0.2536%" height="15" fill="rgb(250,152,24)" fg:x="9820" fg:w="28"/><text x="89.1751%" y="430.50"></text></g><g><title>draw_markers (matplotlib/backends/backend_pdf.py:2105) (28 samples, 0.25%)</title><rect x="88.9251%" y="436" width="0.2536%" height="15" fill="rgb(209,150,17)" fg:x="9820" fg:w="28"/><text x="89.1751%" y="446.50"></text></g><g><title>draw (matplotlib/text.py:748) (18 samples, 0.16%)</title><rect x="89.2602%" y="420" width="0.1630%" height="15" fill="rgb(234,202,34)" fg:x="9857" fg:w="18"/><text x="89.5102%" y="430.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:72) (135 samples, 1.22%)</title><rect x="88.6897%" y="404" width="1.2225%" height="15" fill="rgb(253,148,53)" fg:x="9794" fg:w="135"/><text x="88.9397%" y="414.50"></text></g><g><title>draw (matplotlib/text.py:797) (41 samples, 0.37%)</title><rect x="89.5409%" y="420" width="0.3713%" height="15" fill="rgb(218,129,16)" fg:x="9888" fg:w="41"/><text x="89.7909%" y="430.50"></text></g><g><title>draw (matplotlib/axis.py:1391) (140 samples, 1.27%)</title><rect x="88.6534%" y="356" width="1.2678%" height="15" fill="rgb(216,85,19)" fg:x="9790" fg:w="140"/><text x="88.9034%" y="366.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:72) (139 samples, 1.26%)</title><rect x="88.6625%" y="372" width="1.2587%" height="15" fill="rgb(235,228,7)" fg:x="9791" fg:w="139"/><text x="88.9125%" y="382.50"></text></g><g><title>draw (matplotlib/axis.py:295) (138 samples, 1.25%)</title><rect x="88.6716%" y="388" width="1.2497%" height="15" fill="rgb(245,175,0)" fg:x="9792" fg:w="138"/><text x="88.9216%" y="398.50"></text></g><g><title>_get_tick_boxes_siblings (matplotlib/axis.py:2160) (14 samples, 0.13%)</title><rect x="89.9303%" y="388" width="0.1268%" height="15" fill="rgb(208,168,36)" fg:x="9931" fg:w="14"/><text x="90.1803%" y="398.50"></text></g><g><title>_update_label_position (matplotlib/axis.py:2368) (25 samples, 0.23%)</title><rect x="89.9212%" y="372" width="0.2264%" height="15" fill="rgb(246,171,24)" fg:x="9930" fg:w="25"/><text x="90.1712%" y="382.50"></text></g><g><title>_update_label_position (matplotlib/axis.py:2374) (14 samples, 0.13%)</title><rect x="90.1476%" y="372" width="0.1268%" height="15" fill="rgb(215,142,24)" fg:x="9955" fg:w="14"/><text x="90.3976%" y="382.50"></text></g><g><title>_get_tick_boxes_siblings (matplotlib/axis.py:2160) (14 samples, 0.13%)</title><rect x="90.2744%" y="388" width="0.1268%" height="15" fill="rgb(250,187,7)" fg:x="9969" fg:w="14"/><text x="90.5244%" y="398.50"></text></g><g><title>_update_label_position (matplotlib/axis.py:2609) (29 samples, 0.26%)</title><rect x="90.2744%" y="372" width="0.2626%" height="15" fill="rgb(228,66,33)" fg:x="9969" fg:w="29"/><text x="90.5244%" y="382.50"></text></g><g><title>_get_tick_boxes_siblings (matplotlib/axis.py:2161) (15 samples, 0.14%)</title><rect x="90.4012%" y="388" width="0.1358%" height="15" fill="rgb(234,215,21)" fg:x="9983" fg:w="15"/><text x="90.6512%" y="398.50"></text></g><g><title>_get_ticklabel_bboxes (matplotlib/axis.py:1315) (15 samples, 0.14%)</title><rect x="90.4012%" y="404" width="0.1358%" height="15" fill="rgb(222,191,20)" fg:x="9983" fg:w="15"/><text x="90.6512%" y="414.50"></text></g><g><title>&lt;listcomp&gt; (matplotlib/axis.py:1315) (15 samples, 0.14%)</title><rect x="90.4012%" y="420" width="0.1358%" height="15" fill="rgb(245,79,54)" fg:x="9983" fg:w="15"/><text x="90.6512%" y="430.50"></text></g><g><title>draw (matplotlib/axis.py:1394) (79 samples, 0.72%)</title><rect x="89.9212%" y="356" width="0.7154%" height="15" fill="rgb(240,10,37)" fg:x="9930" fg:w="79"/><text x="90.1712%" y="366.50"></text></g><g><title>draw (matplotlib/axis.py:1395) (19 samples, 0.17%)</title><rect x="90.6366%" y="356" width="0.1721%" height="15" fill="rgb(214,192,32)" fg:x="10009" fg:w="19"/><text x="90.8866%" y="366.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:72) (18 samples, 0.16%)</title><rect x="90.6457%" y="372" width="0.1630%" height="15" fill="rgb(209,36,54)" fg:x="10010" fg:w="18"/><text x="90.8957%" y="382.50"></text></g><g><title>draw (matplotlib/lines.py:801) (18 samples, 0.16%)</title><rect x="90.8720%" y="356" width="0.1630%" height="15" fill="rgb(220,10,11)" fg:x="10035" fg:w="18"/><text x="91.1220%" y="366.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:72) (521 samples, 4.72%)</title><rect x="86.3715%" y="340" width="4.7179%" height="15" fill="rgb(221,106,17)" fg:x="9538" fg:w="521"/><text x="86.6215%" y="350.50">draw_..</text></g><g><title>print_pdf (matplotlib/backends/backend_pdf.py:2807) (535 samples, 4.84%)</title><rect x="86.2537%" y="212" width="4.8447%" height="15" fill="rgb(251,142,44)" fg:x="9525" fg:w="535"/><text x="86.5037%" y="222.50">print_..</text></g><g><title>draw_wrapper (matplotlib/artist.py:95) (535 samples, 4.84%)</title><rect x="86.2537%" y="228" width="4.8447%" height="15" fill="rgb(238,13,15)" fg:x="9525" fg:w="535"/><text x="86.5037%" y="238.50">draw_w..</text></g><g><title>draw_wrapper (matplotlib/artist.py:72) (534 samples, 4.84%)</title><rect x="86.2628%" y="244" width="4.8356%" height="15" fill="rgb(208,107,27)" fg:x="9526" fg:w="534"/><text x="86.5128%" y="254.50">draw_w..</text></g><g><title>draw (matplotlib/figure.py:3154) (527 samples, 4.77%)</title><rect x="86.3262%" y="260" width="4.7723%" height="15" fill="rgb(205,136,37)" fg:x="9533" fg:w="527"/><text x="86.5762%" y="270.50">draw (..</text></g><g><title>_draw_list_compositing_images (matplotlib/image.py:132) (527 samples, 4.77%)</title><rect x="86.3262%" y="276" width="4.7723%" height="15" fill="rgb(250,205,27)" fg:x="9533" fg:w="527"/><text x="86.5762%" y="286.50">_draw_..</text></g><g><title>draw_wrapper (matplotlib/artist.py:72) (527 samples, 4.77%)</title><rect x="86.3262%" y="292" width="4.7723%" height="15" fill="rgb(210,80,43)" fg:x="9533" fg:w="527"/><text x="86.5762%" y="302.50">draw_w..</text></g><g><title>draw (matplotlib/axes/_base.py:3070) (522 samples, 4.73%)</title><rect x="86.3715%" y="308" width="4.7270%" height="15" fill="rgb(247,160,36)" fg:x="9538" fg:w="522"/><text x="86.6215%" y="318.50">draw (..</text></g><g><title>_draw_list_compositing_images (matplotlib/image.py:132) (522 samples, 4.73%)</title><rect x="86.3715%" y="324" width="4.7270%" height="15" fill="rgb(234,13,49)" fg:x="9538" fg:w="522"/><text x="86.6215%" y="334.50">_draw_..</text></g><g><title>embedTTFType3 (matplotlib/backends/backend_pdf.py:1195) (45 samples, 0.41%)</title><rect x="91.2252%" y="276" width="0.4075%" height="15" fill="rgb(234,122,0)" fg:x="10074" fg:w="45"/><text x="91.4752%" y="286.50"></text></g><g><title>&lt;listcomp&gt; (matplotlib/backends/backend_pdf.py:1195) (45 samples, 0.41%)</title><rect x="91.2252%" y="292" width="0.4075%" height="15" fill="rgb(207,146,38)" fg:x="10074" fg:w="45"/><text x="91.4752%" y="302.50"></text></g><g><title>get_char_width (matplotlib/backends/backend_pdf.py:1187) (44 samples, 0.40%)</title><rect x="91.2343%" y="308" width="0.3984%" height="15" fill="rgb(207,177,25)" fg:x="10075" fg:w="44"/><text x="91.4843%" y="318.50"></text></g><g><title>embedTTFType3 (matplotlib/backends/backend_pdf.py:1224) (34 samples, 0.31%)</title><rect x="91.6327%" y="276" width="0.3079%" height="15" fill="rgb(211,178,42)" fg:x="10119" fg:w="34"/><text x="91.8827%" y="286.50"></text></g><g><title>embedTTFType3 (matplotlib/backends/backend_pdf.py:1243) (12 samples, 0.11%)</title><rect x="91.9406%" y="276" width="0.1087%" height="15" fill="rgb(230,69,54)" fg:x="10153" fg:w="12"/><text x="92.1906%" y="286.50"></text></g><g><title>outputStream (matplotlib/backends/backend_pdf.py:889) (12 samples, 0.11%)</title><rect x="91.9406%" y="292" width="0.1087%" height="15" fill="rgb(214,135,41)" fg:x="10153" fg:w="12"/><text x="92.1906%" y="302.50"></text></g><g><title>endStream (matplotlib/backends/backend_pdf.py:883) (12 samples, 0.11%)</title><rect x="91.9406%" y="308" width="0.1087%" height="15" fill="rgb(237,67,25)" fg:x="10153" fg:w="12"/><text x="92.1906%" y="318.50"></text></g><g><title>finalize (matplotlib/backends/backend_pdf.py:828) (105 samples, 0.95%)</title><rect x="91.1075%" y="228" width="0.9508%" height="15" fill="rgb(222,189,50)" fg:x="10061" fg:w="105"/><text x="91.3575%" y="238.50"></text></g><g><title>writeFonts (matplotlib/backends/backend_pdf.py:974) (103 samples, 0.93%)</title><rect x="91.1256%" y="244" width="0.9327%" height="15" fill="rgb(245,148,34)" fg:x="10063" fg:w="103"/><text x="91.3756%" y="254.50"></text></g><g><title>embedTTF (matplotlib/backends/backend_pdf.py:1451) (92 samples, 0.83%)</title><rect x="91.2252%" y="260" width="0.8331%" height="15" fill="rgb(222,29,6)" fg:x="10074" fg:w="92"/><text x="91.4752%" y="270.50"></text></g><g><title>&lt;lambda&gt; (matplotlib/backend_bases.py:2043) (648 samples, 5.87%)</title><rect x="86.1994%" y="196" width="5.8680%" height="15" fill="rgb(221,189,43)" fg:x="9519" fg:w="648"/><text x="86.4494%" y="206.50">&lt;lambda..</text></g><g><title>print_pdf (matplotlib/backends/backend_pdf.py:2810) (107 samples, 0.97%)</title><rect x="91.0984%" y="212" width="0.9689%" height="15" fill="rgb(207,36,27)" fg:x="10060" fg:w="107"/><text x="91.3484%" y="222.50"></text></g><g><title>savefig (matplotlib/pyplot.py:1119) (659 samples, 5.97%)</title><rect x="86.1632%" y="148" width="5.9676%" height="15" fill="rgb(217,90,24)" fg:x="9515" fg:w="659"/><text x="86.4132%" y="158.50">savefig ..</text></g><g><title>savefig (matplotlib/figure.py:3390) (659 samples, 5.97%)</title><rect x="86.1632%" y="164" width="5.9676%" height="15" fill="rgb(224,66,35)" fg:x="9515" fg:w="659"/><text x="86.4132%" y="174.50">savefig ..</text></g><g><title>print_figure (matplotlib/backend_bases.py:2193) (655 samples, 5.93%)</title><rect x="86.1994%" y="180" width="5.9314%" height="15" fill="rgb(221,13,50)" fg:x="9519" fg:w="655"/><text x="86.4494%" y="190.50">print_fi..</text></g><g><title>draw (matplotlib/axis.py:1387) (22 samples, 0.20%)</title><rect x="92.3119%" y="324" width="0.1992%" height="15" fill="rgb(236,68,49)" fg:x="10194" fg:w="22"/><text x="92.5619%" y="334.50"></text></g><g><title>_get_text_metrics_with_cache (matplotlib/text.py:69) (24 samples, 0.22%)</title><rect x="92.6107%" y="404" width="0.2173%" height="15" fill="rgb(229,146,28)" fg:x="10227" fg:w="24"/><text x="92.8607%" y="414.50"></text></g><g><title>_get_text_metrics_with_cache_impl (matplotlib/text.py:77) (24 samples, 0.22%)</title><rect x="92.6107%" y="420" width="0.2173%" height="15" fill="rgb(225,31,38)" fg:x="10227" fg:w="24"/><text x="92.8607%" y="430.50"></text></g><g><title>get_text_width_height_descent (matplotlib/backends/backend_agg.py:221) (12 samples, 0.11%)</title><rect x="92.7194%" y="436" width="0.1087%" height="15" fill="rgb(250,208,3)" fg:x="10239" fg:w="12"/><text x="92.9694%" y="446.50"></text></g><g><title>_get_layout (matplotlib/text.py:381) (28 samples, 0.25%)</title><rect x="92.6107%" y="388" width="0.2536%" height="15" fill="rgb(246,54,23)" fg:x="10227" fg:w="28"/><text x="92.8607%" y="398.50"></text></g><g><title>get_window_extent (matplotlib/text.py:956) (52 samples, 0.47%)</title><rect x="92.5564%" y="372" width="0.4709%" height="15" fill="rgb(243,76,11)" fg:x="10221" fg:w="52"/><text x="92.8064%" y="382.50"></text></g><g><title>draw (matplotlib/axis.py:1388) (64 samples, 0.58%)</title><rect x="92.5111%" y="324" width="0.5796%" height="15" fill="rgb(245,21,50)" fg:x="10216" fg:w="64"/><text x="92.7611%" y="334.50"></text></g><g><title>_get_ticklabel_bboxes (matplotlib/axis.py:1315) (60 samples, 0.54%)</title><rect x="92.5473%" y="340" width="0.5433%" height="15" fill="rgb(228,9,43)" fg:x="10220" fg:w="60"/><text x="92.7973%" y="350.50"></text></g><g><title>&lt;listcomp&gt; (matplotlib/axis.py:1315) (60 samples, 0.54%)</title><rect x="92.5473%" y="356" width="0.5433%" height="15" fill="rgb(208,100,47)" fg:x="10220" fg:w="60"/><text x="92.7973%" y="366.50"></text></g><g><title>draw (matplotlib/lines.py:746) (15 samples, 0.14%)</title><rect x="93.1088%" y="388" width="0.1358%" height="15" fill="rgb(232,26,8)" fg:x="10282" fg:w="15"/><text x="93.3588%" y="398.50"></text></g><g><title>draw (matplotlib/text.py:748) (20 samples, 0.18%)</title><rect x="93.5072%" y="388" width="0.1811%" height="15" fill="rgb(216,166,38)" fg:x="10326" fg:w="20"/><text x="93.7572%" y="398.50"></text></g><g><title>draw_text (matplotlib/backends/backend_agg.py:194) (13 samples, 0.12%)</title><rect x="93.8151%" y="404" width="0.1177%" height="15" fill="rgb(251,202,51)" fg:x="10360" fg:w="13"/><text x="94.0651%" y="414.50"></text></g><g><title>draw (matplotlib/text.py:797) (32 samples, 0.29%)</title><rect x="93.7245%" y="388" width="0.2898%" height="15" fill="rgb(254,216,34)" fg:x="10350" fg:w="32"/><text x="93.9745%" y="398.50"></text></g><g><title>draw (matplotlib/axis.py:1391) (103 samples, 0.93%)</title><rect x="93.0906%" y="324" width="0.9327%" height="15" fill="rgb(251,32,27)" fg:x="10280" fg:w="103"/><text x="93.3406%" y="334.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:72) (103 samples, 0.93%)</title><rect x="93.0906%" y="340" width="0.9327%" height="15" fill="rgb(208,127,28)" fg:x="10280" fg:w="103"/><text x="93.3406%" y="350.50"></text></g><g><title>draw (matplotlib/axis.py:295) (103 samples, 0.93%)</title><rect x="93.0906%" y="356" width="0.9327%" height="15" fill="rgb(224,137,22)" fg:x="10280" fg:w="103"/><text x="93.3406%" y="366.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:72) (103 samples, 0.93%)</title><rect x="93.0906%" y="372" width="0.9327%" height="15" fill="rgb(254,70,32)" fg:x="10280" fg:w="103"/><text x="93.3406%" y="382.50"></text></g><g><title>get_window_extent (matplotlib/text.py:956) (16 samples, 0.14%)</title><rect x="94.1230%" y="404" width="0.1449%" height="15" fill="rgb(229,75,37)" fg:x="10394" fg:w="16"/><text x="94.3730%" y="414.50"></text></g><g><title>_update_label_position (matplotlib/axis.py:2368) (29 samples, 0.26%)</title><rect x="94.0234%" y="340" width="0.2626%" height="15" fill="rgb(252,64,23)" fg:x="10383" fg:w="29"/><text x="94.2734%" y="350.50"></text></g><g><title>_get_tick_boxes_siblings (matplotlib/axis.py:2161) (18 samples, 0.16%)</title><rect x="94.1230%" y="356" width="0.1630%" height="15" fill="rgb(232,162,48)" fg:x="10394" fg:w="18"/><text x="94.3730%" y="366.50"></text></g><g><title>_get_ticklabel_bboxes (matplotlib/axis.py:1315) (18 samples, 0.16%)</title><rect x="94.1230%" y="372" width="0.1630%" height="15" fill="rgb(246,160,12)" fg:x="10394" fg:w="18"/><text x="94.3730%" y="382.50"></text></g><g><title>&lt;listcomp&gt; (matplotlib/axis.py:1315) (18 samples, 0.16%)</title><rect x="94.1230%" y="388" width="0.1630%" height="15" fill="rgb(247,166,0)" fg:x="10394" fg:w="18"/><text x="94.3730%" y="398.50"></text></g><g><title>_update_label_position (matplotlib/axis.py:2374) (14 samples, 0.13%)</title><rect x="94.2860%" y="340" width="0.1268%" height="15" fill="rgb(249,219,21)" fg:x="10412" fg:w="14"/><text x="94.5360%" y="350.50"></text></g><g><title>_update_label_position (matplotlib/axis.py:2609) (23 samples, 0.21%)</title><rect x="94.4128%" y="340" width="0.2083%" height="15" fill="rgb(205,209,3)" fg:x="10426" fg:w="23"/><text x="94.6628%" y="350.50"></text></g><g><title>_get_tick_boxes_siblings (matplotlib/axis.py:2161) (12 samples, 0.11%)</title><rect x="94.5124%" y="356" width="0.1087%" height="15" fill="rgb(243,44,1)" fg:x="10437" fg:w="12"/><text x="94.7624%" y="366.50"></text></g><g><title>_get_ticklabel_bboxes (matplotlib/axis.py:1315) (12 samples, 0.11%)</title><rect x="94.5124%" y="372" width="0.1087%" height="15" fill="rgb(206,159,16)" fg:x="10437" fg:w="12"/><text x="94.7624%" y="382.50"></text></g><g><title>&lt;listcomp&gt; (matplotlib/axis.py:1315) (12 samples, 0.11%)</title><rect x="94.5124%" y="388" width="0.1087%" height="15" fill="rgb(244,77,30)" fg:x="10437" fg:w="12"/><text x="94.7624%" y="398.50"></text></g><g><title>draw (matplotlib/axis.py:1394) (78 samples, 0.71%)</title><rect x="94.0234%" y="324" width="0.7063%" height="15" fill="rgb(218,69,12)" fg:x="10383" fg:w="78"/><text x="94.2734%" y="334.50"></text></g><g><title>draw (matplotlib/axis.py:1395) (25 samples, 0.23%)</title><rect x="94.7297%" y="324" width="0.2264%" height="15" fill="rgb(212,87,7)" fg:x="10461" fg:w="25"/><text x="94.9797%" y="334.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:72) (25 samples, 0.23%)</title><rect x="94.7297%" y="340" width="0.2264%" height="15" fill="rgb(245,114,25)" fg:x="10461" fg:w="25"/><text x="94.9797%" y="350.50"></text></g><g><title>draw (matplotlib/text.py:797) (14 samples, 0.13%)</title><rect x="94.8293%" y="356" width="0.1268%" height="15" fill="rgb(210,61,42)" fg:x="10472" fg:w="14"/><text x="95.0793%" y="366.50"></text></g><g><title>draw (matplotlib/lines.py:801) (13 samples, 0.12%)</title><rect x="95.0195%" y="324" width="0.1177%" height="15" fill="rgb(211,52,33)" fg:x="10493" fg:w="13"/><text x="95.2695%" y="334.50"></text></g><g><title>draw_path (matplotlib/backends/backend_agg.py:132) (13 samples, 0.12%)</title><rect x="95.0195%" y="340" width="0.1177%" height="15" fill="rgb(234,58,33)" fg:x="10493" fg:w="13"/><text x="95.2695%" y="350.50"></text></g><g><title>create_pdf (src/dycov/report/report.py:119) (1,394 samples, 12.62%)</title><rect x="82.5953%" y="116" width="12.6234%" height="15" fill="rgb(220,115,36)" fg:x="9121" fg:w="1394"/><text x="82.8453%" y="126.50">create_pdf (src/dyn..</text></g><g><title>create_plot (src/dycov/report/figure.py:394) (1,000 samples, 9.06%)</title><rect x="86.1632%" y="132" width="9.0555%" height="15" fill="rgb(243,153,54)" fg:x="9515" fg:w="1000"/><text x="86.4132%" y="142.50">create_plot (..</text></g><g><title>savefig (matplotlib/pyplot.py:1120) (341 samples, 3.09%)</title><rect x="92.1308%" y="148" width="3.0879%" height="15" fill="rgb(251,47,18)" fg:x="10174" fg:w="341"/><text x="92.3808%" y="158.50">sav..</text></g><g><title>draw_idle (matplotlib/backend_bases.py:1893) (341 samples, 3.09%)</title><rect x="92.1308%" y="164" width="3.0879%" height="15" fill="rgb(242,102,42)" fg:x="10174" fg:w="341"/><text x="92.3808%" y="174.50">dra..</text></g><g><title>draw (matplotlib/backends/backend_agg.py:388) (335 samples, 3.03%)</title><rect x="92.1851%" y="180" width="3.0336%" height="15" fill="rgb(234,31,38)" fg:x="10180" fg:w="335"/><text x="92.4351%" y="190.50">dra..</text></g><g><title>draw_wrapper (matplotlib/artist.py:95) (335 samples, 3.03%)</title><rect x="92.1851%" y="196" width="3.0336%" height="15" fill="rgb(221,117,51)" fg:x="10180" fg:w="335"/><text x="92.4351%" y="206.50">dra..</text></g><g><title>draw_wrapper (matplotlib/artist.py:72) (335 samples, 3.03%)</title><rect x="92.1851%" y="212" width="3.0336%" height="15" fill="rgb(212,20,18)" fg:x="10180" fg:w="335"/><text x="92.4351%" y="222.50">dra..</text></g><g><title>draw (matplotlib/figure.py:3154) (327 samples, 2.96%)</title><rect x="92.2575%" y="228" width="2.9612%" height="15" fill="rgb(245,133,36)" fg:x="10188" fg:w="327"/><text x="92.5075%" y="238.50">dra..</text></g><g><title>_draw_list_compositing_images (matplotlib/image.py:132) (327 samples, 2.96%)</title><rect x="92.2575%" y="244" width="2.9612%" height="15" fill="rgb(212,6,19)" fg:x="10188" fg:w="327"/><text x="92.5075%" y="254.50">_dr..</text></g><g><title>draw_wrapper (matplotlib/artist.py:72) (327 samples, 2.96%)</title><rect x="92.2575%" y="260" width="2.9612%" height="15" fill="rgb(218,1,36)" fg:x="10188" fg:w="327"/><text x="92.5075%" y="270.50">dra..</text></g><g><title>draw (matplotlib/axes/_base.py:3070) (321 samples, 2.91%)</title><rect x="92.3119%" y="276" width="2.9068%" height="15" fill="rgb(246,84,54)" fg:x="10194" fg:w="321"/><text x="92.5619%" y="286.50">dr..</text></g><g><title>_draw_list_compositing_images (matplotlib/image.py:132) (321 samples, 2.91%)</title><rect x="92.3119%" y="292" width="2.9068%" height="15" fill="rgb(242,110,6)" fg:x="10194" fg:w="321"/><text x="92.5619%" y="302.50">_d..</text></g><g><title>draw_wrapper (matplotlib/artist.py:72) (321 samples, 2.91%)</title><rect x="92.3119%" y="308" width="2.9068%" height="15" fill="rgb(214,47,5)" fg:x="10194" fg:w="321"/><text x="92.5619%" y="318.50">dr..</text></g><g><title>create_pdf (src/dycov/report/report.py:120) (37 samples, 0.34%)</title><rect x="95.2187%" y="116" width="0.3351%" height="15" fill="rgb(218,159,25)" fg:x="10515" fg:w="37"/><text x="95.4687%" y="126.50"></text></g><g><title>create_pdf (src/dycov/report/report.py:122) (51 samples, 0.46%)</title><rect x="95.5537%" y="116" width="0.4618%" height="15" fill="rgb(215,211,28)" fg:x="10552" fg:w="51"/><text x="95.8037%" y="126.50"></text></g><g><title>_pcs_replace (src/dycov/report/report.py:243) (14 samples, 0.13%)</title><rect x="96.0246%" y="132" width="0.1268%" height="15" fill="rgb(238,59,32)" fg:x="10604" fg:w="14"/><text x="96.2746%" y="142.50"></text></g><g><title>_get_template (src/dycov/report/report.py:287) (14 samples, 0.13%)</title><rect x="96.0246%" y="148" width="0.1268%" height="15" fill="rgb(226,82,3)" fg:x="10604" fg:w="14"/><text x="96.2746%" y="158.50"></text></g><g><title>get_template (jinja2/environment.py:1010) (14 samples, 0.13%)</title><rect x="96.0246%" y="164" width="0.1268%" height="15" fill="rgb(240,164,32)" fg:x="10604" fg:w="14"/><text x="96.2746%" y="174.50"></text></g><g><title>_load_template (jinja2/environment.py:969) (14 samples, 0.13%)</title><rect x="96.0246%" y="180" width="0.1268%" height="15" fill="rgb(232,46,7)" fg:x="10604" fg:w="14"/><text x="96.2746%" y="190.50"></text></g><g><title>load (jinja2/loaders.py:137) (14 samples, 0.13%)</title><rect x="96.0246%" y="196" width="0.1268%" height="15" fill="rgb(229,129,53)" fg:x="10604" fg:w="14"/><text x="96.2746%" y="206.50"></text></g><g><title>create_pdf (src/dycov/report/report.py:140) (15 samples, 0.14%)</title><rect x="96.0246%" y="116" width="0.1358%" height="15" fill="rgb(234,188,29)" fg:x="10604" fg:w="15"/><text x="96.2746%" y="126.50"></text></g><g><title>get_curves2plot (src/dycov/report/figure.py:422) (26 samples, 0.24%)</title><rect x="96.3416%" y="148" width="0.2354%" height="15" fill="rgb(246,141,4)" fg:x="10639" fg:w="26"/><text x="96.5916%" y="158.50"></text></g><g><title>_add_curve2plot (src/dycov/report/figure.py:48) (26 samples, 0.24%)</title><rect x="96.3416%" y="164" width="0.2354%" height="15" fill="rgb(229,23,39)" fg:x="10639" fg:w="26"/><text x="96.5916%" y="174.50"></text></g><g><title>get_curves2plot (src/dycov/report/figure.py:428) (12 samples, 0.11%)</title><rect x="96.5861%" y="148" width="0.1087%" height="15" fill="rgb(206,12,3)" fg:x="10666" fg:w="12"/><text x="96.8361%" y="158.50"></text></g><g><title>_add_curve2plot (src/dycov/report/figure.py:48) (12 samples, 0.11%)</title><rect x="96.5861%" y="164" width="0.1087%" height="15" fill="rgb(252,226,20)" fg:x="10666" fg:w="12"/><text x="96.8361%" y="174.50"></text></g><g><title>get_common_time_range (src/dycov/report/figure.py:208) (55 samples, 0.50%)</title><rect x="96.2872%" y="132" width="0.4981%" height="15" fill="rgb(216,123,35)" fg:x="10633" fg:w="55"/><text x="96.5372%" y="142.50"></text></g><g><title>_get_xrange_for_curve (src/dycov/report/figure.py:98) (52 samples, 0.47%)</title><rect x="96.9302%" y="164" width="0.4709%" height="15" fill="rgb(212,68,40)" fg:x="10704" fg:w="52"/><text x="97.1802%" y="174.50"></text></g><g><title>validate (src/dycov/core/model_validation.py:168) (1,818 samples, 16.46%)</title><rect x="81.5720%" y="100" width="16.4629%" height="15" fill="rgb(254,125,32)" fg:x="9008" fg:w="1818"/><text x="81.8220%" y="110.50">validate (src/dynawo_mode..</text></g><g><title>create_pdf (src/dycov/report/report.py:98) (200 samples, 1.81%)</title><rect x="96.2239%" y="116" width="1.8111%" height="15" fill="rgb(253,97,22)" fg:x="10626" fg:w="200"/><text x="96.4739%" y="126.50">c..</text></g><g><title>get_common_time_range (src/dycov/report/figure.py:212) (138 samples, 1.25%)</title><rect x="96.7853%" y="132" width="1.2497%" height="15" fill="rgb(241,101,14)" fg:x="10688" fg:w="138"/><text x="97.0353%" y="142.50"></text></g><g><title>_get_xrange (src/dycov/report/figure.py:65) (138 samples, 1.25%)</title><rect x="96.7853%" y="148" width="1.2497%" height="15" fill="rgb(238,103,29)" fg:x="10688" fg:w="138"/><text x="97.0353%" y="158.50"></text></g><g><title>_get_xrange_for_curve (src/dycov/report/figure.py:99) (70 samples, 0.63%)</title><rect x="97.4011%" y="164" width="0.6339%" height="15" fill="rgb(233,195,47)" fg:x="10756" fg:w="70"/><text x="97.6511%" y="174.50"></text></g><g><title>merge (pypdf/_merger.py:174) (15 samples, 0.14%)</title><rect x="98.1074%" y="164" width="0.1358%" height="15" fill="rgb(246,218,30)" fg:x="10834" fg:w="15"/><text x="98.3574%" y="174.50"></text></g><g><title>outline (pypdf/_reader.py:748) (15 samples, 0.14%)</title><rect x="98.1074%" y="180" width="0.1358%" height="15" fill="rgb(219,145,47)" fg:x="10834" fg:w="15"/><text x="98.3574%" y="190.50"></text></g><g><title>_concat (src/dycov/report/final_pdf.py:47) (25 samples, 0.23%)</title><rect x="98.0621%" y="132" width="0.2264%" height="15" fill="rgb(243,12,26)" fg:x="10829" fg:w="25"/><text x="98.3121%" y="142.50"></text></g><g><title>append (pypdf/_merger.py:273) (25 samples, 0.23%)</title><rect x="98.0621%" y="148" width="0.2264%" height="15" fill="rgb(214,87,16)" fg:x="10829" fg:w="25"/><text x="98.3121%" y="158.50"></text></g><g><title>clone (pypdf/generic/_base.py:264) (12 samples, 0.11%)</title><rect x="98.3519%" y="308" width="0.1087%" height="15" fill="rgb(208,99,42)" fg:x="10861" fg:w="12"/><text x="98.6019%" y="318.50"></text></g><g><title>get_object (pypdf/generic/_base.py:284) (12 samples, 0.11%)</title><rect x="98.3519%" y="324" width="0.1087%" height="15" fill="rgb(253,99,2)" fg:x="10861" fg:w="12"/><text x="98.6019%" y="334.50"></text></g><g><title>_clone (pypdf/generic/_data_structures.py:296) (19 samples, 0.17%)</title><rect x="98.4606%" y="340" width="0.1721%" height="15" fill="rgb(220,168,23)" fg:x="10873" fg:w="19"/><text x="98.7106%" y="350.50"></text></g><g><title>clone (pypdf/generic/_base.py:272) (14 samples, 0.13%)</title><rect x="98.5058%" y="356" width="0.1268%" height="15" fill="rgb(242,38,24)" fg:x="10878" fg:w="14"/><text x="98.7558%" y="366.50"></text></g><g><title>clone (pypdf/generic/_data_structures.py:185) (12 samples, 0.11%)</title><rect x="98.5240%" y="372" width="0.1087%" height="15" fill="rgb(225,182,9)" fg:x="10880" fg:w="12"/><text x="98.7740%" y="382.50"></text></g><g><title>_clone (pypdf/generic/_data_structures.py:296) (12 samples, 0.11%)</title><rect x="98.5240%" y="388" width="0.1087%" height="15" fill="rgb(243,178,37)" fg:x="10880" fg:w="12"/><text x="98.7740%" y="398.50"></text></g><g><title>get_object (pypdf/_reader.py:1171) (28 samples, 0.25%)</title><rect x="98.7956%" y="516" width="0.2536%" height="15" fill="rgb(232,139,19)" fg:x="10910" fg:w="28"/><text x="99.0456%" y="526.50"></text></g><g><title>_get_object_from_stream (pypdf/_reader.py:1121) (15 samples, 0.14%)</title><rect x="98.9133%" y="532" width="0.1358%" height="15" fill="rgb(225,201,24)" fg:x="10923" fg:w="15"/><text x="99.1633%" y="542.50"></text></g><g><title>read_object (pypdf/generic/_data_structures.py:1196) (12 samples, 0.11%)</title><rect x="98.9405%" y="548" width="0.1087%" height="15" fill="rgb(221,47,46)" fg:x="10926" fg:w="12"/><text x="99.1905%" y="558.50"></text></g><g><title>read_from_stream (pypdf/generic/_data_structures.py:159) (12 samples, 0.11%)</title><rect x="98.9405%" y="564" width="0.1087%" height="15" fill="rgb(249,23,13)" fg:x="10926" fg:w="12"/><text x="99.1905%" y="574.50"></text></g><g><title>clone (pypdf/generic/_base.py:264) (31 samples, 0.28%)</title><rect x="98.7866%" y="484" width="0.2807%" height="15" fill="rgb(219,9,5)" fg:x="10909" fg:w="31"/><text x="99.0366%" y="494.50"></text></g><g><title>get_object (pypdf/generic/_base.py:284) (31 samples, 0.28%)</title><rect x="98.7866%" y="500" width="0.2807%" height="15" fill="rgb(254,171,16)" fg:x="10909" fg:w="31"/><text x="99.0366%" y="510.50"></text></g><g><title>clone (pypdf/generic/_data_structures.py:107) (14 samples, 0.13%)</title><rect x="99.0673%" y="500" width="0.1268%" height="15" fill="rgb(230,171,20)" fg:x="10940" fg:w="14"/><text x="99.3173%" y="510.50"></text></g><g><title>clone (pypdf/generic/_base.py:264) (14 samples, 0.13%)</title><rect x="99.3027%" y="532" width="0.1268%" height="15" fill="rgb(210,71,41)" fg:x="10966" fg:w="14"/><text x="99.5527%" y="542.50"></text></g><g><title>get_object (pypdf/generic/_base.py:284) (14 samples, 0.13%)</title><rect x="99.3027%" y="548" width="0.1268%" height="15" fill="rgb(206,173,20)" fg:x="10966" fg:w="14"/><text x="99.5527%" y="558.50"></text></g><g><title>get_object (pypdf/_reader.py:1226) (12 samples, 0.11%)</title><rect x="99.3208%" y="564" width="0.1087%" height="15" fill="rgb(233,88,34)" fg:x="10968" fg:w="12"/><text x="99.5708%" y="574.50"></text></g><g><title>read_object (pypdf/generic/_data_structures.py:1192) (12 samples, 0.11%)</title><rect x="99.3208%" y="580" width="0.1087%" height="15" fill="rgb(223,209,46)" fg:x="10968" fg:w="12"/><text x="99.5708%" y="590.50"></text></g><g><title>clone (pypdf/generic/_base.py:272) (46 samples, 0.42%)</title><rect x="99.0673%" y="484" width="0.4166%" height="15" fill="rgb(250,43,18)" fg:x="10940" fg:w="46"/><text x="99.3173%" y="494.50"></text></g><g><title>clone (pypdf/generic/_data_structures.py:185) (23 samples, 0.21%)</title><rect x="99.2756%" y="500" width="0.2083%" height="15" fill="rgb(208,13,10)" fg:x="10963" fg:w="23"/><text x="99.5256%" y="510.50"></text></g><g><title>_clone (pypdf/generic/_data_structures.py:296) (20 samples, 0.18%)</title><rect x="99.3027%" y="516" width="0.1811%" height="15" fill="rgb(212,200,36)" fg:x="10966" fg:w="20"/><text x="99.5527%" y="526.50"></text></g><g><title>clone (pypdf/generic/_base.py:272) (78 samples, 0.71%)</title><rect x="98.7866%" y="436" width="0.7063%" height="15" fill="rgb(225,90,30)" fg:x="10909" fg:w="78"/><text x="99.0366%" y="446.50"></text></g><g><title>clone (pypdf/generic/_data_structures.py:185) (78 samples, 0.71%)</title><rect x="98.7866%" y="452" width="0.7063%" height="15" fill="rgb(236,182,39)" fg:x="10909" fg:w="78"/><text x="99.0366%" y="462.50"></text></g><g><title>_clone (pypdf/generic/_data_structures.py:296) (78 samples, 0.71%)</title><rect x="98.7866%" y="468" width="0.7063%" height="15" fill="rgb(212,144,35)" fg:x="10909" fg:w="78"/><text x="99.0366%" y="478.50"></text></g><g><title>clone (pypdf/generic/_data_structures.py:185) (129 samples, 1.17%)</title><rect x="98.3338%" y="276" width="1.1682%" height="15" fill="rgb(228,63,44)" fg:x="10859" fg:w="129"/><text x="98.5838%" y="286.50"></text></g><g><title>_clone (pypdf/generic/_data_structures.py:296) (127 samples, 1.15%)</title><rect x="98.3519%" y="292" width="1.1500%" height="15" fill="rgb(228,109,6)" fg:x="10861" fg:w="127"/><text x="98.6019%" y="302.50"></text></g><g><title>clone (pypdf/generic/_base.py:272) (115 samples, 1.04%)</title><rect x="98.4606%" y="308" width="1.0414%" height="15" fill="rgb(238,117,24)" fg:x="10873" fg:w="115"/><text x="98.7106%" y="318.50"></text></g><g><title>clone (pypdf/generic/_data_structures.py:185) (115 samples, 1.04%)</title><rect x="98.4606%" y="324" width="1.0414%" height="15" fill="rgb(242,26,26)" fg:x="10873" fg:w="115"/><text x="98.7106%" y="334.50"></text></g><g><title>_clone (pypdf/generic/_data_structures.py:781) (96 samples, 0.87%)</title><rect x="98.6326%" y="340" width="0.8693%" height="15" fill="rgb(221,92,48)" fg:x="10892" fg:w="96"/><text x="98.8826%" y="350.50"></text></g><g><title>_clone (pypdf/generic/_data_structures.py:296) (95 samples, 0.86%)</title><rect x="98.6417%" y="356" width="0.8603%" height="15" fill="rgb(209,209,32)" fg:x="10893" fg:w="95"/><text x="98.8917%" y="366.50"></text></g><g><title>clone (pypdf/generic/_data_structures.py:185) (88 samples, 0.80%)</title><rect x="98.7051%" y="372" width="0.7969%" height="15" fill="rgb(221,70,22)" fg:x="10900" fg:w="88"/><text x="98.9551%" y="382.50"></text></g><g><title>_clone (pypdf/generic/_data_structures.py:296) (88 samples, 0.80%)</title><rect x="98.7051%" y="388" width="0.7969%" height="15" fill="rgb(248,145,5)" fg:x="10900" fg:w="88"/><text x="98.9551%" y="398.50"></text></g><g><title>clone (pypdf/generic/_data_structures.py:185) (88 samples, 0.80%)</title><rect x="98.7051%" y="404" width="0.7969%" height="15" fill="rgb(226,116,26)" fg:x="10900" fg:w="88"/><text x="98.9551%" y="414.50"></text></g><g><title>_clone (pypdf/generic/_data_structures.py:296) (88 samples, 0.80%)</title><rect x="98.7051%" y="420" width="0.7969%" height="15" fill="rgb(244,5,17)" fg:x="10900" fg:w="88"/><text x="98.9551%" y="430.50"></text></g><g><title>clone (pypdf/generic/_base.py:272) (131 samples, 1.19%)</title><rect x="98.3247%" y="228" width="1.1863%" height="15" fill="rgb(252,159,33)" fg:x="10858" fg:w="131"/><text x="98.5747%" y="238.50"></text></g><g><title>clone (pypdf/generic/_data_structures.py:185) (131 samples, 1.19%)</title><rect x="98.3247%" y="244" width="1.1863%" height="15" fill="rgb(206,71,0)" fg:x="10858" fg:w="131"/><text x="98.5747%" y="254.50"></text></g><g><title>_clone (pypdf/generic/_data_structures.py:296) (130 samples, 1.18%)</title><rect x="98.3338%" y="260" width="1.1772%" height="15" fill="rgb(233,118,54)" fg:x="10859" fg:w="130"/><text x="98.5838%" y="270.50"></text></g><g><title>write (pypdf/_merger.py:290) (141 samples, 1.28%)</title><rect x="98.2885%" y="148" width="1.2768%" height="15" fill="rgb(234,83,48)" fg:x="10854" fg:w="141"/><text x="98.5385%" y="158.50"></text></g><g><title>add_page (pypdf/_writer.py:386) (141 samples, 1.28%)</title><rect x="98.2885%" y="164" width="1.2768%" height="15" fill="rgb(228,3,54)" fg:x="10854" fg:w="141"/><text x="98.5385%" y="174.50"></text></g><g><title>_add_page (pypdf/_writer.py:299) (141 samples, 1.28%)</title><rect x="98.2885%" y="180" width="1.2768%" height="15" fill="rgb(226,155,13)" fg:x="10854" fg:w="141"/><text x="98.5385%" y="190.50"></text></g><g><title>clone (pypdf/generic/_data_structures.py:185) (141 samples, 1.28%)</title><rect x="98.2885%" y="196" width="1.2768%" height="15" fill="rgb(241,28,37)" fg:x="10854" fg:w="141"/><text x="98.5385%" y="206.50"></text></g><g><title>_clone (pypdf/generic/_data_structures.py:296) (141 samples, 1.28%)</title><rect x="98.2885%" y="212" width="1.2768%" height="15" fill="rgb(233,93,10)" fg:x="10854" fg:w="141"/><text x="98.5385%" y="222.50"></text></g><g><title>write_to_stream (pypdf/generic/_data_structures.py:802) (12 samples, 0.11%)</title><rect x="99.8551%" y="212" width="0.1087%" height="15" fill="rgb(225,113,19)" fg:x="11027" fg:w="12"/><text x="100.1051%" y="222.50"></text></g><g><title>write_stream (pypdf/_writer.py:1134) (41 samples, 0.37%)</title><rect x="99.6106%" y="180" width="0.3713%" height="15" fill="rgb(241,2,18)" fg:x="11000" fg:w="41"/><text x="99.8606%" y="190.50"></text></g><g><title>_write_pdf_structure (pypdf/_writer.py:1180) (40 samples, 0.36%)</title><rect x="99.6197%" y="196" width="0.3622%" height="15" fill="rgb(228,207,21)" fg:x="11001" fg:w="40"/><text x="99.8697%" y="206.50"></text></g><g><title>validate (src/dycov/core/model_validation.py:202) (213 samples, 1.93%)</title><rect x="98.0621%" y="100" width="1.9288%" height="15" fill="rgb(213,211,35)" fg:x="10829" fg:w="213"/><text x="98.3121%" y="110.50">v..</text></g><g><title>concat_reports (src/dycov/report/final_pdf.py:41) (213 samples, 1.93%)</title><rect x="98.0621%" y="116" width="1.9288%" height="15" fill="rgb(209,83,10)" fg:x="10829" fg:w="213"/><text x="98.3121%" y="126.50">c..</text></g><g><title>_concat (src/dycov/report/final_pdf.py:48) (188 samples, 1.70%)</title><rect x="98.2885%" y="132" width="1.7024%" height="15" fill="rgb(209,164,1)" fg:x="10854" fg:w="188"/><text x="98.5385%" y="142.50"></text></g><g><title>write (pypdf/_merger.py:301) (42 samples, 0.38%)</title><rect x="99.6106%" y="148" width="0.3803%" height="15" fill="rgb(213,184,43)" fg:x="11000" fg:w="42"/><text x="99.8606%" y="158.50"></text></g><g><title>write (pypdf/_writer.py:1161) (42 samples, 0.38%)</title><rect x="99.6106%" y="164" width="0.3803%" height="15" fill="rgb(231,61,34)" fg:x="11000" fg:w="42"/><text x="99.8606%" y="174.50"></text></g><g><title>all (11,043 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(235,75,3)" fg:x="0" fg:w="11043"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (model_validation:8) (10,930 samples, 98.98%)</title><rect x="1.0233%" y="68" width="98.9767%" height="15" fill="rgb(220,106,47)" fg:x="113" fg:w="10930"/><text x="1.2733%" y="78.50">&lt;module&gt; (model_validation:8)</text></g><g><title>model_validation (src/dycov/launchers.py:313) (10,927 samples, 98.95%)</title><rect x="1.0504%" y="84" width="98.9496%" height="15" fill="rgb(210,196,33)" fg:x="116" fg:w="10927"/><text x="1.3004%" y="94.50">model_validation (src/dycov/launchers.py:313)</text></g></svg></svg>