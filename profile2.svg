<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1146" onload="init(evt)" viewBox="0 0 1200 1146" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1146" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">py-spy record -o profile2.svg -- dgcv validate examples/Model/Wind/WECC/ReferenceCurves -m examples/Model/Wind/WECC/Dynawo -o ../Results/Model/WindWECC</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1135.00"> </text><svg id="frames" x="10" width="1180" total_samples="53017"><g><title>&lt;module&gt; (dgcv:5) (137 samples, 0.26%)</title><rect x="0.0000%" y="68" width="0.2584%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="137"/><text x="0.2500%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (137 samples, 0.26%)</title><rect x="0.0000%" y="84" width="0.2584%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="137"/><text x="0.2500%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (137 samples, 0.26%)</title><rect x="0.0000%" y="100" width="0.2584%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="137"/><text x="0.2500%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (137 samples, 0.26%)</title><rect x="0.0000%" y="116" width="0.2584%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="137"/><text x="0.2500%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (137 samples, 0.26%)</title><rect x="0.0000%" y="132" width="0.2584%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="137"/><text x="0.2500%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (137 samples, 0.26%)</title><rect x="0.0000%" y="148" width="0.2584%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="137"/><text x="0.2500%" y="158.50"></text></g><g><title>&lt;module&gt; (src/dgcv/launchers.py:16) (137 samples, 0.26%)</title><rect x="0.0000%" y="164" width="0.2584%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="137"/><text x="0.2500%" y="174.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (137 samples, 0.26%)</title><rect x="0.0000%" y="180" width="0.2584%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="137"/><text x="0.2500%" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (137 samples, 0.26%)</title><rect x="0.0000%" y="196" width="0.2584%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="137"/><text x="0.2500%" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (137 samples, 0.26%)</title><rect x="0.0000%" y="212" width="0.2584%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="137"/><text x="0.2500%" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (137 samples, 0.26%)</title><rect x="0.0000%" y="228" width="0.2584%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="137"/><text x="0.2500%" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (137 samples, 0.26%)</title><rect x="0.0000%" y="244" width="0.2584%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="137"/><text x="0.2500%" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (137 samples, 0.26%)</title><rect x="0.0000%" y="260" width="0.2584%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="137"/><text x="0.2500%" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (137 samples, 0.26%)</title><rect x="0.0000%" y="276" width="0.2584%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="137"/><text x="0.2500%" y="286.50"></text></g><g><title>&lt;module&gt; (src/dgcv/core/initialization.py:7) (137 samples, 0.26%)</title><rect x="0.0000%" y="292" width="0.2584%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="137"/><text x="0.2500%" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (137 samples, 0.26%)</title><rect x="0.0000%" y="308" width="0.2584%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="137"/><text x="0.2500%" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (137 samples, 0.26%)</title><rect x="0.0000%" y="324" width="0.2584%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="137"/><text x="0.2500%" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (137 samples, 0.26%)</title><rect x="0.0000%" y="340" width="0.2584%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="137"/><text x="0.2500%" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (137 samples, 0.26%)</title><rect x="0.0000%" y="356" width="0.2584%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="137"/><text x="0.2500%" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (137 samples, 0.26%)</title><rect x="0.0000%" y="372" width="0.2584%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="137"/><text x="0.2500%" y="382.50"></text></g><g><title>&lt;module&gt; (src/dgcv/core/validation.py:32) (55 samples, 0.10%)</title><rect x="0.1547%" y="388" width="0.1037%" height="15" fill="rgb(249,33,26)" fg:x="82" fg:w="55"/><text x="0.4047%" y="398.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (55 samples, 0.10%)</title><rect x="0.1547%" y="404" width="0.1037%" height="15" fill="rgb(235,183,28)" fg:x="82" fg:w="55"/><text x="0.4047%" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (55 samples, 0.10%)</title><rect x="0.1547%" y="420" width="0.1037%" height="15" fill="rgb(221,5,38)" fg:x="82" fg:w="55"/><text x="0.4047%" y="430.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (55 samples, 0.10%)</title><rect x="0.1547%" y="436" width="0.1037%" height="15" fill="rgb(247,18,42)" fg:x="82" fg:w="55"/><text x="0.4047%" y="446.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (55 samples, 0.10%)</title><rect x="0.1547%" y="452" width="0.1037%" height="15" fill="rgb(241,131,45)" fg:x="82" fg:w="55"/><text x="0.4047%" y="462.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (55 samples, 0.10%)</title><rect x="0.1547%" y="468" width="0.1037%" height="15" fill="rgb(249,31,29)" fg:x="82" fg:w="55"/><text x="0.4047%" y="478.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (55 samples, 0.10%)</title><rect x="0.1547%" y="484" width="0.1037%" height="15" fill="rgb(225,111,53)" fg:x="82" fg:w="55"/><text x="0.4047%" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (55 samples, 0.10%)</title><rect x="0.1547%" y="500" width="0.1037%" height="15" fill="rgb(238,160,17)" fg:x="82" fg:w="55"/><text x="0.4047%" y="510.50"></text></g><g><title>&lt;module&gt; (src/dgcv/report/report.py:27) (55 samples, 0.10%)</title><rect x="0.1547%" y="516" width="0.1037%" height="15" fill="rgb(214,148,48)" fg:x="82" fg:w="55"/><text x="0.4047%" y="526.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (55 samples, 0.10%)</title><rect x="0.1547%" y="532" width="0.1037%" height="15" fill="rgb(232,36,49)" fg:x="82" fg:w="55"/><text x="0.4047%" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (55 samples, 0.10%)</title><rect x="0.1547%" y="548" width="0.1037%" height="15" fill="rgb(209,103,24)" fg:x="82" fg:w="55"/><text x="0.4047%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (55 samples, 0.10%)</title><rect x="0.1547%" y="564" width="0.1037%" height="15" fill="rgb(229,88,8)" fg:x="82" fg:w="55"/><text x="0.4047%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (55 samples, 0.10%)</title><rect x="0.1547%" y="580" width="0.1037%" height="15" fill="rgb(213,181,19)" fg:x="82" fg:w="55"/><text x="0.4047%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (55 samples, 0.10%)</title><rect x="0.1547%" y="596" width="0.1037%" height="15" fill="rgb(254,191,54)" fg:x="82" fg:w="55"/><text x="0.4047%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (54 samples, 0.10%)</title><rect x="0.1566%" y="612" width="0.1019%" height="15" fill="rgb(241,83,37)" fg:x="83" fg:w="54"/><text x="0.4066%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (54 samples, 0.10%)</title><rect x="0.1566%" y="628" width="0.1019%" height="15" fill="rgb(233,36,39)" fg:x="83" fg:w="54"/><text x="0.4066%" y="638.50"></text></g><g><title>&lt;module&gt; (src/dgcv/report/figure.py:14) (54 samples, 0.10%)</title><rect x="0.1566%" y="644" width="0.1019%" height="15" fill="rgb(226,3,54)" fg:x="83" fg:w="54"/><text x="0.4066%" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (54 samples, 0.10%)</title><rect x="0.1566%" y="660" width="0.1019%" height="15" fill="rgb(245,192,40)" fg:x="83" fg:w="54"/><text x="0.4066%" y="670.50"></text></g><g><title>_model_validation (src/dgcv/launchers.py:90) (63 samples, 0.12%)</title><rect x="0.2622%" y="116" width="0.1188%" height="15" fill="rgb(238,167,29)" fg:x="139" fg:w="63"/><text x="0.5122%" y="126.50"></text></g><g><title>_internal_poll (subprocess.py:1896) (607 samples, 1.14%)</title><rect x="0.6130%" y="324" width="1.1449%" height="15" fill="rgb(232,182,51)" fg:x="325" fg:w="607"/><text x="0.8630%" y="334.50"></text></g><g><title>_run_dynawo (src/dgcv/dynawo/dynawo.py:180) (625 samples, 1.18%)</title><rect x="0.5809%" y="292" width="1.1789%" height="15" fill="rgb(231,60,39)" fg:x="308" fg:w="625"/><text x="0.8309%" y="302.50"></text></g><g><title>poll (subprocess.py:1181) (620 samples, 1.17%)</title><rect x="0.5904%" y="308" width="1.1694%" height="15" fill="rgb(208,69,12)" fg:x="313" fg:w="620"/><text x="0.8404%" y="318.50"></text></g><g><title>run_base_dynawo (src/dgcv/dynawo/dynawo.py:573) (631 samples, 1.19%)</title><rect x="0.5753%" y="276" width="1.1902%" height="15" fill="rgb(235,93,37)" fg:x="305" fg:w="631"/><text x="0.8253%" y="286.50"></text></g><g><title>__get_hiz_fault (src/dgcv/dynawo/curves.py:579) (663 samples, 1.25%)</title><rect x="0.5753%" y="244" width="1.2505%" height="15" fill="rgb(213,116,39)" fg:x="305" fg:w="663"/><text x="0.8253%" y="254.50"></text></g><g><title>__execute_dynawo (src/dgcv/dynawo/curves.py:522) (663 samples, 1.25%)</title><rect x="0.5753%" y="260" width="1.2505%" height="15" fill="rgb(222,207,29)" fg:x="305" fg:w="663"/><text x="0.8253%" y="270.50"></text></g><g><title>obtain_simulated_curve (src/dgcv/dynawo/curves.py:871) (671 samples, 1.27%)</title><rect x="0.5659%" y="228" width="1.2656%" height="15" fill="rgb(206,96,30)" fg:x="300" fg:w="671"/><text x="0.8159%" y="238.50"></text></g><g><title>_internal_poll (subprocess.py:1889) (184 samples, 0.35%)</title><rect x="2.0937%" y="308" width="0.3471%" height="15" fill="rgb(218,138,4)" fg:x="1110" fg:w="184"/><text x="2.3437%" y="318.50"></text></g><g><title>_internal_poll (subprocess.py:1896) (14,715 samples, 27.76%)</title><rect x="2.5671%" y="308" width="27.7552%" height="15" fill="rgb(250,191,14)" fg:x="1361" fg:w="14715"/><text x="2.8171%" y="318.50">_internal_poll (subprocess.py:1896)</text></g><g><title>_run_dynawo (src/dgcv/dynawo/dynawo.py:180) (15,135 samples, 28.55%)</title><rect x="1.8334%" y="276" width="28.5474%" height="15" fill="rgb(239,60,40)" fg:x="972" fg:w="15135"/><text x="2.0834%" y="286.50">_run_dynawo (src/dgcv/dynawo/dynawo.py:180)</text></g><g><title>poll (subprocess.py:1181) (15,074 samples, 28.43%)</title><rect x="1.9484%" y="292" width="28.4324%" height="15" fill="rgb(206,27,48)" fg:x="1033" fg:w="15074"/><text x="2.1984%" y="302.50">poll (subprocess.py:1181)</text></g><g><title>run_base_dynawo (src/dgcv/dynawo/dynawo.py:573) (15,182 samples, 28.64%)</title><rect x="1.8315%" y="260" width="28.6361%" height="15" fill="rgb(225,35,8)" fg:x="971" fg:w="15182"/><text x="2.0815%" y="270.50">run_base_dynawo (src/dgcv/dynawo/dynawo.py:573)</text></g><g><title>read (pandas/io/parsers/c_parser_wrapper.py:234) (70 samples, 0.13%)</title><rect x="30.4959%" y="340" width="0.1320%" height="15" fill="rgb(250,213,24)" fg:x="16168" fg:w="70"/><text x="30.7459%" y="350.50"></text></g><g><title>read (pandas/io/parsers/readers.py:1923) (71 samples, 0.13%)</title><rect x="30.4959%" y="324" width="0.1339%" height="15" fill="rgb(247,123,22)" fg:x="16168" fg:w="71"/><text x="30.7459%" y="334.50"></text></g><g><title>_create_curves (src/dgcv/dynawo/dynawo.py:394) (80 samples, 0.15%)</title><rect x="30.4940%" y="276" width="0.1509%" height="15" fill="rgb(231,138,38)" fg:x="16167" fg:w="80"/><text x="30.7440%" y="286.50"></text></g><g><title>read_csv (pandas/io/parsers/readers.py:1026) (80 samples, 0.15%)</title><rect x="30.4940%" y="292" width="0.1509%" height="15" fill="rgb(231,145,46)" fg:x="16167" fg:w="80"/><text x="30.7440%" y="302.50"></text></g><g><title>_read (pandas/io/parsers/readers.py:626) (79 samples, 0.15%)</title><rect x="30.4959%" y="308" width="0.1490%" height="15" fill="rgb(251,118,11)" fg:x="16168" fg:w="79"/><text x="30.7459%" y="318.50"></text></g><g><title>_create_curves (src/dgcv/dynawo/dynawo.py:400) (88 samples, 0.17%)</title><rect x="30.6449%" y="276" width="0.1660%" height="15" fill="rgb(217,147,25)" fg:x="16247" fg:w="88"/><text x="30.8949%" y="286.50"></text></g><g><title>__execute_dynawo (src/dgcv/dynawo/curves.py:522) (15,470 samples, 29.18%)</title><rect x="1.8315%" y="244" width="29.1793%" height="15" fill="rgb(247,81,37)" fg:x="971" fg:w="15470"/><text x="2.0815%" y="254.50">__execute_dynawo (src/dgcv/dynawo/curves.py:522)</text></g><g><title>run_base_dynawo (src/dgcv/dynawo/dynawo.py:587) (279 samples, 0.53%)</title><rect x="30.4846%" y="260" width="0.5262%" height="15" fill="rgb(209,12,38)" fg:x="16162" fg:w="279"/><text x="30.7346%" y="270.50"></text></g><g><title>has_required_curves (src/dgcv/curves/manager.py:179) (16,234 samples, 30.62%)</title><rect x="0.3923%" y="196" width="30.6204%" height="15" fill="rgb(227,1,9)" fg:x="208" fg:w="16234"/><text x="0.6423%" y="206.50">has_required_curves (src/dgcv/curves/manager.py:1..</text></g><g><title>__obtain_curve (src/dgcv/curves/manager.py:77) (16,195 samples, 30.55%)</title><rect x="0.4659%" y="212" width="30.5468%" height="15" fill="rgb(248,47,43)" fg:x="247" fg:w="16195"/><text x="0.7159%" y="222.50">__obtain_curve (src/dgcv/curves/manager.py:77)</text></g><g><title>obtain_simulated_curve (src/dgcv/dynawo/curves.py:892) (15,471 samples, 29.18%)</title><rect x="1.8315%" y="228" width="29.1812%" height="15" fill="rgb(221,10,30)" fg:x="971" fg:w="15471"/><text x="2.0815%" y="238.50">obtain_simulated_curve (src/dgcv/dynawo/curves...</text></g><g><title>get_values_for_csv (pandas/core/indexes/base.py:7834) (2,034 samples, 3.84%)</title><rect x="31.0542%" y="404" width="3.8365%" height="15" fill="rgb(210,229,1)" fg:x="16464" fg:w="2034"/><text x="31.3042%" y="414.50">get_..</text></g><g><title>apply (pandas/core/internals/managers.py:363) (2,151 samples, 4.06%)</title><rect x="31.0523%" y="372" width="4.0572%" height="15" fill="rgb(222,148,37)" fg:x="16463" fg:w="2151"/><text x="31.3023%" y="382.50">appl..</text></g><g><title>get_values_for_csv (pandas/core/internals/blocks.py:780) (2,151 samples, 4.06%)</title><rect x="31.0523%" y="388" width="4.0572%" height="15" fill="rgb(234,67,33)" fg:x="16463" fg:w="2151"/><text x="31.3023%" y="398.50">get_..</text></g><g><title>get_values_for_csv (pandas/core/indexes/base.py:7839) (114 samples, 0.22%)</title><rect x="34.8945%" y="404" width="0.2150%" height="15" fill="rgb(247,98,35)" fg:x="18500" fg:w="114"/><text x="35.1445%" y="414.50"></text></g><g><title>_save_chunk (pandas/io/formats/csvs.py:320) (2,152 samples, 4.06%)</title><rect x="31.0523%" y="324" width="4.0591%" height="15" fill="rgb(247,138,52)" fg:x="16463" fg:w="2152"/><text x="31.3023%" y="334.50">_sav..</text></g><g><title>_get_values_for_csv (pandas/core/frame.py:1410) (2,152 samples, 4.06%)</title><rect x="31.0523%" y="340" width="4.0591%" height="15" fill="rgb(213,79,30)" fg:x="16463" fg:w="2152"/><text x="31.3023%" y="350.50">_get..</text></g><g><title>get_values_for_csv (pandas/core/internals/managers.py:466) (2,152 samples, 4.06%)</title><rect x="31.0523%" y="356" width="4.0591%" height="15" fill="rgb(246,177,23)" fg:x="16463" fg:w="2152"/><text x="31.3023%" y="366.50">get_..</text></g><g><title>_save_chunk (pandas/io/formats/csvs.py:324) (465 samples, 0.88%)</title><rect x="35.1152%" y="324" width="0.8771%" height="15" fill="rgb(230,62,27)" fg:x="18617" fg:w="465"/><text x="35.3652%" y="334.50"></text></g><g><title>__save_curves (src/dgcv/curves/manager.py:122) (2,641 samples, 4.98%)</title><rect x="31.0127%" y="212" width="4.9814%" height="15" fill="rgb(216,154,8)" fg:x="16442" fg:w="2641"/><text x="31.2627%" y="222.50">__save..</text></g><g><title>wrapper (pandas/util/_decorators.py:333) (2,641 samples, 4.98%)</title><rect x="31.0127%" y="228" width="4.9814%" height="15" fill="rgb(244,35,45)" fg:x="16442" fg:w="2641"/><text x="31.2627%" y="238.50">wrappe..</text></g><g><title>to_csv (pandas/core/generic.py:3967) (2,641 samples, 4.98%)</title><rect x="31.0127%" y="244" width="4.9814%" height="15" fill="rgb(251,115,12)" fg:x="16442" fg:w="2641"/><text x="31.2627%" y="254.50">to_csv..</text></g><g><title>to_csv (pandas/io/formats/format.py:1014) (2,641 samples, 4.98%)</title><rect x="31.0127%" y="260" width="4.9814%" height="15" fill="rgb(240,54,50)" fg:x="16442" fg:w="2641"/><text x="31.2627%" y="270.50">to_csv..</text></g><g><title>save (pandas/io/formats/csvs.py:270) (2,641 samples, 4.98%)</title><rect x="31.0127%" y="276" width="4.9814%" height="15" fill="rgb(233,84,52)" fg:x="16442" fg:w="2641"/><text x="31.2627%" y="286.50">save (..</text></g><g><title>_save (pandas/io/formats/csvs.py:275) (2,641 samples, 4.98%)</title><rect x="31.0127%" y="292" width="4.9814%" height="15" fill="rgb(207,117,47)" fg:x="16442" fg:w="2641"/><text x="31.2627%" y="302.50">_save ..</text></g><g><title>_save_body (pandas/io/formats/csvs.py:313) (2,641 samples, 4.98%)</title><rect x="31.0127%" y="308" width="4.9814%" height="15" fill="rgb(249,43,39)" fg:x="16442" fg:w="2641"/><text x="31.2627%" y="318.50">_save_..</text></g><g><title>get_values_for_csv (pandas/core/indexes/base.py:7834) (106 samples, 0.20%)</title><rect x="35.9960%" y="404" width="0.1999%" height="15" fill="rgb(209,38,44)" fg:x="19084" fg:w="106"/><text x="36.2460%" y="414.50"></text></g><g><title>_save_chunk (pandas/io/formats/csvs.py:320) (112 samples, 0.21%)</title><rect x="35.9960%" y="324" width="0.2113%" height="15" fill="rgb(236,212,23)" fg:x="19084" fg:w="112"/><text x="36.2460%" y="334.50"></text></g><g><title>_get_values_for_csv (pandas/core/frame.py:1410) (112 samples, 0.21%)</title><rect x="35.9960%" y="340" width="0.2113%" height="15" fill="rgb(242,79,21)" fg:x="19084" fg:w="112"/><text x="36.2460%" y="350.50"></text></g><g><title>get_values_for_csv (pandas/core/internals/managers.py:466) (112 samples, 0.21%)</title><rect x="35.9960%" y="356" width="0.2113%" height="15" fill="rgb(211,96,35)" fg:x="19084" fg:w="112"/><text x="36.2460%" y="366.50"></text></g><g><title>apply (pandas/core/internals/managers.py:363) (112 samples, 0.21%)</title><rect x="35.9960%" y="372" width="0.2113%" height="15" fill="rgb(253,215,40)" fg:x="19084" fg:w="112"/><text x="36.2460%" y="382.50"></text></g><g><title>get_values_for_csv (pandas/core/internals/blocks.py:780) (112 samples, 0.21%)</title><rect x="35.9960%" y="388" width="0.2113%" height="15" fill="rgb(211,81,21)" fg:x="19084" fg:w="112"/><text x="36.2460%" y="398.50"></text></g><g><title>validate (src/dgcv/model/benchmark.py:556) (19,001 samples, 35.84%)</title><rect x="0.3923%" y="164" width="35.8394%" height="15" fill="rgb(208,190,38)" fg:x="208" fg:w="19001"/><text x="0.6423%" y="174.50">validate (src/dgcv/model/benchmark.py:556)</text></g><g><title>__has_required_curves (src/dgcv/model/benchmark.py:471) (19,001 samples, 35.84%)</title><rect x="0.3923%" y="180" width="35.8394%" height="15" fill="rgb(235,213,38)" fg:x="208" fg:w="19001"/><text x="0.6423%" y="190.50">__has_required_curves (src/dgcv/model/benchmark.py:471)</text></g><g><title>has_required_curves (src/dgcv/curves/manager.py:211) (2,767 samples, 5.22%)</title><rect x="31.0127%" y="196" width="5.2191%" height="15" fill="rgb(237,122,38)" fg:x="16442" fg:w="2767"/><text x="31.2627%" y="206.50">has_re..</text></g><g><title>__save_curves (src/dgcv/curves/manager.py:124) (126 samples, 0.24%)</title><rect x="35.9941%" y="212" width="0.2377%" height="15" fill="rgb(244,218,35)" fg:x="19083" fg:w="126"/><text x="36.2441%" y="222.50"></text></g><g><title>wrapper (pandas/util/_decorators.py:333) (126 samples, 0.24%)</title><rect x="35.9941%" y="228" width="0.2377%" height="15" fill="rgb(240,68,47)" fg:x="19083" fg:w="126"/><text x="36.2441%" y="238.50"></text></g><g><title>to_csv (pandas/core/generic.py:3967) (126 samples, 0.24%)</title><rect x="35.9941%" y="244" width="0.2377%" height="15" fill="rgb(210,16,53)" fg:x="19083" fg:w="126"/><text x="36.2441%" y="254.50"></text></g><g><title>to_csv (pandas/io/formats/format.py:1014) (126 samples, 0.24%)</title><rect x="35.9941%" y="260" width="0.2377%" height="15" fill="rgb(235,124,12)" fg:x="19083" fg:w="126"/><text x="36.2441%" y="270.50"></text></g><g><title>save (pandas/io/formats/csvs.py:270) (126 samples, 0.24%)</title><rect x="35.9941%" y="276" width="0.2377%" height="15" fill="rgb(224,169,11)" fg:x="19083" fg:w="126"/><text x="36.2441%" y="286.50"></text></g><g><title>_save (pandas/io/formats/csvs.py:275) (126 samples, 0.24%)</title><rect x="35.9941%" y="292" width="0.2377%" height="15" fill="rgb(250,166,2)" fg:x="19083" fg:w="126"/><text x="36.2441%" y="302.50"></text></g><g><title>_save_body (pandas/io/formats/csvs.py:313) (125 samples, 0.24%)</title><rect x="35.9960%" y="308" width="0.2358%" height="15" fill="rgb(242,216,29)" fg:x="19084" fg:w="125"/><text x="36.2460%" y="318.50"></text></g><g><title>resampling_signal (src/dgcv/sigpro/sigpro.py:91) (130 samples, 0.25%)</title><rect x="36.2525%" y="260" width="0.2452%" height="15" fill="rgb(230,116,27)" fg:x="19220" fg:w="130"/><text x="36.5025%" y="270.50"></text></g><g><title>resample (src/dgcv/sigpro/sigpro.py:40) (72 samples, 0.14%)</title><rect x="36.3619%" y="276" width="0.1358%" height="15" fill="rgb(228,99,48)" fg:x="19278" fg:w="72"/><text x="36.6119%" y="286.50"></text></g><g><title>interp (numpy/lib/_function_base_impl.py:1642) (72 samples, 0.14%)</title><rect x="36.3619%" y="292" width="0.1358%" height="15" fill="rgb(253,11,6)" fg:x="19278" fg:w="72"/><text x="36.6119%" y="302.50"></text></g><g><title>apply_signal_processing (src/dgcv/curves/manager.py:259) (133 samples, 0.25%)</title><rect x="36.2525%" y="244" width="0.2509%" height="15" fill="rgb(247,143,39)" fg:x="19220" fg:w="133"/><text x="36.5025%" y="254.50"></text></g><g><title>lowpass_signal (src/dgcv/sigpro/sigpro.py:107) (404 samples, 0.76%)</title><rect x="36.5109%" y="260" width="0.7620%" height="15" fill="rgb(236,97,10)" fg:x="19357" fg:w="404"/><text x="36.7609%" y="270.50"></text></g><g><title>lowpass_signal (src/dgcv/sigpro/sigpro.py:112) (66 samples, 0.12%)</title><rect x="37.2730%" y="260" width="0.1245%" height="15" fill="rgb(233,208,19)" fg:x="19761" fg:w="66"/><text x="37.5230%" y="270.50"></text></g><g><title>apply_signal_processing (src/dgcv/curves/manager.py:260) (480 samples, 0.91%)</title><rect x="36.5034%" y="244" width="0.9054%" height="15" fill="rgb(216,164,2)" fg:x="19353" fg:w="480"/><text x="36.7534%" y="254.50"></text></g><g><title>lowpass_signal (src/dgcv/sigpro/sigpro.py:107) (397 samples, 0.75%)</title><rect x="37.4653%" y="260" width="0.7488%" height="15" fill="rgb(220,129,5)" fg:x="19863" fg:w="397"/><text x="37.7153%" y="270.50"></text></g><g><title>lowpass_signal (src/dgcv/sigpro/sigpro.py:112) (66 samples, 0.12%)</title><rect x="38.2142%" y="260" width="0.1245%" height="15" fill="rgb(242,17,10)" fg:x="20260" fg:w="66"/><text x="38.4642%" y="270.50"></text></g><g><title>apply_signal_processing (src/dgcv/curves/manager.py:264) (471 samples, 0.89%)</title><rect x="37.4559%" y="244" width="0.8884%" height="15" fill="rgb(242,107,0)" fg:x="19858" fg:w="471"/><text x="37.7059%" y="254.50"></text></g><g><title>__call__ (scipy/interpolate/_interpolate.py:782) (106 samples, 0.20%)</title><rect x="38.4669%" y="276" width="0.1999%" height="15" fill="rgb(251,28,31)" fg:x="20394" fg:w="106"/><text x="38.7169%" y="286.50"></text></g><g><title>_evaluate (scipy/interpolate/_interpolate.py:853) (106 samples, 0.20%)</title><rect x="38.4669%" y="292" width="0.1999%" height="15" fill="rgb(233,223,10)" fg:x="20394" fg:w="106"/><text x="38.7169%" y="302.50"></text></g><g><title>interpolate_same_time_grid (src/dgcv/sigpro/sigpro.py:145) (208 samples, 0.39%)</title><rect x="38.4650%" y="260" width="0.3923%" height="15" fill="rgb(215,21,27)" fg:x="20393" fg:w="208"/><text x="38.7150%" y="270.50"></text></g><g><title>__call__ (scipy/interpolate/_interpolate.py:782) (121 samples, 0.23%)</title><rect x="38.8573%" y="276" width="0.2282%" height="15" fill="rgb(232,23,21)" fg:x="20601" fg:w="121"/><text x="39.1073%" y="286.50"></text></g><g><title>_evaluate (scipy/interpolate/_interpolate.py:853) (121 samples, 0.23%)</title><rect x="38.8573%" y="292" width="0.2282%" height="15" fill="rgb(244,5,23)" fg:x="20601" fg:w="121"/><text x="39.1073%" y="302.50"></text></g><g><title>interpolate_same_time_grid (src/dgcv/sigpro/sigpro.py:146) (202 samples, 0.38%)</title><rect x="38.8573%" y="260" width="0.3810%" height="15" fill="rgb(226,81,46)" fg:x="20601" fg:w="202"/><text x="39.1073%" y="270.50"></text></g><g><title>apply_signal_processing (src/dgcv/curves/manager.py:267) (511 samples, 0.96%)</title><rect x="38.3443%" y="244" width="0.9638%" height="15" fill="rgb(247,70,30)" fg:x="20329" fg:w="511"/><text x="38.5943%" y="254.50"></text></g><g><title>get (src/dgcv/sigpro/signal_windows.py:208) (400 samples, 0.75%)</title><rect x="39.5043%" y="260" width="0.7545%" height="15" fill="rgb(212,68,19)" fg:x="20944" fg:w="400"/><text x="39.7543%" y="270.50"></text></g><g><title>apply_signal_processing (src/dgcv/curves/manager.py:289) (464 samples, 0.88%)</title><rect x="39.3874%" y="244" width="0.8752%" height="15" fill="rgb(240,187,13)" fg:x="20882" fg:w="464"/><text x="39.6374%" y="254.50"></text></g><g><title>validate (src/dgcv/validation/model.py:1132) (2,138 samples, 4.03%)</title><rect x="36.2355%" y="228" width="4.0327%" height="15" fill="rgb(223,113,26)" fg:x="19211" fg:w="2138"/><text x="36.4855%" y="238.50">vali..</text></g><g><title>get (src/dgcv/sigpro/signal_windows.py:208) (363 samples, 0.68%)</title><rect x="40.4059%" y="292" width="0.6847%" height="15" fill="rgb(206,192,2)" fg:x="21422" fg:w="363"/><text x="40.6559%" y="302.50"></text></g><g><title>get_curves_by_windows (src/dgcv/curves/manager.py:366) (432 samples, 0.81%)</title><rect x="40.2833%" y="276" width="0.8148%" height="15" fill="rgb(241,108,4)" fg:x="21357" fg:w="432"/><text x="40.5333%" y="286.50"></text></g><g><title>get (src/dgcv/sigpro/signal_windows.py:208) (390 samples, 0.74%)</title><rect x="41.2038%" y="292" width="0.7356%" height="15" fill="rgb(247,173,49)" fg:x="21845" fg:w="390"/><text x="41.4538%" y="302.50"></text></g><g><title>__calculate (src/dgcv/validation/model.py:836) (892 samples, 1.68%)</title><rect x="40.2682%" y="244" width="1.6825%" height="15" fill="rgb(224,114,35)" fg:x="21349" fg:w="892"/><text x="40.5182%" y="254.50"></text></g><g><title>_get_curves_by_windows (src/dgcv/core/validator.py:55) (884 samples, 1.67%)</title><rect x="40.2833%" y="260" width="1.6674%" height="15" fill="rgb(245,159,27)" fg:x="21357" fg:w="884"/><text x="40.5333%" y="270.50"></text></g><g><title>get_curves_by_windows (src/dgcv/curves/manager.py:368) (452 samples, 0.85%)</title><rect x="41.0981%" y="276" width="0.8526%" height="15" fill="rgb(245,172,44)" fg:x="21789" fg:w="452"/><text x="41.3481%" y="286.50"></text></g><g><title>get (src/dgcv/sigpro/signal_windows.py:208) (361 samples, 0.68%)</title><rect x="42.1016%" y="292" width="0.6809%" height="15" fill="rgb(236,23,11)" fg:x="22321" fg:w="361"/><text x="42.3516%" y="302.50"></text></g><g><title>get_curves_by_windows (src/dgcv/curves/manager.py:366) (440 samples, 0.83%)</title><rect x="41.9564%" y="276" width="0.8299%" height="15" fill="rgb(205,117,38)" fg:x="22244" fg:w="440"/><text x="42.2064%" y="286.50"></text></g><g><title>get (src/dgcv/sigpro/signal_windows.py:208) (373 samples, 0.70%)</title><rect x="42.9334%" y="292" width="0.7035%" height="15" fill="rgb(237,72,25)" fg:x="22762" fg:w="373"/><text x="43.1834%" y="302.50"></text></g><g><title>__calculate (src/dgcv/validation/model.py:837) (897 samples, 1.69%)</title><rect x="41.9507%" y="244" width="1.6919%" height="15" fill="rgb(244,70,9)" fg:x="22241" fg:w="897"/><text x="42.2007%" y="254.50"></text></g><g><title>_get_curves_by_windows (src/dgcv/core/validator.py:55) (894 samples, 1.69%)</title><rect x="41.9564%" y="260" width="1.6863%" height="15" fill="rgb(217,125,39)" fg:x="22244" fg:w="894"/><text x="42.2064%" y="270.50"></text></g><g><title>get_curves_by_windows (src/dgcv/curves/manager.py:368) (454 samples, 0.86%)</title><rect x="42.7863%" y="276" width="0.8563%" height="15" fill="rgb(235,36,10)" fg:x="22684" fg:w="454"/><text x="43.0363%" y="286.50"></text></g><g><title>_calculate_errors (src/dgcv/validation/model.py:489) (143 samples, 0.27%)</title><rect x="43.7067%" y="260" width="0.2697%" height="15" fill="rgb(251,123,47)" fg:x="23172" fg:w="143"/><text x="43.9567%" y="270.50"></text></g><g><title>maximum_error (src/dgcv/validation/common.py:606) (143 samples, 0.27%)</title><rect x="43.7067%" y="276" width="0.2697%" height="15" fill="rgb(221,13,13)" fg:x="23172" fg:w="143"/><text x="43.9567%" y="286.50"></text></g><g><title>get (src/dgcv/sigpro/signal_windows.py:208) (433 samples, 0.82%)</title><rect x="44.1689%" y="292" width="0.8167%" height="15" fill="rgb(238,131,9)" fg:x="23417" fg:w="433"/><text x="44.4189%" y="302.50"></text></g><g><title>maybe_convert_platform (pandas/core/dtypes/cast.py:130) (109 samples, 0.21%)</title><rect x="45.0403%" y="388" width="0.2056%" height="15" fill="rgb(211,50,8)" fg:x="23879" fg:w="109"/><text x="45.2903%" y="398.50"></text></g><g><title>construct_1d_object_array_from_listlike (pandas/core/dtypes/cast.py:1600) (106 samples, 0.20%)</title><rect x="45.0459%" y="404" width="0.1999%" height="15" fill="rgb(245,182,24)" fg:x="23882" fg:w="106"/><text x="45.2959%" y="414.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:629) (330 samples, 0.62%)</title><rect x="44.9912%" y="356" width="0.6224%" height="15" fill="rgb(242,14,37)" fg:x="23853" fg:w="330"/><text x="45.2412%" y="366.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:655) (304 samples, 0.57%)</title><rect x="45.0403%" y="372" width="0.5734%" height="15" fill="rgb(246,228,12)" fg:x="23879" fg:w="304"/><text x="45.2903%" y="382.50"></text></g><g><title>maybe_convert_platform (pandas/core/dtypes/cast.py:138) (195 samples, 0.37%)</title><rect x="45.2459%" y="388" width="0.3678%" height="15" fill="rgb(213,55,15)" fg:x="23988" fg:w="195"/><text x="45.4959%" y="398.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:119) (332 samples, 0.63%)</title><rect x="44.9893%" y="340" width="0.6262%" height="15" fill="rgb(209,9,3)" fg:x="23852" fg:w="332"/><text x="45.2393%" y="350.50"></text></g><g><title>get_curves_by_windows (src/dgcv/curves/manager.py:366) (877 samples, 1.65%)</title><rect x="43.9802%" y="276" width="1.6542%" height="15" fill="rgb(230,59,30)" fg:x="23317" fg:w="877"/><text x="44.2302%" y="286.50"></text></g><g><title>get (src/dgcv/sigpro/signal_windows.py:210) (344 samples, 0.65%)</title><rect x="44.9856%" y="292" width="0.6488%" height="15" fill="rgb(209,121,21)" fg:x="23850" fg:w="344"/><text x="45.2356%" y="302.50"></text></g><g><title>__init__ (pandas/core/frame.py:778) (343 samples, 0.65%)</title><rect x="44.9875%" y="308" width="0.6470%" height="15" fill="rgb(220,109,13)" fg:x="23851" fg:w="343"/><text x="45.2375%" y="318.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:503) (342 samples, 0.65%)</title><rect x="44.9893%" y="324" width="0.6451%" height="15" fill="rgb(232,18,1)" fg:x="23852" fg:w="342"/><text x="45.2393%" y="334.50"></text></g><g><title>get (src/dgcv/sigpro/signal_windows.py:208) (389 samples, 0.73%)</title><rect x="45.8532%" y="292" width="0.7337%" height="15" fill="rgb(215,41,42)" fg:x="24310" fg:w="389"/><text x="46.1032%" y="302.50"></text></g><g><title>maybe_convert_platform (pandas/core/dtypes/cast.py:130) (74 samples, 0.14%)</title><rect x="46.6303%" y="388" width="0.1396%" height="15" fill="rgb(224,123,36)" fg:x="24722" fg:w="74"/><text x="46.8803%" y="398.50"></text></g><g><title>construct_1d_object_array_from_listlike (pandas/core/dtypes/cast.py:1600) (71 samples, 0.13%)</title><rect x="46.6360%" y="404" width="0.1339%" height="15" fill="rgb(240,125,3)" fg:x="24725" fg:w="71"/><text x="46.8860%" y="414.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:655) (268 samples, 0.51%)</title><rect x="46.6303%" y="372" width="0.5055%" height="15" fill="rgb(205,98,50)" fg:x="24722" fg:w="268"/><text x="46.8803%" y="382.50"></text></g><g><title>maybe_convert_platform (pandas/core/dtypes/cast.py:138) (194 samples, 0.37%)</title><rect x="46.7699%" y="388" width="0.3659%" height="15" fill="rgb(205,185,37)" fg:x="24796" fg:w="194"/><text x="47.0199%" y="398.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:119) (292 samples, 0.55%)</title><rect x="46.5869%" y="340" width="0.5508%" height="15" fill="rgb(238,207,15)" fg:x="24699" fg:w="292"/><text x="46.8369%" y="350.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:629) (292 samples, 0.55%)</title><rect x="46.5869%" y="356" width="0.5508%" height="15" fill="rgb(213,199,42)" fg:x="24699" fg:w="292"/><text x="46.8369%" y="366.50"></text></g><g><title>__calculate (src/dgcv/validation/model.py:838) (1,872 samples, 3.53%)</title><rect x="43.6426%" y="244" width="3.5309%" height="15" fill="rgb(235,201,11)" fg:x="23138" fg:w="1872"/><text x="43.8926%" y="254.50">__c..</text></g><g><title>_get_curves_by_windows (src/dgcv/core/validator.py:55) (1,693 samples, 3.19%)</title><rect x="43.9802%" y="260" width="3.1933%" height="15" fill="rgb(207,46,11)" fg:x="23317" fg:w="1693"/><text x="44.2302%" y="270.50">_ge..</text></g><g><title>get_curves_by_windows (src/dgcv/curves/manager.py:368) (816 samples, 1.54%)</title><rect x="45.6344%" y="276" width="1.5391%" height="15" fill="rgb(241,35,35)" fg:x="24194" fg:w="816"/><text x="45.8844%" y="286.50"></text></g><g><title>get (src/dgcv/sigpro/signal_windows.py:210) (311 samples, 0.59%)</title><rect x="46.5869%" y="292" width="0.5866%" height="15" fill="rgb(243,32,47)" fg:x="24699" fg:w="311"/><text x="46.8369%" y="302.50"></text></g><g><title>__init__ (pandas/core/frame.py:778) (311 samples, 0.59%)</title><rect x="46.5869%" y="308" width="0.5866%" height="15" fill="rgb(247,202,23)" fg:x="24699" fg:w="311"/><text x="46.8369%" y="318.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:503) (311 samples, 0.59%)</title><rect x="46.5869%" y="324" width="0.5866%" height="15" fill="rgb(219,102,11)" fg:x="24699" fg:w="311"/><text x="46.8369%" y="334.50"></text></g><g><title>__calculate (src/dgcv/validation/model.py:839) (118 samples, 0.22%)</title><rect x="47.1735%" y="244" width="0.2226%" height="15" fill="rgb(243,110,44)" fg:x="25010" fg:w="118"/><text x="47.4235%" y="254.50"></text></g><g><title>__calculate (src/dgcv/validation/model.py:848) (57 samples, 0.11%)</title><rect x="47.5696%" y="244" width="0.1075%" height="15" fill="rgb(222,74,54)" fg:x="25220" fg:w="57"/><text x="47.8196%" y="254.50"></text></g><g><title>__calculate (src/dgcv/validation/model.py:854) (273 samples, 0.51%)</title><rect x="47.6772%" y="244" width="0.5149%" height="15" fill="rgb(216,99,12)" fg:x="25277" fg:w="273"/><text x="47.9272%" y="254.50"></text></g><g><title>__calculate (src/dgcv/validation/model.py:869) (866 samples, 1.63%)</title><rect x="48.1959%" y="244" width="1.6334%" height="15" fill="rgb(226,22,26)" fg:x="25552" fg:w="866"/><text x="48.4459%" y="254.50"></text></g><g><title>get (src/dgcv/sigpro/signal_windows.py:208) (428 samples, 0.81%)</title><rect x="50.0519%" y="292" width="0.8073%" height="15" fill="rgb(217,163,10)" fg:x="26536" fg:w="428"/><text x="50.3019%" y="302.50"></text></g><g><title>maybe_convert_platform (pandas/core/dtypes/cast.py:130) (74 samples, 0.14%)</title><rect x="50.8875%" y="388" width="0.1396%" height="15" fill="rgb(213,25,53)" fg:x="26979" fg:w="74"/><text x="51.1375%" y="398.50"></text></g><g><title>construct_1d_object_array_from_listlike (pandas/core/dtypes/cast.py:1600) (73 samples, 0.14%)</title><rect x="50.8893%" y="404" width="0.1377%" height="15" fill="rgb(252,105,26)" fg:x="26980" fg:w="73"/><text x="51.1393%" y="414.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:655) (245 samples, 0.46%)</title><rect x="50.8875%" y="372" width="0.4621%" height="15" fill="rgb(220,39,43)" fg:x="26979" fg:w="245"/><text x="51.1375%" y="382.50"></text></g><g><title>maybe_convert_platform (pandas/core/dtypes/cast.py:138) (171 samples, 0.32%)</title><rect x="51.0270%" y="388" width="0.3225%" height="15" fill="rgb(229,68,48)" fg:x="27053" fg:w="171"/><text x="51.2770%" y="398.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:119) (260 samples, 0.49%)</title><rect x="50.8610%" y="340" width="0.4904%" height="15" fill="rgb(252,8,32)" fg:x="26965" fg:w="260"/><text x="51.1110%" y="350.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:629) (260 samples, 0.49%)</title><rect x="50.8610%" y="356" width="0.4904%" height="15" fill="rgb(223,20,43)" fg:x="26965" fg:w="260"/><text x="51.1110%" y="366.50"></text></g><g><title>get_curves_by_windows (src/dgcv/curves/manager.py:366) (822 samples, 1.55%)</title><rect x="49.8293%" y="276" width="1.5504%" height="15" fill="rgb(229,81,49)" fg:x="26418" fg:w="822"/><text x="50.0793%" y="286.50"></text></g><g><title>get (src/dgcv/sigpro/signal_windows.py:210) (276 samples, 0.52%)</title><rect x="50.8592%" y="292" width="0.5206%" height="15" fill="rgb(236,28,36)" fg:x="26964" fg:w="276"/><text x="51.1092%" y="302.50"></text></g><g><title>__init__ (pandas/core/frame.py:778) (276 samples, 0.52%)</title><rect x="50.8592%" y="308" width="0.5206%" height="15" fill="rgb(249,185,26)" fg:x="26964" fg:w="276"/><text x="51.1092%" y="318.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:503) (275 samples, 0.52%)</title><rect x="50.8610%" y="324" width="0.5187%" height="15" fill="rgb(249,174,33)" fg:x="26965" fg:w="275"/><text x="51.1110%" y="334.50"></text></g><g><title>get (src/dgcv/sigpro/signal_windows.py:208) (376 samples, 0.71%)</title><rect x="51.5816%" y="292" width="0.7092%" height="15" fill="rgb(233,201,37)" fg:x="27347" fg:w="376"/><text x="51.8316%" y="302.50"></text></g><g><title>maybe_convert_platform (pandas/core/dtypes/cast.py:130) (62 samples, 0.12%)</title><rect x="52.3191%" y="388" width="0.1169%" height="15" fill="rgb(221,78,26)" fg:x="27738" fg:w="62"/><text x="52.5691%" y="398.50"></text></g><g><title>construct_1d_object_array_from_listlike (pandas/core/dtypes/cast.py:1600) (58 samples, 0.11%)</title><rect x="52.3266%" y="404" width="0.1094%" height="15" fill="rgb(250,127,30)" fg:x="27742" fg:w="58"/><text x="52.5766%" y="414.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:119) (197 samples, 0.37%)</title><rect x="52.2908%" y="340" width="0.3716%" height="15" fill="rgb(230,49,44)" fg:x="27723" fg:w="197"/><text x="52.5408%" y="350.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:629) (197 samples, 0.37%)</title><rect x="52.2908%" y="356" width="0.3716%" height="15" fill="rgb(229,67,23)" fg:x="27723" fg:w="197"/><text x="52.5408%" y="366.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:655) (182 samples, 0.34%)</title><rect x="52.3191%" y="372" width="0.3433%" height="15" fill="rgb(249,83,47)" fg:x="27738" fg:w="182"/><text x="52.5691%" y="382.50"></text></g><g><title>maybe_convert_platform (pandas/core/dtypes/cast.py:138) (120 samples, 0.23%)</title><rect x="52.4360%" y="388" width="0.2263%" height="15" fill="rgb(215,43,3)" fg:x="27800" fg:w="120"/><text x="52.6860%" y="398.50"></text></g><g><title>__validate (src/dgcv/model/operating_condition.py:68) (8,719 samples, 16.45%)</title><rect x="36.2355%" y="212" width="16.4457%" height="15" fill="rgb(238,154,13)" fg:x="19211" fg:w="8719"/><text x="36.4855%" y="222.50">__validate (src/dgcv/mode..</text></g><g><title>validate (src/dgcv/validation/model.py:1146) (6,581 samples, 12.41%)</title><rect x="40.2682%" y="228" width="12.4130%" height="15" fill="rgb(219,56,2)" fg:x="21349" fg:w="6581"/><text x="40.5182%" y="238.50">validate (src/dgcv/..</text></g><g><title>__calculate (src/dgcv/validation/model.py:871) (1,512 samples, 2.85%)</title><rect x="49.8293%" y="244" width="2.8519%" height="15" fill="rgb(233,0,4)" fg:x="26418" fg:w="1512"/><text x="50.0793%" y="254.50">__..</text></g><g><title>_get_curves_by_windows (src/dgcv/core/validator.py:55) (1,512 samples, 2.85%)</title><rect x="49.8293%" y="260" width="2.8519%" height="15" fill="rgb(235,30,7)" fg:x="26418" fg:w="1512"/><text x="50.0793%" y="270.50">_g..</text></g><g><title>get_curves_by_windows (src/dgcv/curves/manager.py:368) (690 samples, 1.30%)</title><rect x="51.3797%" y="276" width="1.3015%" height="15" fill="rgb(250,79,13)" fg:x="27240" fg:w="690"/><text x="51.6297%" y="286.50"></text></g><g><title>get (src/dgcv/sigpro/signal_windows.py:210) (207 samples, 0.39%)</title><rect x="52.2908%" y="292" width="0.3904%" height="15" fill="rgb(211,146,34)" fg:x="27723" fg:w="207"/><text x="52.5408%" y="302.50"></text></g><g><title>__init__ (pandas/core/frame.py:778) (207 samples, 0.39%)</title><rect x="52.2908%" y="308" width="0.3904%" height="15" fill="rgb(228,22,38)" fg:x="27723" fg:w="207"/><text x="52.5408%" y="318.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:503) (207 samples, 0.39%)</title><rect x="52.2908%" y="324" width="0.3904%" height="15" fill="rgb(235,168,5)" fg:x="27723" fg:w="207"/><text x="52.5408%" y="334.50"></text></g><g><title>validate (src/dgcv/core/validation.py:216) (27,812 samples, 52.46%)</title><rect x="0.3848%" y="132" width="52.4586%" height="15" fill="rgb(221,155,16)" fg:x="204" fg:w="27812"/><text x="0.6348%" y="142.50">validate (src/dgcv/core/validation.py:216)</text></g><g><title>validate (src/dgcv/model/pcs.py:126) (27,808 samples, 52.45%)</title><rect x="0.3923%" y="148" width="52.4511%" height="15" fill="rgb(215,215,53)" fg:x="208" fg:w="27808"/><text x="0.6423%" y="158.50">validate (src/dgcv/model/pcs.py:126)</text></g><g><title>validate (src/dgcv/model/benchmark.py:564) (8,807 samples, 16.61%)</title><rect x="36.2318%" y="164" width="16.6117%" height="15" fill="rgb(223,4,10)" fg:x="19209" fg:w="8807"/><text x="36.4818%" y="174.50">validate (src/dgcv/model/b..</text></g><g><title>__validate (src/dgcv/model/benchmark.py:492) (8,805 samples, 16.61%)</title><rect x="36.2355%" y="180" width="16.6079%" height="15" fill="rgb(234,103,6)" fg:x="19211" fg:w="8805"/><text x="36.4855%" y="190.50">__validate (src/dgcv/model..</text></g><g><title>validate (src/dgcv/model/operating_condition.py:127) (8,805 samples, 16.61%)</title><rect x="36.2355%" y="196" width="16.6079%" height="15" fill="rgb(227,97,0)" fg:x="19211" fg:w="8805"/><text x="36.4855%" y="206.50">validate (src/dgcv/model/o..</text></g><g><title>__validate (src/dgcv/model/operating_condition.py:82) (86 samples, 0.16%)</title><rect x="52.6812%" y="212" width="0.1622%" height="15" fill="rgb(234,150,53)" fg:x="27930" fg:w="86"/><text x="52.9312%" y="222.50"></text></g><g><title>__repr__ (pandas/core/frame.py:1214) (86 samples, 0.16%)</title><rect x="52.6812%" y="228" width="0.1622%" height="15" fill="rgb(228,201,54)" fg:x="27930" fg:w="86"/><text x="52.9312%" y="238.50"></text></g><g><title>wrapper (pandas/util/_decorators.py:333) (86 samples, 0.16%)</title><rect x="52.6812%" y="244" width="0.1622%" height="15" fill="rgb(222,22,37)" fg:x="27930" fg:w="86"/><text x="52.9312%" y="254.50"></text></g><g><title>to_string (pandas/core/frame.py:1394) (85 samples, 0.16%)</title><rect x="52.6831%" y="260" width="0.1603%" height="15" fill="rgb(237,53,32)" fg:x="27931" fg:w="85"/><text x="52.9331%" y="270.50"></text></g><g><title>to_string (pandas/io/formats/format.py:962) (84 samples, 0.16%)</title><rect x="52.6850%" y="276" width="0.1584%" height="15" fill="rgb(233,25,53)" fg:x="27932" fg:w="84"/><text x="52.9350%" y="286.50"></text></g><g><title>to_string (pandas/io/formats/string.py:29) (84 samples, 0.16%)</title><rect x="52.6850%" y="292" width="0.1584%" height="15" fill="rgb(210,40,34)" fg:x="27932" fg:w="84"/><text x="52.9350%" y="302.50"></text></g><g><title>_get_string_representation (pandas/io/formats/string.py:53) (59 samples, 0.11%)</title><rect x="52.7321%" y="308" width="0.1113%" height="15" fill="rgb(241,220,44)" fg:x="27957" fg:w="59"/><text x="52.9821%" y="318.50"></text></g><g><title>get_common_time_range (src/dgcv/report/figure.py:584) (170 samples, 0.32%)</title><rect x="52.9302%" y="212" width="0.3207%" height="15" fill="rgb(235,28,35)" fg:x="28062" fg:w="170"/><text x="53.1802%" y="222.50"></text></g><g><title>get_curves2plot (src/dgcv/report/figure.py:701) (237 samples, 0.45%)</title><rect x="53.3187%" y="244" width="0.4470%" height="15" fill="rgb(210,56,17)" fg:x="28268" fg:w="237"/><text x="53.5687%" y="254.50"></text></g><g><title>_add_curve2plot (src/dgcv/report/figure.py:83) (237 samples, 0.45%)</title><rect x="53.3187%" y="260" width="0.4470%" height="15" fill="rgb(224,130,29)" fg:x="28268" fg:w="237"/><text x="53.5687%" y="270.50"></text></g><g><title>get_curves2plot (src/dgcv/report/figure.py:707) (107 samples, 0.20%)</title><rect x="53.7658%" y="244" width="0.2018%" height="15" fill="rgb(235,212,8)" fg:x="28505" fg:w="107"/><text x="54.0158%" y="254.50"></text></g><g><title>_add_curve2plot (src/dgcv/report/figure.py:83) (107 samples, 0.20%)</title><rect x="53.7658%" y="260" width="0.2018%" height="15" fill="rgb(223,33,50)" fg:x="28505" fg:w="107"/><text x="54.0158%" y="270.50"></text></g><g><title>_get_time_range (src/dgcv/report/figure.py:534) (460 samples, 0.87%)</title><rect x="53.2697%" y="228" width="0.8676%" height="15" fill="rgb(219,149,13)" fg:x="28242" fg:w="460"/><text x="53.5197%" y="238.50"></text></g><g><title>get_curves2plot (src/dgcv/report/figure.py:718) (89 samples, 0.17%)</title><rect x="53.9695%" y="244" width="0.1679%" height="15" fill="rgb(250,156,29)" fg:x="28613" fg:w="89"/><text x="54.2195%" y="254.50"></text></g><g><title>_add_curve2plot (src/dgcv/report/figure.py:83) (89 samples, 0.17%)</title><rect x="53.9695%" y="260" width="0.1679%" height="15" fill="rgb(216,193,19)" fg:x="28613" fg:w="89"/><text x="54.2195%" y="270.50"></text></g><g><title>_get_xrange_for_curve (src/dgcv/report/figure.py:141) (70 samples, 0.13%)</title><rect x="54.1411%" y="260" width="0.1320%" height="15" fill="rgb(216,135,14)" fg:x="28704" fg:w="70"/><text x="54.3911%" y="270.50"></text></g><g><title>_get_xrange_for_curve (src/dgcv/report/figure.py:142) (402 samples, 0.76%)</title><rect x="54.2732%" y="260" width="0.7582%" height="15" fill="rgb(241,47,5)" fg:x="28774" fg:w="402"/><text x="54.5232%" y="270.50"></text></g><g><title>_get_xrange_for_curve (src/dgcv/report/figure.py:143) (427 samples, 0.81%)</title><rect x="55.0314%" y="260" width="0.8054%" height="15" fill="rgb(233,42,35)" fg:x="29176" fg:w="427"/><text x="55.2814%" y="270.50"></text></g><g><title>_get_xrange_for_curve (src/dgcv/report/figure.py:146) (72 samples, 0.14%)</title><rect x="55.8368%" y="260" width="0.1358%" height="15" fill="rgb(231,13,6)" fg:x="29603" fg:w="72"/><text x="56.0868%" y="270.50"></text></g><g><title>_create_full_tex (src/dgcv/report/report.py:293) (1,620 samples, 3.06%)</title><rect x="52.9208%" y="196" width="3.0556%" height="15" fill="rgb(207,181,40)" fg:x="28057" fg:w="1620"/><text x="53.1708%" y="206.50">_cr..</text></g><g><title>get_common_time_range (src/dgcv/report/figure.py:585) (1,445 samples, 2.73%)</title><rect x="53.2508%" y="212" width="2.7255%" height="15" fill="rgb(254,173,49)" fg:x="28232" fg:w="1445"/><text x="53.5008%" y="222.50">ge..</text></g><g><title>_get_time_range (src/dgcv/report/figure.py:538) (974 samples, 1.84%)</title><rect x="54.1392%" y="228" width="1.8371%" height="15" fill="rgb(221,1,38)" fg:x="28703" fg:w="974"/><text x="54.3892%" y="238.50">_..</text></g><g><title>_get_xrange (src/dgcv/report/figure.py:100) (974 samples, 1.84%)</title><rect x="54.1392%" y="244" width="1.8371%" height="15" fill="rgb(206,124,46)" fg:x="28703" fg:w="974"/><text x="54.3892%" y="254.50">_..</text></g><g><title>get_curves2plot (src/dgcv/report/figure.py:701) (249 samples, 0.47%)</title><rect x="56.0707%" y="228" width="0.4697%" height="15" fill="rgb(249,21,11)" fg:x="29727" fg:w="249"/><text x="56.3207%" y="238.50"></text></g><g><title>_add_curve2plot (src/dgcv/report/figure.py:83) (248 samples, 0.47%)</title><rect x="56.0726%" y="244" width="0.4678%" height="15" fill="rgb(222,201,40)" fg:x="29728" fg:w="248"/><text x="56.3226%" y="254.50"></text></g><g><title>get_curves2plot (src/dgcv/report/figure.py:707) (95 samples, 0.18%)</title><rect x="56.5404%" y="228" width="0.1792%" height="15" fill="rgb(235,61,29)" fg:x="29976" fg:w="95"/><text x="56.7904%" y="238.50"></text></g><g><title>_add_curve2plot (src/dgcv/report/figure.py:83) (95 samples, 0.18%)</title><rect x="56.5404%" y="244" width="0.1792%" height="15" fill="rgb(219,207,3)" fg:x="29976" fg:w="95"/><text x="56.7904%" y="254.50"></text></g><g><title>_generate_figures (src/dgcv/report/report.py:209) (442 samples, 0.83%)</title><rect x="56.0028%" y="212" width="0.8337%" height="15" fill="rgb(222,56,46)" fg:x="29691" fg:w="442"/><text x="56.2528%" y="222.50"></text></g><g><title>get_curves2plot (src/dgcv/report/figure.py:718) (59 samples, 0.11%)</title><rect x="56.7252%" y="228" width="0.1113%" height="15" fill="rgb(239,76,54)" fg:x="30074" fg:w="59"/><text x="56.9752%" y="238.50"></text></g><g><title>_add_curve2plot (src/dgcv/report/figure.py:83) (57 samples, 0.11%)</title><rect x="56.7290%" y="244" width="0.1075%" height="15" fill="rgb(231,124,27)" fg:x="30076" fg:w="57"/><text x="56.9790%" y="254.50"></text></g><g><title>get_curves2plot (src/dgcv/report/figure.py:701) (217 samples, 0.41%)</title><rect x="56.9270%" y="228" width="0.4093%" height="15" fill="rgb(249,195,6)" fg:x="30181" fg:w="217"/><text x="57.1770%" y="238.50"></text></g><g><title>_add_curve2plot (src/dgcv/report/figure.py:83) (215 samples, 0.41%)</title><rect x="56.9308%" y="244" width="0.4055%" height="15" fill="rgb(237,174,47)" fg:x="30183" fg:w="215"/><text x="57.1808%" y="254.50"></text></g><g><title>_generate_figures (src/dgcv/report/report.py:215) (311 samples, 0.59%)</title><rect x="56.9270%" y="212" width="0.5866%" height="15" fill="rgb(206,201,31)" fg:x="30181" fg:w="311"/><text x="57.1770%" y="222.50"></text></g><g><title>_get_yrange_for_curve (src/dgcv/report/figure.py:203) (140 samples, 0.26%)</title><rect x="57.6626%" y="260" width="0.2641%" height="15" fill="rgb(231,57,52)" fg:x="30571" fg:w="140"/><text x="57.9126%" y="270.50"></text></g><g><title>create_plot (src/dgcv/report/figure.py:656) (288 samples, 0.54%)</title><rect x="57.6608%" y="228" width="0.5432%" height="15" fill="rgb(248,177,22)" fg:x="30570" fg:w="288"/><text x="57.9108%" y="238.50"></text></g><g><title>_get_yrange (src/dgcv/report/figure.py:178) (288 samples, 0.54%)</title><rect x="57.6608%" y="244" width="0.5432%" height="15" fill="rgb(215,211,37)" fg:x="30570" fg:w="288"/><text x="57.9108%" y="254.50"></text></g><g><title>_get_yrange_for_curve (src/dgcv/report/figure.py:204) (147 samples, 0.28%)</title><rect x="57.9267%" y="260" width="0.2773%" height="15" fill="rgb(241,128,51)" fg:x="30711" fg:w="147"/><text x="58.1767%" y="270.50"></text></g><g><title>create_plot (src/dgcv/report/figure.py:668) (81 samples, 0.15%)</title><rect x="58.2040%" y="228" width="0.1528%" height="15" fill="rgb(227,165,31)" fg:x="30858" fg:w="81"/><text x="58.4540%" y="238.50"></text></g><g><title>__init__ (matplotlib/spines.py:54) (60 samples, 0.11%)</title><rect x="58.4680%" y="388" width="0.1132%" height="15" fill="rgb(228,167,24)" fg:x="30998" fg:w="60"/><text x="58.7180%" y="398.50"></text></g><g><title>_gen_axes_spines (matplotlib/axes/_base.py:1236) (63 samples, 0.12%)</title><rect x="58.4662%" y="340" width="0.1188%" height="15" fill="rgb(228,143,12)" fg:x="30997" fg:w="63"/><text x="58.7162%" y="350.50"></text></g><g><title>&lt;dictcomp&gt; (matplotlib/axes/_base.py:1236) (63 samples, 0.12%)</title><rect x="58.4662%" y="356" width="0.1188%" height="15" fill="rgb(249,149,8)" fg:x="30997" fg:w="63"/><text x="58.7162%" y="366.50"></text></g><g><title>linear_spine (matplotlib/spines.py:447) (62 samples, 0.12%)</title><rect x="58.4680%" y="372" width="0.1169%" height="15" fill="rgb(243,35,44)" fg:x="30998" fg:w="62"/><text x="58.7180%" y="382.50"></text></g><g><title>__init__ (matplotlib/axes/_base.py:685) (64 samples, 0.12%)</title><rect x="58.4662%" y="324" width="0.1207%" height="15" fill="rgb(246,89,9)" fg:x="30997" fg:w="64"/><text x="58.7162%" y="334.50"></text></g><g><title>set_tick_params (matplotlib/axis.py:986) (71 samples, 0.13%)</title><rect x="58.7453%" y="404" width="0.1339%" height="15" fill="rgb(233,213,13)" fg:x="31145" fg:w="71"/><text x="58.9953%" y="414.50"></text></g><g><title>__get__ (matplotlib/axis.py:547) (71 samples, 0.13%)</title><rect x="58.7453%" y="420" width="0.1339%" height="15" fill="rgb(233,141,41)" fg:x="31145" fg:w="71"/><text x="58.9953%" y="430.50"></text></g><g><title>_get_tick (matplotlib/axis.py:1603) (71 samples, 0.13%)</title><rect x="58.7453%" y="436" width="0.1339%" height="15" fill="rgb(239,167,4)" fg:x="31145" fg:w="71"/><text x="58.9953%" y="446.50"></text></g><g><title>__clear (matplotlib/axes/_base.py:1332) (106 samples, 0.20%)</title><rect x="58.6831%" y="356" width="0.1999%" height="15" fill="rgb(209,217,16)" fg:x="31112" fg:w="106"/><text x="58.9331%" y="366.50"></text></g><g><title>grid (matplotlib/axes/_base.py:3314) (73 samples, 0.14%)</title><rect x="58.7453%" y="372" width="0.1377%" height="15" fill="rgb(219,88,35)" fg:x="31145" fg:w="73"/><text x="58.9953%" y="382.50"></text></g><g><title>grid (matplotlib/axis.py:1746) (73 samples, 0.14%)</title><rect x="58.7453%" y="388" width="0.1377%" height="15" fill="rgb(220,193,23)" fg:x="31145" fg:w="73"/><text x="58.9953%" y="398.50"></text></g><g><title>__init__ (matplotlib/axes/_base.py:696) (259 samples, 0.49%)</title><rect x="58.6227%" y="324" width="0.4885%" height="15" fill="rgb(230,90,52)" fg:x="31080" fg:w="259"/><text x="58.8727%" y="334.50"></text></g><g><title>clear (matplotlib/axes/_base.py:1416) (259 samples, 0.49%)</title><rect x="58.6227%" y="340" width="0.4885%" height="15" fill="rgb(252,106,19)" fg:x="31080" fg:w="259"/><text x="58.8727%" y="350.50"></text></g><g><title>add_subplot (matplotlib/figure.py:768) (371 samples, 0.70%)</title><rect x="58.4303%" y="308" width="0.6998%" height="15" fill="rgb(206,74,20)" fg:x="30978" fg:w="371"/><text x="58.6803%" y="318.50"></text></g><g><title>gca (matplotlib/figure.py:1719) (372 samples, 0.70%)</title><rect x="58.4303%" y="292" width="0.7017%" height="15" fill="rgb(230,138,44)" fg:x="30978" fg:w="372"/><text x="58.6803%" y="302.50"></text></g><g><title>_plot_exclusion_windows (src/dgcv/report/figure.py:413) (420 samples, 0.79%)</title><rect x="58.3568%" y="244" width="0.7922%" height="15" fill="rgb(235,182,43)" fg:x="30939" fg:w="420"/><text x="58.6068%" y="254.50"></text></g><g><title>axvspan (matplotlib/pyplot.py:2966) (420 samples, 0.79%)</title><rect x="58.3568%" y="260" width="0.7922%" height="15" fill="rgb(242,16,51)" fg:x="30939" fg:w="420"/><text x="58.6068%" y="270.50"></text></g><g><title>gca (matplotlib/pyplot.py:2776) (382 samples, 0.72%)</title><rect x="58.4284%" y="276" width="0.7205%" height="15" fill="rgb(248,9,4)" fg:x="30977" fg:w="382"/><text x="58.6784%" y="286.50"></text></g><g><title>create_plot (src/dgcv/report/figure.py:669) (449 samples, 0.85%)</title><rect x="58.3568%" y="228" width="0.8469%" height="15" fill="rgb(210,31,22)" fg:x="30939" fg:w="449"/><text x="58.6068%" y="238.50"></text></g><g><title>create_plot (src/dgcv/report/figure.py:670) (71 samples, 0.13%)</title><rect x="59.2037%" y="228" width="0.1339%" height="15" fill="rgb(239,54,39)" fg:x="31388" fg:w="71"/><text x="59.4537%" y="238.50"></text></g><g><title>__get__ (matplotlib/axis.py:547) (63 samples, 0.12%)</title><rect x="59.4338%" y="388" width="0.1188%" height="15" fill="rgb(230,99,41)" fg:x="31510" fg:w="63"/><text x="59.6838%" y="398.50"></text></g><g><title>_get_tick (matplotlib/axis.py:1603) (63 samples, 0.12%)</title><rect x="59.4338%" y="404" width="0.1188%" height="15" fill="rgb(253,106,12)" fg:x="31510" fg:w="63"/><text x="59.6838%" y="414.50"></text></g><g><title>set_clip_path (matplotlib/axis.py:1128) (124 samples, 0.23%)</title><rect x="59.4319%" y="372" width="0.2339%" height="15" fill="rgb(213,46,41)" fg:x="31509" fg:w="124"/><text x="59.6819%" y="382.50"></text></g><g><title>__get__ (matplotlib/axis.py:552) (60 samples, 0.11%)</title><rect x="59.5526%" y="388" width="0.1132%" height="15" fill="rgb(215,133,35)" fg:x="31573" fg:w="60"/><text x="59.8026%" y="398.50"></text></g><g><title>_get_tick (matplotlib/axis.py:1603) (60 samples, 0.11%)</title><rect x="59.5526%" y="404" width="0.1132%" height="15" fill="rgb(213,28,5)" fg:x="31573" fg:w="60"/><text x="59.8026%" y="414.50"></text></g><g><title>clear (matplotlib/axis.py:892) (162 samples, 0.31%)</title><rect x="59.4055%" y="340" width="0.3056%" height="15" fill="rgb(215,77,49)" fg:x="31495" fg:w="162"/><text x="59.6555%" y="350.50"></text></g><g><title>reset_ticks (matplotlib/axis.py:915) (160 samples, 0.30%)</title><rect x="59.4092%" y="356" width="0.3018%" height="15" fill="rgb(248,100,22)" fg:x="31497" fg:w="160"/><text x="59.6592%" y="366.50"></text></g><g><title>__clear (matplotlib/axes/_base.py:1294) (197 samples, 0.37%)</title><rect x="59.3413%" y="324" width="0.3716%" height="15" fill="rgb(208,67,9)" fg:x="31461" fg:w="197"/><text x="59.5913%" y="334.50"></text></g><g><title>_save_plot (src/dgcv/report/figure.py:490) (282 samples, 0.53%)</title><rect x="59.3395%" y="244" width="0.5319%" height="15" fill="rgb(219,133,21)" fg:x="31460" fg:w="282"/><text x="59.5895%" y="254.50"></text></g><g><title>clf (matplotlib/pyplot.py:1215) (282 samples, 0.53%)</title><rect x="59.3395%" y="260" width="0.5319%" height="15" fill="rgb(246,46,29)" fg:x="31460" fg:w="282"/><text x="59.5895%" y="270.50"></text></g><g><title>clear (matplotlib/figure.py:3230) (282 samples, 0.53%)</title><rect x="59.3395%" y="276" width="0.5319%" height="15" fill="rgb(246,185,52)" fg:x="31460" fg:w="282"/><text x="59.5895%" y="286.50"></text></g><g><title>clear (matplotlib/figure.py:983) (281 samples, 0.53%)</title><rect x="59.3413%" y="292" width="0.5300%" height="15" fill="rgb(252,136,11)" fg:x="31461" fg:w="281"/><text x="59.5913%" y="302.50"></text></g><g><title>clear (matplotlib/axes/_base.py:1416) (281 samples, 0.53%)</title><rect x="59.3413%" y="308" width="0.5300%" height="15" fill="rgb(219,138,53)" fg:x="31461" fg:w="281"/><text x="59.5913%" y="318.50"></text></g><g><title>__clear (matplotlib/axes/_base.py:1294) (54 samples, 0.10%)</title><rect x="60.1241%" y="356" width="0.1019%" height="15" fill="rgb(211,51,23)" fg:x="31876" fg:w="54"/><text x="60.3741%" y="366.50"></text></g><g><title>__init__ (matplotlib/axis.py:368) (60 samples, 0.11%)</title><rect x="60.2279%" y="452" width="0.1132%" height="15" fill="rgb(247,221,28)" fg:x="31931" fg:w="60"/><text x="60.4779%" y="462.50"></text></g><g><title>set_tick_params (matplotlib/axis.py:986) (68 samples, 0.13%)</title><rect x="60.2279%" y="404" width="0.1283%" height="15" fill="rgb(251,222,45)" fg:x="31931" fg:w="68"/><text x="60.4779%" y="414.50"></text></g><g><title>__get__ (matplotlib/axis.py:547) (68 samples, 0.13%)</title><rect x="60.2279%" y="420" width="0.1283%" height="15" fill="rgb(217,162,53)" fg:x="31931" fg:w="68"/><text x="60.4779%" y="430.50"></text></g><g><title>_get_tick (matplotlib/axis.py:1603) (68 samples, 0.13%)</title><rect x="60.2279%" y="436" width="0.1283%" height="15" fill="rgb(229,93,14)" fg:x="31931" fg:w="68"/><text x="60.4779%" y="446.50"></text></g><g><title>grid (matplotlib/axes/_base.py:3312) (71 samples, 0.13%)</title><rect x="60.2279%" y="372" width="0.1339%" height="15" fill="rgb(209,67,49)" fg:x="31931" fg:w="71"/><text x="60.4779%" y="382.50"></text></g><g><title>grid (matplotlib/axis.py:1746) (71 samples, 0.13%)</title><rect x="60.2279%" y="388" width="0.1339%" height="15" fill="rgb(213,87,29)" fg:x="31931" fg:w="71"/><text x="60.4779%" y="398.50"></text></g><g><title>set_tick_params (matplotlib/axis.py:986) (55 samples, 0.10%)</title><rect x="60.3618%" y="404" width="0.1037%" height="15" fill="rgb(205,151,52)" fg:x="32002" fg:w="55"/><text x="60.6118%" y="414.50"></text></g><g><title>__get__ (matplotlib/axis.py:547) (55 samples, 0.10%)</title><rect x="60.3618%" y="420" width="0.1037%" height="15" fill="rgb(253,215,39)" fg:x="32002" fg:w="55"/><text x="60.6118%" y="430.50"></text></g><g><title>_get_tick (matplotlib/axis.py:1603) (55 samples, 0.10%)</title><rect x="60.3618%" y="436" width="0.1037%" height="15" fill="rgb(221,220,41)" fg:x="32002" fg:w="55"/><text x="60.6118%" y="446.50"></text></g><g><title>__clear (matplotlib/axes/_base.py:1332) (130 samples, 0.25%)</title><rect x="60.2279%" y="356" width="0.2452%" height="15" fill="rgb(218,133,21)" fg:x="31931" fg:w="130"/><text x="60.4779%" y="366.50"></text></g><g><title>grid (matplotlib/axes/_base.py:3314) (59 samples, 0.11%)</title><rect x="60.3618%" y="372" width="0.1113%" height="15" fill="rgb(221,193,43)" fg:x="32002" fg:w="59"/><text x="60.6118%" y="382.50"></text></g><g><title>grid (matplotlib/axis.py:1746) (59 samples, 0.11%)</title><rect x="60.3618%" y="388" width="0.1113%" height="15" fill="rgb(240,128,52)" fg:x="32002" fg:w="59"/><text x="60.6118%" y="398.50"></text></g><g><title>__clear (matplotlib/axes/_base.py:1383) (58 samples, 0.11%)</title><rect x="60.5428%" y="356" width="0.1094%" height="15" fill="rgb(253,114,12)" fg:x="32098" fg:w="58"/><text x="60.7928%" y="366.50"></text></g><g><title>__clear (matplotlib/axes/_base.py:1384) (72 samples, 0.14%)</title><rect x="60.6522%" y="356" width="0.1358%" height="15" fill="rgb(215,223,47)" fg:x="32156" fg:w="72"/><text x="60.9022%" y="366.50"></text></g><g><title>__init__ (matplotlib/axes/_base.py:696) (373 samples, 0.70%)</title><rect x="60.1241%" y="324" width="0.7035%" height="15" fill="rgb(248,225,23)" fg:x="31876" fg:w="373"/><text x="60.3741%" y="334.50"></text></g><g><title>clear (matplotlib/axes/_base.py:1416) (373 samples, 0.70%)</title><rect x="60.1241%" y="340" width="0.7035%" height="15" fill="rgb(250,108,0)" fg:x="31876" fg:w="373"/><text x="60.3741%" y="350.50"></text></g><g><title>gca (matplotlib/figure.py:1719) (499 samples, 0.94%)</title><rect x="59.9204%" y="292" width="0.9412%" height="15" fill="rgb(228,208,7)" fg:x="31768" fg:w="499"/><text x="60.1704%" y="302.50"></text></g><g><title>add_subplot (matplotlib/figure.py:768) (498 samples, 0.94%)</title><rect x="59.9223%" y="308" width="0.9393%" height="15" fill="rgb(244,45,10)" fg:x="31769" fg:w="498"/><text x="60.1723%" y="318.50"></text></g><g><title>gca (matplotlib/pyplot.py:2776) (500 samples, 0.94%)</title><rect x="59.9204%" y="276" width="0.9431%" height="15" fill="rgb(207,125,25)" fg:x="31768" fg:w="500"/><text x="60.1704%" y="286.50"></text></g><g><title>atleast_1d (numpy/_core/shape_base.py:63) (176 samples, 0.33%)</title><rect x="60.8654%" y="340" width="0.3320%" height="15" fill="rgb(210,195,18)" fg:x="32269" fg:w="176"/><text x="61.1154%" y="350.50"></text></g><g><title>_plot_args (matplotlib/axes/_base.py:483) (177 samples, 0.33%)</title><rect x="60.8654%" y="308" width="0.3339%" height="15" fill="rgb(249,80,12)" fg:x="32269" fg:w="177"/><text x="61.1154%" y="318.50"></text></g><g><title>_check_1d (matplotlib/cbook.py:1358) (177 samples, 0.33%)</title><rect x="60.8654%" y="324" width="0.3339%" height="15" fill="rgb(221,65,9)" fg:x="32269" fg:w="177"/><text x="61.1154%" y="334.50"></text></g><g><title>_plot_args (matplotlib/axes/_base.py:484) (235 samples, 0.44%)</title><rect x="61.1992%" y="308" width="0.4433%" height="15" fill="rgb(235,49,36)" fg:x="32446" fg:w="235"/><text x="61.4492%" y="318.50"></text></g><g><title>_check_1d (matplotlib/cbook.py:1358) (233 samples, 0.44%)</title><rect x="61.2030%" y="324" width="0.4395%" height="15" fill="rgb(225,32,20)" fg:x="32448" fg:w="233"/><text x="61.4530%" y="334.50"></text></g><g><title>atleast_1d (numpy/_core/shape_base.py:63) (233 samples, 0.44%)</title><rect x="61.2030%" y="340" width="0.4395%" height="15" fill="rgb(215,141,46)" fg:x="32448" fg:w="233"/><text x="61.4530%" y="350.50"></text></g><g><title>plot (matplotlib/axes/_axes.py:1777) (440 samples, 0.83%)</title><rect x="60.8635%" y="276" width="0.8299%" height="15" fill="rgb(250,160,47)" fg:x="32268" fg:w="440"/><text x="61.1135%" y="286.50"></text></g><g><title>__call__ (matplotlib/axes/_base.py:297) (439 samples, 0.83%)</title><rect x="60.8654%" y="292" width="0.8280%" height="15" fill="rgb(216,222,40)" fg:x="32269" fg:w="439"/><text x="61.1154%" y="302.50"></text></g><g><title>update_from_path (matplotlib/transforms.py:871) (94 samples, 0.18%)</title><rect x="61.7858%" y="324" width="0.1773%" height="15" fill="rgb(234,217,39)" fg:x="32757" fg:w="94"/><text x="62.0358%" y="334.50"></text></g><g><title>_save_plot (src/dgcv/report/figure.py:496) (1,086 samples, 2.05%)</title><rect x="59.9204%" y="244" width="2.0484%" height="15" fill="rgb(207,178,40)" fg:x="31768" fg:w="1086"/><text x="60.1704%" y="254.50">_..</text></g><g><title>plot (matplotlib/pyplot.py:3829) (1,086 samples, 2.05%)</title><rect x="59.9204%" y="260" width="2.0484%" height="15" fill="rgb(221,136,13)" fg:x="31768" fg:w="1086"/><text x="60.1704%" y="270.50">p..</text></g><g><title>plot (matplotlib/axes/_axes.py:1779) (146 samples, 0.28%)</title><rect x="61.6934%" y="276" width="0.2754%" height="15" fill="rgb(249,199,10)" fg:x="32708" fg:w="146"/><text x="61.9434%" y="286.50"></text></g><g><title>add_line (matplotlib/axes/_base.py:2371) (138 samples, 0.26%)</title><rect x="61.7085%" y="292" width="0.2603%" height="15" fill="rgb(249,222,13)" fg:x="32716" fg:w="138"/><text x="61.9585%" y="302.50"></text></g><g><title>_update_line_limits (matplotlib/axes/_base.py:2433) (97 samples, 0.18%)</title><rect x="61.7858%" y="308" width="0.1830%" height="15" fill="rgb(244,185,38)" fg:x="32757" fg:w="97"/><text x="62.0358%" y="318.50"></text></g><g><title>_plot_args (matplotlib/axes/_base.py:483) (216 samples, 0.41%)</title><rect x="61.9801%" y="308" width="0.4074%" height="15" fill="rgb(236,202,9)" fg:x="32860" fg:w="216"/><text x="62.2301%" y="318.50"></text></g><g><title>_check_1d (matplotlib/cbook.py:1358) (216 samples, 0.41%)</title><rect x="61.9801%" y="324" width="0.4074%" height="15" fill="rgb(250,229,37)" fg:x="32860" fg:w="216"/><text x="62.2301%" y="334.50"></text></g><g><title>atleast_1d (numpy/_core/shape_base.py:63) (216 samples, 0.41%)</title><rect x="61.9801%" y="340" width="0.4074%" height="15" fill="rgb(206,174,23)" fg:x="32860" fg:w="216"/><text x="62.2301%" y="350.50"></text></g><g><title>_plot_args (matplotlib/axes/_base.py:484) (256 samples, 0.48%)</title><rect x="62.3875%" y="308" width="0.4829%" height="15" fill="rgb(211,33,43)" fg:x="33076" fg:w="256"/><text x="62.6375%" y="318.50"></text></g><g><title>_check_1d (matplotlib/cbook.py:1358) (256 samples, 0.48%)</title><rect x="62.3875%" y="324" width="0.4829%" height="15" fill="rgb(245,58,50)" fg:x="33076" fg:w="256"/><text x="62.6375%" y="334.50"></text></g><g><title>atleast_1d (numpy/_core/shape_base.py:63) (256 samples, 0.48%)</title><rect x="62.3875%" y="340" width="0.4829%" height="15" fill="rgb(244,68,36)" fg:x="33076" fg:w="256"/><text x="62.6375%" y="350.50"></text></g><g><title>__call__ (matplotlib/axes/_base.py:297) (505 samples, 0.95%)</title><rect x="61.9801%" y="292" width="0.9525%" height="15" fill="rgb(232,229,15)" fg:x="32860" fg:w="505"/><text x="62.2301%" y="302.50"></text></g><g><title>plot (matplotlib/axes/_axes.py:1777) (507 samples, 0.96%)</title><rect x="61.9782%" y="276" width="0.9563%" height="15" fill="rgb(254,30,23)" fg:x="32859" fg:w="507"/><text x="62.2282%" y="286.50"></text></g><g><title>_update_line_limits (matplotlib/axes/_base.py:2394) (55 samples, 0.10%)</title><rect x="62.9572%" y="308" width="0.1037%" height="15" fill="rgb(235,160,14)" fg:x="33378" fg:w="55"/><text x="63.2072%" y="318.50"></text></g><g><title>get_path (matplotlib/lines.py:1038) (55 samples, 0.10%)</title><rect x="62.9572%" y="324" width="0.1037%" height="15" fill="rgb(212,155,44)" fg:x="33378" fg:w="55"/><text x="63.2072%" y="334.50"></text></g><g><title>update_from_path (matplotlib/transforms.py:871) (97 samples, 0.18%)</title><rect x="63.0609%" y="324" width="0.1830%" height="15" fill="rgb(226,2,50)" fg:x="33433" fg:w="97"/><text x="63.3109%" y="334.50"></text></g><g><title>add_line (matplotlib/axes/_base.py:2371) (153 samples, 0.29%)</title><rect x="62.9572%" y="292" width="0.2886%" height="15" fill="rgb(234,177,6)" fg:x="33378" fg:w="153"/><text x="63.2072%" y="302.50"></text></g><g><title>_update_line_limits (matplotlib/axes/_base.py:2433) (98 samples, 0.18%)</title><rect x="63.0609%" y="308" width="0.1848%" height="15" fill="rgb(217,24,9)" fg:x="33433" fg:w="98"/><text x="63.3109%" y="318.50"></text></g><g><title>plot (matplotlib/axes/_axes.py:1779) (166 samples, 0.31%)</title><rect x="62.9345%" y="276" width="0.3131%" height="15" fill="rgb(220,13,46)" fg:x="33366" fg:w="166"/><text x="63.1845%" y="286.50"></text></g><g><title>_save_plot (src/dgcv/report/figure.py:500) (681 samples, 1.28%)</title><rect x="61.9688%" y="244" width="1.2845%" height="15" fill="rgb(239,221,27)" fg:x="32854" fg:w="681"/><text x="62.2188%" y="254.50"></text></g><g><title>plot (matplotlib/pyplot.py:3829) (680 samples, 1.28%)</title><rect x="61.9707%" y="260" width="1.2826%" height="15" fill="rgb(222,198,25)" fg:x="32855" fg:w="680"/><text x="62.2207%" y="270.50"></text></g><g><title>&lt;module&gt; (matplotlib/backends/backend_pdf.py:43) (64 samples, 0.12%)</title><rect x="63.4080%" y="468" width="0.1207%" height="15" fill="rgb(211,99,13)" fg:x="33617" fg:w="64"/><text x="63.6580%" y="478.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (64 samples, 0.12%)</title><rect x="63.4080%" y="484" width="0.1207%" height="15" fill="rgb(232,111,31)" fg:x="33617" fg:w="64"/><text x="63.6580%" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (64 samples, 0.12%)</title><rect x="63.4080%" y="500" width="0.1207%" height="15" fill="rgb(245,82,37)" fg:x="33617" fg:w="64"/><text x="63.6580%" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (64 samples, 0.12%)</title><rect x="63.4080%" y="516" width="0.1207%" height="15" fill="rgb(227,149,46)" fg:x="33617" fg:w="64"/><text x="63.6580%" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (64 samples, 0.12%)</title><rect x="63.4080%" y="532" width="0.1207%" height="15" fill="rgb(218,36,50)" fg:x="33617" fg:w="64"/><text x="63.6580%" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (64 samples, 0.12%)</title><rect x="63.4080%" y="548" width="0.1207%" height="15" fill="rgb(226,80,48)" fg:x="33617" fg:w="64"/><text x="63.6580%" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (64 samples, 0.12%)</title><rect x="63.4080%" y="564" width="0.1207%" height="15" fill="rgb(238,224,15)" fg:x="33617" fg:w="64"/><text x="63.6580%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (64 samples, 0.12%)</title><rect x="63.4080%" y="580" width="0.1207%" height="15" fill="rgb(241,136,10)" fg:x="33617" fg:w="64"/><text x="63.6580%" y="590.50"></text></g><g><title>&lt;module&gt; (matplotlib/backends/_backend_pdf_ps.py:9) (64 samples, 0.12%)</title><rect x="63.4080%" y="596" width="0.1207%" height="15" fill="rgb(208,32,45)" fg:x="33617" fg:w="64"/><text x="63.6580%" y="606.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1078) (64 samples, 0.12%)</title><rect x="63.4080%" y="612" width="0.1207%" height="15" fill="rgb(207,135,9)" fg:x="33617" fg:w="64"/><text x="63.6580%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (64 samples, 0.12%)</title><rect x="63.4080%" y="628" width="0.1207%" height="15" fill="rgb(206,86,44)" fg:x="33617" fg:w="64"/><text x="63.6580%" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (64 samples, 0.12%)</title><rect x="63.4080%" y="644" width="0.1207%" height="15" fill="rgb(245,177,15)" fg:x="33617" fg:w="64"/><text x="63.6580%" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (64 samples, 0.12%)</title><rect x="63.4080%" y="660" width="0.1207%" height="15" fill="rgb(206,64,50)" fg:x="33617" fg:w="64"/><text x="63.6580%" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (64 samples, 0.12%)</title><rect x="63.4080%" y="676" width="0.1207%" height="15" fill="rgb(234,36,40)" fg:x="33617" fg:w="64"/><text x="63.6580%" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (63 samples, 0.12%)</title><rect x="63.4098%" y="692" width="0.1188%" height="15" fill="rgb(213,64,8)" fg:x="33618" fg:w="63"/><text x="63.6598%" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (63 samples, 0.12%)</title><rect x="63.4098%" y="708" width="0.1188%" height="15" fill="rgb(210,75,36)" fg:x="33618" fg:w="63"/><text x="63.6598%" y="718.50"></text></g><g><title>_switch_canvas_and_return_print_method (matplotlib/backend_bases.py:2024) (71 samples, 0.13%)</title><rect x="63.3966%" y="324" width="0.1339%" height="15" fill="rgb(229,88,21)" fg:x="33611" fg:w="71"/><text x="63.6466%" y="334.50"></text></g><g><title>get_registered_canvas_class (matplotlib/backend_bases.py:125) (71 samples, 0.13%)</title><rect x="63.3966%" y="340" width="0.1339%" height="15" fill="rgb(252,204,47)" fg:x="33611" fg:w="71"/><text x="63.6466%" y="350.50"></text></g><g><title>import_module (importlib/__init__.py:126) (71 samples, 0.13%)</title><rect x="63.3966%" y="356" width="0.1339%" height="15" fill="rgb(208,77,27)" fg:x="33611" fg:w="71"/><text x="63.6466%" y="366.50"></text></g><g><title>_gcd_import (&lt;frozen importlib._bootstrap&gt;:1050) (71 samples, 0.13%)</title><rect x="63.3966%" y="372" width="0.1339%" height="15" fill="rgb(221,76,26)" fg:x="33611" fg:w="71"/><text x="63.6466%" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (71 samples, 0.13%)</title><rect x="63.3966%" y="388" width="0.1339%" height="15" fill="rgb(225,139,18)" fg:x="33611" fg:w="71"/><text x="63.6466%" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (71 samples, 0.13%)</title><rect x="63.3966%" y="404" width="0.1339%" height="15" fill="rgb(230,137,11)" fg:x="33611" fg:w="71"/><text x="63.6466%" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (71 samples, 0.13%)</title><rect x="63.3966%" y="420" width="0.1339%" height="15" fill="rgb(212,28,1)" fg:x="33611" fg:w="71"/><text x="63.6466%" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (69 samples, 0.13%)</title><rect x="63.4004%" y="436" width="0.1301%" height="15" fill="rgb(248,164,17)" fg:x="33613" fg:w="69"/><text x="63.6504%" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (69 samples, 0.13%)</title><rect x="63.4004%" y="452" width="0.1301%" height="15" fill="rgb(222,171,42)" fg:x="33613" fg:w="69"/><text x="63.6504%" y="462.50"></text></g><g><title>__enter__ (contextlib.py:135) (77 samples, 0.15%)</title><rect x="63.3948%" y="308" width="0.1452%" height="15" fill="rgb(243,84,45)" fg:x="33610" fg:w="77"/><text x="63.6448%" y="318.50"></text></g><g><title>print_figure (matplotlib/backend_bases.py:2124) (81 samples, 0.15%)</title><rect x="63.3948%" y="292" width="0.1528%" height="15" fill="rgb(252,49,23)" fg:x="33610" fg:w="81"/><text x="63.6448%" y="302.50"></text></g><g><title>__init__ (matplotlib/axis.py:368) (280 samples, 0.53%)</title><rect x="63.7984%" y="532" width="0.5281%" height="15" fill="rgb(215,19,7)" fg:x="33824" fg:w="280"/><text x="64.0484%" y="542.50"></text></g><g><title>__init__ (matplotlib/axis.py:154) (59 samples, 0.11%)</title><rect x="64.4793%" y="548" width="0.1113%" height="15" fill="rgb(238,81,41)" fg:x="34185" fg:w="59"/><text x="64.7293%" y="558.50"></text></g><g><title>__init__ (matplotlib/text.py:139) (76 samples, 0.14%)</title><rect x="64.8207%" y="564" width="0.1434%" height="15" fill="rgb(210,199,37)" fg:x="34366" fg:w="76"/><text x="65.0707%" y="574.50"></text></g><g><title>__init__ (matplotlib/axis.py:176) (88 samples, 0.17%)</title><rect x="64.8169%" y="548" width="0.1660%" height="15" fill="rgb(244,192,49)" fg:x="34364" fg:w="88"/><text x="65.0669%" y="558.50"></text></g><g><title>__init__ (matplotlib/axis.py:181) (54 samples, 0.10%)</title><rect x="64.9829%" y="548" width="0.1019%" height="15" fill="rgb(226,211,11)" fg:x="34452" fg:w="54"/><text x="65.2329%" y="558.50"></text></g><g><title>__init__ (matplotlib/axis.py:429) (348 samples, 0.66%)</title><rect x="64.4623%" y="532" width="0.6564%" height="15" fill="rgb(236,162,54)" fg:x="34176" fg:w="348"/><text x="64.7123%" y="542.50"></text></g><g><title>get_major_ticks (matplotlib/axis.py:1675) (779 samples, 1.47%)</title><rect x="63.7946%" y="500" width="1.4693%" height="15" fill="rgb(220,229,9)" fg:x="33822" fg:w="779"/><text x="64.0446%" y="510.50"></text></g><g><title>_get_tick (matplotlib/axis.py:1603) (779 samples, 1.47%)</title><rect x="63.7946%" y="516" width="1.4693%" height="15" fill="rgb(250,87,22)" fg:x="33822" fg:w="779"/><text x="64.0446%" y="526.50"></text></g><g><title>_copy_tick_props (matplotlib/axis.py:1623) (75 samples, 0.14%)</title><rect x="65.3074%" y="516" width="0.1415%" height="15" fill="rgb(239,43,17)" fg:x="34624" fg:w="75"/><text x="65.5574%" y="526.50"></text></g><g><title>update_from (matplotlib/lines.py:1358) (69 samples, 0.13%)</title><rect x="65.3187%" y="532" width="0.1301%" height="15" fill="rgb(231,177,25)" fg:x="34630" fg:w="69"/><text x="65.5687%" y="542.50"></text></g><g><title>__init__ (matplotlib/markers.py:248) (64 samples, 0.12%)</title><rect x="65.3281%" y="548" width="0.1207%" height="15" fill="rgb(219,179,1)" fg:x="34635" fg:w="64"/><text x="65.5781%" y="558.50"></text></g><g><title>_set_marker (matplotlib/markers.py:323) (61 samples, 0.12%)</title><rect x="65.3338%" y="564" width="0.1151%" height="15" fill="rgb(238,219,53)" fg:x="34638" fg:w="61"/><text x="65.5838%" y="574.50"></text></g><g><title>deepcopy (copy.py:146) (58 samples, 0.11%)</title><rect x="65.3394%" y="580" width="0.1094%" height="15" fill="rgb(232,167,36)" fg:x="34641" fg:w="58"/><text x="65.5894%" y="590.50"></text></g><g><title>_deepcopy_dict (copy.py:231) (58 samples, 0.11%)</title><rect x="65.3394%" y="596" width="0.1094%" height="15" fill="rgb(244,19,51)" fg:x="34641" fg:w="58"/><text x="65.5894%" y="606.50"></text></g><g><title>_copy_tick_props (matplotlib/axis.py:1624) (61 samples, 0.12%)</title><rect x="65.4488%" y="516" width="0.1151%" height="15" fill="rgb(224,6,22)" fg:x="34699" fg:w="61"/><text x="65.6988%" y="526.50"></text></g><g><title>_update_ticks (matplotlib/axis.py:1294) (997 samples, 1.88%)</title><rect x="63.7927%" y="484" width="1.8805%" height="15" fill="rgb(224,145,5)" fg:x="33821" fg:w="997"/><text x="64.0427%" y="494.50">_..</text></g><g><title>get_major_ticks (matplotlib/axis.py:1677) (217 samples, 0.41%)</title><rect x="65.2640%" y="500" width="0.4093%" height="15" fill="rgb(234,130,49)" fg:x="34601" fg:w="217"/><text x="65.5140%" y="510.50"></text></g><g><title>draw (matplotlib/axis.py:1415) (1,112 samples, 2.10%)</title><rect x="63.7041%" y="468" width="2.0974%" height="15" fill="rgb(254,6,2)" fg:x="33774" fg:w="1112"/><text x="63.9541%" y="478.50">d..</text></g><g><title>_get_text_metrics_with_cache (matplotlib/text.py:69) (71 samples, 0.13%)</title><rect x="65.8770%" y="548" width="0.1339%" height="15" fill="rgb(208,96,46)" fg:x="34926" fg:w="71"/><text x="66.1270%" y="558.50"></text></g><g><title>_get_text_metrics_with_cache_impl (matplotlib/text.py:77) (69 samples, 0.13%)</title><rect x="65.8808%" y="564" width="0.1301%" height="15" fill="rgb(239,3,39)" fg:x="34928" fg:w="69"/><text x="66.1308%" y="574.50"></text></g><g><title>_get_layout (matplotlib/text.py:382) (74 samples, 0.14%)</title><rect x="65.8770%" y="532" width="0.1396%" height="15" fill="rgb(233,210,1)" fg:x="34926" fg:w="74"/><text x="66.1270%" y="542.50"></text></g><g><title>get_window_extent (matplotlib/text.py:969) (186 samples, 0.35%)</title><rect x="65.8204%" y="516" width="0.3508%" height="15" fill="rgb(244,137,37)" fg:x="34896" fg:w="186"/><text x="66.0704%" y="526.50"></text></g><g><title>&lt;listcomp&gt; (matplotlib/axis.py:1343) (230 samples, 0.43%)</title><rect x="65.8015%" y="500" width="0.4338%" height="15" fill="rgb(240,136,2)" fg:x="34886" fg:w="230"/><text x="66.0515%" y="510.50"></text></g><g><title>draw (matplotlib/axis.py:1416) (231 samples, 0.44%)</title><rect x="65.8015%" y="468" width="0.4357%" height="15" fill="rgb(239,18,37)" fg:x="34886" fg:w="231"/><text x="66.0515%" y="478.50"></text></g><g><title>_get_ticklabel_bboxes (matplotlib/axis.py:1343) (231 samples, 0.44%)</title><rect x="65.8015%" y="484" width="0.4357%" height="15" fill="rgb(218,185,22)" fg:x="34886" fg:w="231"/><text x="66.0515%" y="494.50"></text></g><g><title>draw (matplotlib/lines.py:873) (117 samples, 0.22%)</title><rect x="66.4523%" y="532" width="0.2207%" height="15" fill="rgb(225,218,4)" fg:x="35231" fg:w="117"/><text x="66.7023%" y="542.50"></text></g><g><title>draw_markers (matplotlib/backends/backend_pdf.py:2108) (117 samples, 0.22%)</title><rect x="66.4523%" y="548" width="0.2207%" height="15" fill="rgb(230,182,32)" fg:x="35231" fg:w="117"/><text x="66.7023%" y="558.50"></text></g><g><title>draw (matplotlib/text.py:751) (56 samples, 0.11%)</title><rect x="66.6843%" y="532" width="0.1056%" height="15" fill="rgb(242,56,43)" fg:x="35354" fg:w="56"/><text x="66.9343%" y="542.50"></text></g><g><title>draw (matplotlib/text.py:752) (78 samples, 0.15%)</title><rect x="66.7899%" y="532" width="0.1471%" height="15" fill="rgb(233,99,24)" fg:x="35410" fg:w="78"/><text x="67.0399%" y="542.50"></text></g><g><title>draw_text (matplotlib/backends/backend_pdf.py:2384) (65 samples, 0.12%)</title><rect x="67.1370%" y="548" width="0.1226%" height="15" fill="rgb(234,209,42)" fg:x="35594" fg:w="65"/><text x="67.3870%" y="558.50"></text></g><g><title>draw (matplotlib/text.py:808) (180 samples, 0.34%)</title><rect x="67.0408%" y="532" width="0.3395%" height="15" fill="rgb(227,7,12)" fg:x="35543" fg:w="180"/><text x="67.2908%" y="542.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:71) (598 samples, 1.13%)</title><rect x="66.2561%" y="516" width="1.1279%" height="15" fill="rgb(245,203,43)" fg:x="35127" fg:w="598"/><text x="66.5061%" y="526.50"></text></g><g><title>draw (matplotlib/axis.py:276) (610 samples, 1.15%)</title><rect x="66.2410%" y="500" width="1.1506%" height="15" fill="rgb(238,205,33)" fg:x="35119" fg:w="610"/><text x="66.4910%" y="510.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:71) (613 samples, 1.16%)</title><rect x="66.2372%" y="484" width="1.1562%" height="15" fill="rgb(231,56,7)" fg:x="35117" fg:w="613"/><text x="66.4872%" y="494.50"></text></g><g><title>draw (matplotlib/axis.py:1419) (614 samples, 1.16%)</title><rect x="66.2372%" y="468" width="1.1581%" height="15" fill="rgb(244,186,29)" fg:x="35117" fg:w="614"/><text x="66.4872%" y="478.50"></text></g><g><title>_update_label_position (matplotlib/axis.py:2459) (87 samples, 0.16%)</title><rect x="67.3954%" y="484" width="0.1641%" height="15" fill="rgb(234,111,31)" fg:x="35731" fg:w="87"/><text x="67.6454%" y="494.50"></text></g><g><title>_get_tick_boxes_siblings (matplotlib/axis.py:2251) (54 samples, 0.10%)</title><rect x="67.6821%" y="500" width="0.1019%" height="15" fill="rgb(241,149,10)" fg:x="35883" fg:w="54"/><text x="67.9321%" y="510.50"></text></g><g><title>_update_label_position (matplotlib/axis.py:2686) (107 samples, 0.20%)</title><rect x="67.6764%" y="484" width="0.2018%" height="15" fill="rgb(249,206,44)" fg:x="35880" fg:w="107"/><text x="67.9264%" y="494.50"></text></g><g><title>draw (matplotlib/axis.py:1422) (311 samples, 0.59%)</title><rect x="67.3954%" y="468" width="0.5866%" height="15" fill="rgb(251,153,30)" fg:x="35731" fg:w="311"/><text x="67.6454%" y="478.50"></text></g><g><title>draw (matplotlib/axis.py:1423) (84 samples, 0.16%)</title><rect x="67.9820%" y="468" width="0.1584%" height="15" fill="rgb(239,152,38)" fg:x="36042" fg:w="84"/><text x="68.2320%" y="478.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:71) (84 samples, 0.16%)</title><rect x="67.9820%" y="484" width="0.1584%" height="15" fill="rgb(249,139,47)" fg:x="36042" fg:w="84"/><text x="68.2320%" y="494.50"></text></g><g><title>writePath (matplotlib/backends/backend_pdf.py:1894) (76 samples, 0.14%)</title><rect x="68.2385%" y="500" width="0.1434%" height="15" fill="rgb(244,64,35)" fg:x="36178" fg:w="76"/><text x="68.4885%" y="510.50"></text></g><g><title>pathOperations (matplotlib/backends/backend_pdf.py:1880) (76 samples, 0.14%)</title><rect x="68.2385%" y="516" width="0.1434%" height="15" fill="rgb(216,46,15)" fg:x="36178" fg:w="76"/><text x="68.4885%" y="526.50"></text></g><g><title>draw_path (matplotlib/backends/backend_pdf.py:2024) (83 samples, 0.16%)</title><rect x="68.2366%" y="484" width="0.1566%" height="15" fill="rgb(250,74,19)" fg:x="36177" fg:w="83"/><text x="68.4866%" y="494.50"></text></g><g><title>draw (matplotlib/lines.py:807) (94 samples, 0.18%)</title><rect x="68.2196%" y="468" width="0.1773%" height="15" fill="rgb(249,42,33)" fg:x="36168" fg:w="94"/><text x="68.4696%" y="478.50"></text></g><g><title>draw (matplotlib/axes/_base.py:3181) (2,532 samples, 4.78%)</title><rect x="63.6966%" y="420" width="4.7758%" height="15" fill="rgb(242,149,17)" fg:x="33770" fg:w="2532"/><text x="63.9466%" y="430.50">draw (..</text></g><g><title>_draw_list_compositing_images (matplotlib/image.py:134) (2,530 samples, 4.77%)</title><rect x="63.7003%" y="436" width="4.7721%" height="15" fill="rgb(244,29,21)" fg:x="33772" fg:w="2530"/><text x="63.9503%" y="446.50">_draw_..</text></g><g><title>draw_wrapper (matplotlib/artist.py:71) (2,530 samples, 4.77%)</title><rect x="63.7003%" y="452" width="4.7721%" height="15" fill="rgb(220,130,37)" fg:x="33772" fg:w="2530"/><text x="63.9503%" y="462.50">draw_w..</text></g><g><title>draw (matplotlib/figure.py:3257) (2,535 samples, 4.78%)</title><rect x="63.6947%" y="372" width="4.7815%" height="15" fill="rgb(211,67,2)" fg:x="33769" fg:w="2535"/><text x="63.9447%" y="382.50">draw (..</text></g><g><title>_draw_list_compositing_images (matplotlib/image.py:134) (2,535 samples, 4.78%)</title><rect x="63.6947%" y="388" width="4.7815%" height="15" fill="rgb(235,68,52)" fg:x="33769" fg:w="2535"/><text x="63.9447%" y="398.50">_draw_..</text></g><g><title>draw_wrapper (matplotlib/artist.py:71) (2,535 samples, 4.78%)</title><rect x="63.6947%" y="404" width="4.7815%" height="15" fill="rgb(246,142,3)" fg:x="33769" fg:w="2535"/><text x="63.9447%" y="414.50">draw_w..</text></g><g><title>print_pdf (matplotlib/backends/backend_pdf.py:2786) (2,568 samples, 4.84%)</title><rect x="63.6343%" y="324" width="4.8437%" height="15" fill="rgb(241,25,7)" fg:x="33737" fg:w="2568"/><text x="63.8843%" y="334.50">print_..</text></g><g><title>draw_wrapper (matplotlib/artist.py:94) (2,568 samples, 4.84%)</title><rect x="63.6343%" y="340" width="4.8437%" height="15" fill="rgb(242,119,39)" fg:x="33737" fg:w="2568"/><text x="63.8843%" y="350.50">draw_w..</text></g><g><title>draw_wrapper (matplotlib/artist.py:71) (2,568 samples, 4.84%)</title><rect x="63.6343%" y="356" width="4.8437%" height="15" fill="rgb(241,98,45)" fg:x="33737" fg:w="2568"/><text x="63.8843%" y="366.50">draw_w..</text></g><g><title>get_char_width (matplotlib/backends/backend_pdf.py:1186) (325 samples, 0.61%)</title><rect x="68.5931%" y="420" width="0.6130%" height="15" fill="rgb(254,28,30)" fg:x="36366" fg:w="325"/><text x="68.8431%" y="430.50"></text></g><g><title>embedTTFType3 (matplotlib/backends/backend_pdf.py:1194) (367 samples, 0.69%)</title><rect x="68.5818%" y="388" width="0.6922%" height="15" fill="rgb(241,142,54)" fg:x="36360" fg:w="367"/><text x="68.8318%" y="398.50"></text></g><g><title>&lt;listcomp&gt; (matplotlib/backends/backend_pdf.py:1194) (367 samples, 0.69%)</title><rect x="68.5818%" y="404" width="0.6922%" height="15" fill="rgb(222,85,15)" fg:x="36360" fg:w="367"/><text x="68.8318%" y="414.50"></text></g><g><title>embedTTFType3 (matplotlib/backends/backend_pdf.py:1223) (136 samples, 0.26%)</title><rect x="69.2929%" y="388" width="0.2565%" height="15" fill="rgb(210,85,47)" fg:x="36737" fg:w="136"/><text x="69.5429%" y="398.50"></text></g><g><title>writeFonts (matplotlib/backends/backend_pdf.py:973) (625 samples, 1.18%)</title><rect x="68.4931%" y="356" width="1.1789%" height="15" fill="rgb(224,206,25)" fg:x="36313" fg:w="625"/><text x="68.7431%" y="366.50"></text></g><g><title>embedTTF (matplotlib/backends/backend_pdf.py:1451) (579 samples, 1.09%)</title><rect x="68.5799%" y="372" width="1.0921%" height="15" fill="rgb(243,201,19)" fg:x="36359" fg:w="579"/><text x="68.8299%" y="382.50"></text></g><g><title>finalize (matplotlib/backends/backend_pdf.py:827) (632 samples, 1.19%)</title><rect x="68.4818%" y="340" width="1.1921%" height="15" fill="rgb(236,59,4)" fg:x="36307" fg:w="632"/><text x="68.7318%" y="350.50"></text></g><g><title>print_pdf (matplotlib/backends/backend_pdf.py:2789) (641 samples, 1.21%)</title><rect x="68.4799%" y="324" width="1.2090%" height="15" fill="rgb(254,179,45)" fg:x="36306" fg:w="641"/><text x="68.7299%" y="334.50"></text></g><g><title>savefig (matplotlib/pyplot.py:1243) (3,338 samples, 6.30%)</title><rect x="63.3948%" y="260" width="6.2961%" height="15" fill="rgb(226,14,10)" fg:x="33610" fg:w="3338"/><text x="63.6448%" y="270.50">savefig ..</text></g><g><title>savefig (matplotlib/figure.py:3490) (3,338 samples, 6.30%)</title><rect x="63.3948%" y="276" width="6.2961%" height="15" fill="rgb(244,27,41)" fg:x="33610" fg:w="3338"/><text x="63.6448%" y="286.50">savefig ..</text></g><g><title>print_figure (matplotlib/backend_bases.py:2184) (3,245 samples, 6.12%)</title><rect x="63.5702%" y="292" width="6.1207%" height="15" fill="rgb(235,35,32)" fg:x="33703" fg:w="3245"/><text x="63.8202%" y="302.50">print_fi..</text></g><g><title>&lt;lambda&gt; (matplotlib/backend_bases.py:2040) (3,244 samples, 6.12%)</title><rect x="63.5721%" y="308" width="6.1188%" height="15" fill="rgb(218,68,31)" fg:x="33704" fg:w="3244"/><text x="63.8221%" y="318.50">&lt;lambda&gt;..</text></g><g><title>draw (matplotlib/axis.py:1415) (66 samples, 0.12%)</title><rect x="69.7569%" y="436" width="0.1245%" height="15" fill="rgb(207,120,37)" fg:x="36983" fg:w="66"/><text x="70.0069%" y="446.50"></text></g><g><title>_get_text_metrics_with_cache (matplotlib/text.py:69) (64 samples, 0.12%)</title><rect x="69.9511%" y="516" width="0.1207%" height="15" fill="rgb(227,98,0)" fg:x="37086" fg:w="64"/><text x="70.2011%" y="526.50"></text></g><g><title>_get_text_metrics_with_cache_impl (matplotlib/text.py:77) (62 samples, 0.12%)</title><rect x="69.9549%" y="532" width="0.1169%" height="15" fill="rgb(207,7,3)" fg:x="37088" fg:w="62"/><text x="70.2049%" y="542.50"></text></g><g><title>_get_layout (matplotlib/text.py:382) (70 samples, 0.13%)</title><rect x="69.9511%" y="500" width="0.1320%" height="15" fill="rgb(206,98,19)" fg:x="37086" fg:w="70"/><text x="70.2011%" y="510.50"></text></g><g><title>get_window_extent (matplotlib/text.py:969) (145 samples, 0.27%)</title><rect x="69.9078%" y="484" width="0.2735%" height="15" fill="rgb(217,5,26)" fg:x="37063" fg:w="145"/><text x="70.1578%" y="494.50"></text></g><g><title>_get_ticklabel_bboxes (matplotlib/axis.py:1343) (190 samples, 0.36%)</title><rect x="69.8814%" y="452" width="0.3584%" height="15" fill="rgb(235,190,38)" fg:x="37049" fg:w="190"/><text x="70.1314%" y="462.50"></text></g><g><title>&lt;listcomp&gt; (matplotlib/axis.py:1343) (190 samples, 0.36%)</title><rect x="69.8814%" y="468" width="0.3584%" height="15" fill="rgb(247,86,24)" fg:x="37049" fg:w="190"/><text x="70.1314%" y="478.50"></text></g><g><title>draw (matplotlib/axis.py:1416) (192 samples, 0.36%)</title><rect x="69.8814%" y="436" width="0.3621%" height="15" fill="rgb(205,101,16)" fg:x="37049" fg:w="192"/><text x="70.1314%" y="446.50"></text></g><g><title>draw (matplotlib/text.py:752) (67 samples, 0.13%)</title><rect x="70.5906%" y="500" width="0.1264%" height="15" fill="rgb(246,168,33)" fg:x="37425" fg:w="67"/><text x="70.8406%" y="510.50"></text></g><g><title>draw_text (matplotlib/backends/backend_agg.py:192) (61 samples, 0.12%)</title><rect x="70.8188%" y="516" width="0.1151%" height="15" fill="rgb(231,114,1)" fg:x="37546" fg:w="61"/><text x="71.0688%" y="526.50"></text></g><g><title>draw (matplotlib/text.py:808) (116 samples, 0.22%)</title><rect x="70.7735%" y="500" width="0.2188%" height="15" fill="rgb(207,184,53)" fg:x="37522" fg:w="116"/><text x="71.0235%" y="510.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:71) (398 samples, 0.75%)</title><rect x="70.2435%" y="452" width="0.7507%" height="15" fill="rgb(224,95,51)" fg:x="37241" fg:w="398"/><text x="70.4935%" y="462.50"></text></g><g><title>draw (matplotlib/axis.py:276) (397 samples, 0.75%)</title><rect x="70.2454%" y="468" width="0.7488%" height="15" fill="rgb(212,188,45)" fg:x="37242" fg:w="397"/><text x="70.4954%" y="478.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:71) (394 samples, 0.74%)</title><rect x="70.2511%" y="484" width="0.7432%" height="15" fill="rgb(223,154,38)" fg:x="37245" fg:w="394"/><text x="70.5011%" y="494.50"></text></g><g><title>draw (matplotlib/axis.py:1419) (399 samples, 0.75%)</title><rect x="70.2435%" y="436" width="0.7526%" height="15" fill="rgb(251,22,52)" fg:x="37241" fg:w="399"/><text x="70.4935%" y="446.50"></text></g><g><title>_update_label_position (matplotlib/axis.py:2459) (93 samples, 0.18%)</title><rect x="70.9961%" y="452" width="0.1754%" height="15" fill="rgb(229,209,22)" fg:x="37640" fg:w="93"/><text x="71.2461%" y="462.50"></text></g><g><title>_update_label_position (matplotlib/axis.py:2686) (78 samples, 0.15%)</title><rect x="71.2715%" y="452" width="0.1471%" height="15" fill="rgb(234,138,34)" fg:x="37786" fg:w="78"/><text x="71.5215%" y="462.50"></text></g><g><title>draw (matplotlib/axis.py:1422) (273 samples, 0.51%)</title><rect x="70.9961%" y="436" width="0.5149%" height="15" fill="rgb(212,95,11)" fg:x="37640" fg:w="273"/><text x="71.2461%" y="446.50"></text></g><g><title>draw (matplotlib/axis.py:1423) (77 samples, 0.15%)</title><rect x="71.5110%" y="436" width="0.1452%" height="15" fill="rgb(240,179,47)" fg:x="37913" fg:w="77"/><text x="71.7610%" y="446.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:71) (76 samples, 0.14%)</title><rect x="71.5129%" y="452" width="0.1434%" height="15" fill="rgb(240,163,11)" fg:x="37914" fg:w="76"/><text x="71.7629%" y="462.50"></text></g><g><title>draw (matplotlib/lines.py:807) (122 samples, 0.23%)</title><rect x="71.7204%" y="436" width="0.2301%" height="15" fill="rgb(236,37,12)" fg:x="38024" fg:w="122"/><text x="71.9704%" y="446.50"></text></g><g><title>draw_path (matplotlib/backends/backend_agg.py:130) (122 samples, 0.23%)</title><rect x="71.7204%" y="452" width="0.2301%" height="15" fill="rgb(232,164,16)" fg:x="38024" fg:w="122"/><text x="71.9704%" y="462.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:71) (1,215 samples, 2.29%)</title><rect x="69.7550%" y="420" width="2.2917%" height="15" fill="rgb(244,205,15)" fg:x="36982" fg:w="1215"/><text x="70.0050%" y="430.50">d..</text></g><g><title>draw (matplotlib/figure.py:3257) (1,221 samples, 2.30%)</title><rect x="69.7474%" y="340" width="2.3030%" height="15" fill="rgb(223,117,47)" fg:x="36978" fg:w="1221"/><text x="69.9974%" y="350.50">d..</text></g><g><title>_draw_list_compositing_images (matplotlib/image.py:134) (1,221 samples, 2.30%)</title><rect x="69.7474%" y="356" width="2.3030%" height="15" fill="rgb(244,107,35)" fg:x="36978" fg:w="1221"/><text x="69.9974%" y="366.50">_..</text></g><g><title>draw_wrapper (matplotlib/artist.py:71) (1,221 samples, 2.30%)</title><rect x="69.7474%" y="372" width="2.3030%" height="15" fill="rgb(205,140,8)" fg:x="36978" fg:w="1221"/><text x="69.9974%" y="382.50">d..</text></g><g><title>draw (matplotlib/axes/_base.py:3181) (1,217 samples, 2.30%)</title><rect x="69.7550%" y="388" width="2.2955%" height="15" fill="rgb(228,84,46)" fg:x="36982" fg:w="1217"/><text x="70.0050%" y="398.50">d..</text></g><g><title>_draw_list_compositing_images (matplotlib/image.py:134) (1,217 samples, 2.30%)</title><rect x="69.7550%" y="404" width="2.2955%" height="15" fill="rgb(254,188,9)" fg:x="36982" fg:w="1217"/><text x="70.0050%" y="414.50">_..</text></g><g><title>savefig (matplotlib/pyplot.py:1244) (1,253 samples, 2.36%)</title><rect x="69.6909%" y="260" width="2.3634%" height="15" fill="rgb(206,112,54)" fg:x="36948" fg:w="1253"/><text x="69.9409%" y="270.50">sa..</text></g><g><title>draw_idle (matplotlib/backend_bases.py:1891) (1,253 samples, 2.36%)</title><rect x="69.6909%" y="276" width="2.3634%" height="15" fill="rgb(216,84,49)" fg:x="36948" fg:w="1253"/><text x="69.9409%" y="286.50">dr..</text></g><g><title>draw (matplotlib/backends/backend_agg.py:382) (1,241 samples, 2.34%)</title><rect x="69.7135%" y="292" width="2.3408%" height="15" fill="rgb(214,194,35)" fg:x="36960" fg:w="1241"/><text x="69.9635%" y="302.50">d..</text></g><g><title>draw_wrapper (matplotlib/artist.py:94) (1,241 samples, 2.34%)</title><rect x="69.7135%" y="308" width="2.3408%" height="15" fill="rgb(249,28,3)" fg:x="36960" fg:w="1241"/><text x="69.9635%" y="318.50">d..</text></g><g><title>draw_wrapper (matplotlib/artist.py:71) (1,241 samples, 2.34%)</title><rect x="69.7135%" y="324" width="2.3408%" height="15" fill="rgb(222,56,52)" fg:x="36960" fg:w="1241"/><text x="69.9635%" y="334.50">d..</text></g><g><title>_generate_figures (src/dgcv/report/report.py:218) (7,710 samples, 14.54%)</title><rect x="57.5136%" y="212" width="14.5425%" height="15" fill="rgb(245,217,50)" fg:x="30492" fg:w="7710"/><text x="57.7636%" y="222.50">_generate_figures (src..</text></g><g><title>create_plot (src/dgcv/report/figure.py:671) (6,743 samples, 12.72%)</title><rect x="59.3376%" y="228" width="12.7186%" height="15" fill="rgb(213,201,24)" fg:x="31459" fg:w="6743"/><text x="59.5876%" y="238.50">create_plot (src/dg..</text></g><g><title>_save_plot (src/dgcv/report/figure.py:518) (4,593 samples, 8.66%)</title><rect x="63.3929%" y="244" width="8.6633%" height="15" fill="rgb(248,116,28)" fg:x="33609" fg:w="4593"/><text x="63.6429%" y="254.50">_save_plot (..</text></g><g><title>_generate_figures (src/dgcv/report/report.py:219) (312 samples, 0.59%)</title><rect x="72.0561%" y="212" width="0.5885%" height="15" fill="rgb(219,72,43)" fg:x="38202" fg:w="312"/><text x="72.3061%" y="222.50"></text></g><g><title>_generate_figures (src/dgcv/report/report.py:222) (307 samples, 0.58%)</title><rect x="72.6446%" y="212" width="0.5791%" height="15" fill="rgb(209,138,14)" fg:x="38514" fg:w="307"/><text x="72.8946%" y="222.50"></text></g><g><title>&lt;module&gt; (IPython/terminal/embed.py:16) (65 samples, 0.12%)</title><rect x="73.3482%" y="1028" width="0.1226%" height="15" fill="rgb(222,18,33)" fg:x="38887" fg:w="65"/><text x="73.5982%" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (65 samples, 0.12%)</title><rect x="73.3482%" y="1044" width="0.1226%" height="15" fill="rgb(213,199,7)" fg:x="38887" fg:w="65"/><text x="73.5982%" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (65 samples, 0.12%)</title><rect x="73.3482%" y="1060" width="0.1226%" height="15" fill="rgb(250,110,10)" fg:x="38887" fg:w="65"/><text x="73.5982%" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (65 samples, 0.12%)</title><rect x="73.3482%" y="1076" width="0.1226%" height="15" fill="rgb(248,123,6)" fg:x="38887" fg:w="65"/><text x="73.5982%" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (65 samples, 0.12%)</title><rect x="73.3482%" y="1092" width="0.1226%" height="15" fill="rgb(206,91,31)" fg:x="38887" fg:w="65"/><text x="73.5982%" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (65 samples, 0.12%)</title><rect x="73.3482%" y="1108" width="0.1226%" height="15" fill="rgb(211,154,13)" fg:x="38887" fg:w="65"/><text x="73.5982%" y="1118.50"></text></g><g><title>&lt;module&gt; (plotly/tools.py:64) (129 samples, 0.24%)</title><rect x="73.2633%" y="660" width="0.2433%" height="15" fill="rgb(225,148,7)" fg:x="38842" fg:w="129"/><text x="73.5133%" y="670.50"></text></g><g><title>get_module (_plotly_utils/optional_imports.py:28) (129 samples, 0.24%)</title><rect x="73.2633%" y="676" width="0.2433%" height="15" fill="rgb(220,160,43)" fg:x="38842" fg:w="129"/><text x="73.5133%" y="686.50"></text></g><g><title>import_module (importlib/__init__.py:126) (129 samples, 0.24%)</title><rect x="73.2633%" y="692" width="0.2433%" height="15" fill="rgb(213,52,39)" fg:x="38842" fg:w="129"/><text x="73.5133%" y="702.50"></text></g><g><title>_gcd_import (&lt;frozen importlib._bootstrap&gt;:1050) (129 samples, 0.24%)</title><rect x="73.2633%" y="708" width="0.2433%" height="15" fill="rgb(243,137,7)" fg:x="38842" fg:w="129"/><text x="73.5133%" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (129 samples, 0.24%)</title><rect x="73.2633%" y="724" width="0.2433%" height="15" fill="rgb(230,79,13)" fg:x="38842" fg:w="129"/><text x="73.5133%" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (129 samples, 0.24%)</title><rect x="73.2633%" y="740" width="0.2433%" height="15" fill="rgb(247,105,23)" fg:x="38842" fg:w="129"/><text x="73.5133%" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (129 samples, 0.24%)</title><rect x="73.2633%" y="756" width="0.2433%" height="15" fill="rgb(223,179,41)" fg:x="38842" fg:w="129"/><text x="73.5133%" y="766.50"></text></g><g><title>_gcd_import (&lt;frozen importlib._bootstrap&gt;:1050) (129 samples, 0.24%)</title><rect x="73.2633%" y="772" width="0.2433%" height="15" fill="rgb(218,9,34)" fg:x="38842" fg:w="129"/><text x="73.5133%" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (129 samples, 0.24%)</title><rect x="73.2633%" y="788" width="0.2433%" height="15" fill="rgb(222,106,8)" fg:x="38842" fg:w="129"/><text x="73.5133%" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (129 samples, 0.24%)</title><rect x="73.2633%" y="804" width="0.2433%" height="15" fill="rgb(211,220,0)" fg:x="38842" fg:w="129"/><text x="73.5133%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (129 samples, 0.24%)</title><rect x="73.2633%" y="820" width="0.2433%" height="15" fill="rgb(229,52,16)" fg:x="38842" fg:w="129"/><text x="73.5133%" y="830.50"></text></g><g><title>_gcd_import (&lt;frozen importlib._bootstrap&gt;:1050) (129 samples, 0.24%)</title><rect x="73.2633%" y="836" width="0.2433%" height="15" fill="rgb(212,155,18)" fg:x="38842" fg:w="129"/><text x="73.5133%" y="846.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (129 samples, 0.24%)</title><rect x="73.2633%" y="852" width="0.2433%" height="15" fill="rgb(242,21,14)" fg:x="38842" fg:w="129"/><text x="73.5133%" y="862.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (129 samples, 0.24%)</title><rect x="73.2633%" y="868" width="0.2433%" height="15" fill="rgb(222,19,48)" fg:x="38842" fg:w="129"/><text x="73.5133%" y="878.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (129 samples, 0.24%)</title><rect x="73.2633%" y="884" width="0.2433%" height="15" fill="rgb(232,45,27)" fg:x="38842" fg:w="129"/><text x="73.5133%" y="894.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (129 samples, 0.24%)</title><rect x="73.2633%" y="900" width="0.2433%" height="15" fill="rgb(249,103,42)" fg:x="38842" fg:w="129"/><text x="73.5133%" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (129 samples, 0.24%)</title><rect x="73.2633%" y="916" width="0.2433%" height="15" fill="rgb(246,81,33)" fg:x="38842" fg:w="129"/><text x="73.5133%" y="926.50"></text></g><g><title>&lt;module&gt; (IPython/__init__.py:55) (109 samples, 0.21%)</title><rect x="73.3010%" y="932" width="0.2056%" height="15" fill="rgb(252,33,42)" fg:x="38862" fg:w="109"/><text x="73.5510%" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (109 samples, 0.21%)</title><rect x="73.3010%" y="948" width="0.2056%" height="15" fill="rgb(209,212,41)" fg:x="38862" fg:w="109"/><text x="73.5510%" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (109 samples, 0.21%)</title><rect x="73.3010%" y="964" width="0.2056%" height="15" fill="rgb(207,154,6)" fg:x="38862" fg:w="109"/><text x="73.5510%" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (109 samples, 0.21%)</title><rect x="73.3010%" y="980" width="0.2056%" height="15" fill="rgb(223,64,47)" fg:x="38862" fg:w="109"/><text x="73.5510%" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (109 samples, 0.21%)</title><rect x="73.3010%" y="996" width="0.2056%" height="15" fill="rgb(211,161,38)" fg:x="38862" fg:w="109"/><text x="73.5510%" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (109 samples, 0.21%)</title><rect x="73.3010%" y="1012" width="0.2056%" height="15" fill="rgb(219,138,40)" fg:x="38862" fg:w="109"/><text x="73.5510%" y="1022.50"></text></g><g><title>__init__ (plotly/basedatatypes.py:577) (131 samples, 0.25%)</title><rect x="73.2614%" y="260" width="0.2471%" height="15" fill="rgb(241,228,46)" fg:x="38841" fg:w="131"/><text x="73.5114%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (130 samples, 0.25%)</title><rect x="73.2633%" y="276" width="0.2452%" height="15" fill="rgb(223,209,38)" fg:x="38842" fg:w="130"/><text x="73.5133%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:992) (130 samples, 0.25%)</title><rect x="73.2633%" y="292" width="0.2452%" height="15" fill="rgb(236,164,45)" fg:x="38842" fg:w="130"/><text x="73.5133%" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (130 samples, 0.25%)</title><rect x="73.2633%" y="308" width="0.2452%" height="15" fill="rgb(231,15,5)" fg:x="38842" fg:w="130"/><text x="73.5133%" y="318.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (130 samples, 0.25%)</title><rect x="73.2633%" y="324" width="0.2452%" height="15" fill="rgb(252,35,15)" fg:x="38842" fg:w="130"/><text x="73.5133%" y="334.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (130 samples, 0.25%)</title><rect x="73.2633%" y="340" width="0.2452%" height="15" fill="rgb(248,181,18)" fg:x="38842" fg:w="130"/><text x="73.5133%" y="350.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (130 samples, 0.25%)</title><rect x="73.2633%" y="356" width="0.2452%" height="15" fill="rgb(233,39,42)" fg:x="38842" fg:w="130"/><text x="73.5133%" y="366.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (130 samples, 0.25%)</title><rect x="73.2633%" y="372" width="0.2452%" height="15" fill="rgb(238,110,33)" fg:x="38842" fg:w="130"/><text x="73.5133%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (130 samples, 0.25%)</title><rect x="73.2633%" y="388" width="0.2452%" height="15" fill="rgb(233,195,10)" fg:x="38842" fg:w="130"/><text x="73.5133%" y="398.50"></text></g><g><title>&lt;module&gt; (plotly/offline/__init__.py:6) (130 samples, 0.25%)</title><rect x="73.2633%" y="404" width="0.2452%" height="15" fill="rgb(254,105,3)" fg:x="38842" fg:w="130"/><text x="73.5133%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (130 samples, 0.25%)</title><rect x="73.2633%" y="420" width="0.2452%" height="15" fill="rgb(221,225,9)" fg:x="38842" fg:w="130"/><text x="73.5133%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (130 samples, 0.25%)</title><rect x="73.2633%" y="436" width="0.2452%" height="15" fill="rgb(224,227,45)" fg:x="38842" fg:w="130"/><text x="73.5133%" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (130 samples, 0.25%)</title><rect x="73.2633%" y="452" width="0.2452%" height="15" fill="rgb(229,198,43)" fg:x="38842" fg:w="130"/><text x="73.5133%" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (130 samples, 0.25%)</title><rect x="73.2633%" y="468" width="0.2452%" height="15" fill="rgb(206,209,35)" fg:x="38842" fg:w="130"/><text x="73.5133%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (130 samples, 0.25%)</title><rect x="73.2633%" y="484" width="0.2452%" height="15" fill="rgb(245,195,53)" fg:x="38842" fg:w="130"/><text x="73.5133%" y="494.50"></text></g><g><title>&lt;module&gt; (plotly/offline/offline.py:11) (130 samples, 0.25%)</title><rect x="73.2633%" y="500" width="0.2452%" height="15" fill="rgb(240,92,26)" fg:x="38842" fg:w="130"/><text x="73.5133%" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1075) (130 samples, 0.25%)</title><rect x="73.2633%" y="516" width="0.2452%" height="15" fill="rgb(207,40,23)" fg:x="38842" fg:w="130"/><text x="73.5133%" y="526.50"></text></g><g><title>__getattr__ (_plotly_utils/importers.py:29) (130 samples, 0.25%)</title><rect x="73.2633%" y="532" width="0.2452%" height="15" fill="rgb(223,111,35)" fg:x="38842" fg:w="130"/><text x="73.5133%" y="542.50"></text></g><g><title>import_module (importlib/__init__.py:126) (130 samples, 0.25%)</title><rect x="73.2633%" y="548" width="0.2452%" height="15" fill="rgb(229,147,28)" fg:x="38842" fg:w="130"/><text x="73.5133%" y="558.50"></text></g><g><title>_gcd_import (&lt;frozen importlib._bootstrap&gt;:1050) (130 samples, 0.25%)</title><rect x="73.2633%" y="564" width="0.2452%" height="15" fill="rgb(211,29,28)" fg:x="38842" fg:w="130"/><text x="73.5133%" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1027) (130 samples, 0.25%)</title><rect x="73.2633%" y="580" width="0.2452%" height="15" fill="rgb(228,72,33)" fg:x="38842" fg:w="130"/><text x="73.5133%" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1006) (130 samples, 0.25%)</title><rect x="73.2633%" y="596" width="0.2452%" height="15" fill="rgb(205,214,31)" fg:x="38842" fg:w="130"/><text x="73.5133%" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:688) (130 samples, 0.25%)</title><rect x="73.2633%" y="612" width="0.2452%" height="15" fill="rgb(224,111,15)" fg:x="38842" fg:w="130"/><text x="73.5133%" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:883) (130 samples, 0.25%)</title><rect x="73.2633%" y="628" width="0.2452%" height="15" fill="rgb(253,21,26)" fg:x="38842" fg:w="130"/><text x="73.5133%" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:241) (130 samples, 0.25%)</title><rect x="73.2633%" y="644" width="0.2452%" height="15" fill="rgb(245,139,43)" fg:x="38842" fg:w="130"/><text x="73.5133%" y="654.50"></text></g><g><title>plotly_figures (src/dgcv/report/html.py:408) (186 samples, 0.35%)</title><rect x="73.2293%" y="228" width="0.3508%" height="15" fill="rgb(252,170,7)" fg:x="38824" fg:w="186"/><text x="73.4793%" y="238.50"></text></g><g><title>__init__ (plotly/graph_objs/_figure.py:646) (180 samples, 0.34%)</title><rect x="73.2407%" y="244" width="0.3395%" height="15" fill="rgb(231,118,14)" fg:x="38830" fg:w="180"/><text x="73.4907%" y="254.50"></text></g><g><title>_exclusion_windows (src/dgcv/report/html.py:331) (113 samples, 0.21%)</title><rect x="73.5802%" y="260" width="0.2131%" height="15" fill="rgb(238,83,0)" fg:x="39010" fg:w="113"/><text x="73.8302%" y="270.50"></text></g><g><title>add_vrect (plotly/graph_objs/_figure.py:1157) (113 samples, 0.21%)</title><rect x="73.5802%" y="276" width="0.2131%" height="15" fill="rgb(221,39,39)" fg:x="39010" fg:w="113"/><text x="73.8302%" y="286.50"></text></g><g><title>add_vrect (plotly/basedatatypes.py:4146) (113 samples, 0.21%)</title><rect x="73.5802%" y="292" width="0.2131%" height="15" fill="rgb(222,119,46)" fg:x="39010" fg:w="113"/><text x="73.8302%" y="302.50"></text></g><g><title>_plotly_figures (src/dgcv/report/html.py:357) (228 samples, 0.43%)</title><rect x="73.5802%" y="244" width="0.4301%" height="15" fill="rgb(222,165,49)" fg:x="39010" fg:w="228"/><text x="73.8302%" y="254.50"></text></g><g><title>_exclusion_windows (src/dgcv/report/html.py:339) (115 samples, 0.22%)</title><rect x="73.7933%" y="260" width="0.2169%" height="15" fill="rgb(219,113,52)" fg:x="39123" fg:w="115"/><text x="74.0433%" y="270.50"></text></g><g><title>add_vrect (plotly/graph_objs/_figure.py:1157) (115 samples, 0.22%)</title><rect x="73.7933%" y="276" width="0.2169%" height="15" fill="rgb(214,7,15)" fg:x="39123" fg:w="115"/><text x="74.0433%" y="286.50"></text></g><g><title>add_vrect (plotly/basedatatypes.py:4146) (115 samples, 0.22%)</title><rect x="73.7933%" y="292" width="0.2169%" height="15" fill="rgb(235,32,4)" fg:x="39123" fg:w="115"/><text x="74.0433%" y="302.50"></text></g><g><title>_plotly_figures (src/dgcv/report/html.py:374) (122 samples, 0.23%)</title><rect x="74.0197%" y="244" width="0.2301%" height="15" fill="rgb(238,90,54)" fg:x="39243" fg:w="122"/><text x="74.2697%" y="254.50"></text></g><g><title>_process_multiple_axis_spanning_shapes (plotly/basedatatypes.py:4039) (61 samples, 0.12%)</title><rect x="74.2535%" y="308" width="0.1151%" height="15" fill="rgb(213,208,19)" fg:x="39367" fg:w="61"/><text x="74.5035%" y="318.50"></text></g><g><title>_mxe_traces (src/dgcv/report/html.py:270) (168 samples, 0.32%)</title><rect x="74.2498%" y="260" width="0.3169%" height="15" fill="rgb(233,156,4)" fg:x="39365" fg:w="168"/><text x="74.4998%" y="270.50"></text></g><g><title>add_vline (plotly/graph_objs/_figure.py:1049) (168 samples, 0.32%)</title><rect x="74.2498%" y="276" width="0.3169%" height="15" fill="rgb(207,194,5)" fg:x="39365" fg:w="168"/><text x="74.4998%" y="286.50"></text></g><g><title>add_vline (plotly/basedatatypes.py:4095) (168 samples, 0.32%)</title><rect x="74.2498%" y="292" width="0.3169%" height="15" fill="rgb(206,111,30)" fg:x="39365" fg:w="168"/><text x="74.4998%" y="302.50"></text></g><g><title>_mxe_traces (src/dgcv/report/html.py:276) (113 samples, 0.21%)</title><rect x="74.5666%" y="260" width="0.2131%" height="15" fill="rgb(243,70,54)" fg:x="39533" fg:w="113"/><text x="74.8166%" y="270.50"></text></g><g><title>add_vline (plotly/graph_objs/_figure.py:1049) (113 samples, 0.21%)</title><rect x="74.5666%" y="276" width="0.2131%" height="15" fill="rgb(242,28,8)" fg:x="39533" fg:w="113"/><text x="74.8166%" y="286.50"></text></g><g><title>add_vline (plotly/basedatatypes.py:4095) (113 samples, 0.21%)</title><rect x="74.5666%" y="292" width="0.2131%" height="15" fill="rgb(219,106,18)" fg:x="39533" fg:w="113"/><text x="74.8166%" y="302.50"></text></g><g><title>_process_multiple_axis_spanning_shapes (plotly/basedatatypes.py:4039) (73 samples, 0.14%)</title><rect x="74.7817%" y="308" width="0.1377%" height="15" fill="rgb(244,222,10)" fg:x="39647" fg:w="73"/><text x="75.0317%" y="318.50"></text></g><g><title>_mxe_traces (src/dgcv/report/html.py:282) (191 samples, 0.36%)</title><rect x="74.7798%" y="260" width="0.3603%" height="15" fill="rgb(236,179,52)" fg:x="39646" fg:w="191"/><text x="75.0298%" y="270.50"></text></g><g><title>add_vline (plotly/graph_objs/_figure.py:1049) (191 samples, 0.36%)</title><rect x="74.7798%" y="276" width="0.3603%" height="15" fill="rgb(213,23,39)" fg:x="39646" fg:w="191"/><text x="75.0298%" y="286.50"></text></g><g><title>add_vline (plotly/basedatatypes.py:4095) (191 samples, 0.36%)</title><rect x="74.7798%" y="292" width="0.3603%" height="15" fill="rgb(238,48,10)" fg:x="39646" fg:w="191"/><text x="75.0298%" y="302.50"></text></g><g><title>_plotly_figures (src/dgcv/report/html.py:375) (497 samples, 0.94%)</title><rect x="74.2498%" y="244" width="0.9374%" height="15" fill="rgb(251,196,23)" fg:x="39365" fg:w="497"/><text x="74.4998%" y="254.50"></text></g><g><title>_plotly_figures (src/dgcv/report/html.py:385) (65 samples, 0.12%)</title><rect x="75.1872%" y="244" width="0.1226%" height="15" fill="rgb(250,152,24)" fg:x="39862" fg:w="65"/><text x="75.4372%" y="254.50"></text></g><g><title>plotly_figures (src/dgcv/report/html.py:410) (990 samples, 1.87%)</title><rect x="73.5802%" y="228" width="1.8673%" height="15" fill="rgb(209,150,17)" fg:x="39010" fg:w="990"/><text x="73.8302%" y="238.50">p..</text></g><g><title>_perform_update (plotly/basedatatypes.py:3880) (72 samples, 0.14%)</title><rect x="75.5456%" y="292" width="0.1358%" height="15" fill="rgb(234,202,34)" fg:x="40052" fg:w="72"/><text x="75.7956%" y="302.50"></text></g><g><title>_set_compound_prop (plotly/basedatatypes.py:5271) (394 samples, 0.74%)</title><rect x="75.9888%" y="436" width="0.7432%" height="15" fill="rgb(253,148,53)" fg:x="40287" fg:w="394"/><text x="76.2388%" y="446.50"></text></g><g><title>validate_coerce (_plotly_utils/basevalidators.py:2512) (394 samples, 0.74%)</title><rect x="75.9888%" y="452" width="0.7432%" height="15" fill="rgb(218,129,16)" fg:x="40287" fg:w="394"/><text x="76.2388%" y="462.50"></text></g><g><title>__init__ (plotly/graph_objs/layout/_template.py:335) (417 samples, 0.79%)</title><rect x="75.9832%" y="404" width="0.7865%" height="15" fill="rgb(216,85,19)" fg:x="40284" fg:w="417"/><text x="76.2332%" y="414.50"></text></g><g><title>__setitem__ (plotly/basedatatypes.py:4860) (414 samples, 0.78%)</title><rect x="75.9888%" y="420" width="0.7809%" height="15" fill="rgb(235,228,7)" fg:x="40287" fg:w="414"/><text x="76.2388%" y="430.50"></text></g><g><title>_set_compound_prop (plotly/basedatatypes.py:5271) (64 samples, 0.12%)</title><rect x="76.8848%" y="516" width="0.1207%" height="15" fill="rgb(245,175,0)" fg:x="40762" fg:w="64"/><text x="77.1348%" y="526.50"></text></g><g><title>validate_coerce (_plotly_utils/basevalidators.py:2512) (64 samples, 0.12%)</title><rect x="76.8848%" y="532" width="0.1207%" height="15" fill="rgb(208,168,36)" fg:x="40762" fg:w="64"/><text x="77.1348%" y="542.50"></text></g><g><title>__init__ (plotly/graph_objs/_layout.py:7047) (66 samples, 0.12%)</title><rect x="76.8848%" y="468" width="0.1245%" height="15" fill="rgb(246,171,24)" fg:x="40762" fg:w="66"/><text x="77.1348%" y="478.50"></text></g><g><title>__setitem__ (plotly/basedatatypes.py:5906) (66 samples, 0.12%)</title><rect x="76.8848%" y="484" width="0.1245%" height="15" fill="rgb(215,142,24)" fg:x="40762" fg:w="66"/><text x="77.1348%" y="494.50"></text></g><g><title>__setitem__ (plotly/basedatatypes.py:4860) (66 samples, 0.12%)</title><rect x="76.8848%" y="500" width="0.1245%" height="15" fill="rgb(250,187,7)" fg:x="40762" fg:w="66"/><text x="77.1348%" y="510.50"></text></g><g><title>_set_compound_prop (plotly/basedatatypes.py:5271) (261 samples, 0.49%)</title><rect x="76.7716%" y="436" width="0.4923%" height="15" fill="rgb(228,66,33)" fg:x="40702" fg:w="261"/><text x="77.0216%" y="446.50"></text></g><g><title>validate_coerce (_plotly_utils/basevalidators.py:2512) (261 samples, 0.49%)</title><rect x="76.7716%" y="452" width="0.4923%" height="15" fill="rgb(234,215,21)" fg:x="40702" fg:w="261"/><text x="77.0216%" y="462.50"></text></g><g><title>_set_compound_prop (plotly/basedatatypes.py:5271) (763 samples, 1.44%)</title><rect x="75.8417%" y="340" width="1.4392%" height="15" fill="rgb(222,191,20)" fg:x="40209" fg:w="763"/><text x="76.0917%" y="350.50"></text></g><g><title>validate_coerce (_plotly_utils/basevalidators.py:2786) (759 samples, 1.43%)</title><rect x="75.8493%" y="356" width="1.4316%" height="15" fill="rgb(245,79,54)" fg:x="40213" fg:w="759"/><text x="76.0993%" y="366.50"></text></g><g><title>deepcopy (copy.py:172) (722 samples, 1.36%)</title><rect x="75.9190%" y="372" width="1.3618%" height="15" fill="rgb(240,10,37)" fg:x="40250" fg:w="722"/><text x="76.1690%" y="382.50"></text></g><g><title>_reconstruct (copy.py:265) (721 samples, 1.36%)</title><rect x="75.9209%" y="388" width="1.3599%" height="15" fill="rgb(214,192,32)" fg:x="40251" fg:w="721"/><text x="76.1709%" y="398.50"></text></g><g><title>__init__ (plotly/graph_objs/layout/_template.py:339) (271 samples, 0.51%)</title><rect x="76.7697%" y="404" width="0.5112%" height="15" fill="rgb(209,36,54)" fg:x="40701" fg:w="271"/><text x="77.0197%" y="414.50"></text></g><g><title>__setitem__ (plotly/basedatatypes.py:4860) (271 samples, 0.51%)</title><rect x="76.7697%" y="420" width="0.5112%" height="15" fill="rgb(220,10,11)" fg:x="40701" fg:w="271"/><text x="77.0197%" y="430.50"></text></g><g><title>__setitem__ (plotly/basedatatypes.py:4860) (835 samples, 1.57%)</title><rect x="75.8417%" y="324" width="1.5750%" height="15" fill="rgb(221,106,17)" fg:x="40209" fg:w="835"/><text x="76.0917%" y="334.50"></text></g><g><title>plotly_figures (src/dgcv/report/html.py:421) (1,046 samples, 1.97%)</title><rect x="75.4475%" y="228" width="1.9730%" height="15" fill="rgb(251,142,44)" fg:x="40000" fg:w="1046"/><text x="75.6975%" y="238.50">p..</text></g><g><title>update_layout (plotly/graph_objs/_figure.py:792) (1,046 samples, 1.97%)</title><rect x="75.4475%" y="244" width="1.9730%" height="15" fill="rgb(238,13,15)" fg:x="40000" fg:w="1046"/><text x="75.6975%" y="254.50">u..</text></g><g><title>update_layout (plotly/basedatatypes.py:1391) (1,046 samples, 1.97%)</title><rect x="75.4475%" y="260" width="1.9730%" height="15" fill="rgb(208,107,27)" fg:x="40000" fg:w="1046"/><text x="75.6975%" y="270.50">u..</text></g><g><title>update (plotly/basedatatypes.py:5131) (995 samples, 1.88%)</title><rect x="75.5437%" y="276" width="1.8768%" height="15" fill="rgb(205,136,37)" fg:x="40051" fg:w="995"/><text x="75.7937%" y="286.50">u..</text></g><g><title>_perform_update (plotly/basedatatypes.py:3934) (879 samples, 1.66%)</title><rect x="75.7625%" y="292" width="1.6580%" height="15" fill="rgb(250,205,27)" fg:x="40167" fg:w="879"/><text x="76.0125%" y="302.50"></text></g><g><title>__setitem__ (plotly/basedatatypes.py:5906) (839 samples, 1.58%)</title><rect x="75.8379%" y="308" width="1.5825%" height="15" fill="rgb(210,80,43)" fg:x="40207" fg:w="839"/><text x="76.0879%" y="318.50"></text></g><g><title>plotly_figures (src/dgcv/report/html.py:430) (72 samples, 0.14%)</title><rect x="77.4205%" y="228" width="0.1358%" height="15" fill="rgb(247,160,36)" fg:x="41046" fg:w="72"/><text x="77.6705%" y="238.50"></text></g><g><title>update_xaxes (plotly/graph_objs/_figure.py:23815) (58 samples, 0.11%)</title><rect x="77.4469%" y="244" width="0.1094%" height="15" fill="rgb(234,13,49)" fg:x="41060" fg:w="58"/><text x="77.6969%" y="254.50"></text></g><g><title>plotly_figures (src/dgcv/report/html.py:436) (96 samples, 0.18%)</title><rect x="77.5563%" y="228" width="0.1811%" height="15" fill="rgb(234,122,0)" fg:x="41118" fg:w="96"/><text x="77.8063%" y="238.50"></text></g><g><title>update_yaxes (plotly/graph_objs/_figure.py:23978) (87 samples, 0.16%)</title><rect x="77.5732%" y="244" width="0.1641%" height="15" fill="rgb(207,146,38)" fg:x="41127" fg:w="87"/><text x="77.8232%" y="254.50"></text></g><g><title>encode_as_list (_plotly_utils/utils.py:147) (266 samples, 0.50%)</title><rect x="95.2034%" y="372" width="0.5017%" height="15" fill="rgb(207,177,25)" fg:x="50474" fg:w="266"/><text x="95.4534%" y="382.50"></text></g><g><title>encode (json/encoder.py:199) (9,439 samples, 17.80%)</title><rect x="77.9109%" y="324" width="17.8037%" height="15" fill="rgb(211,178,42)" fg:x="41306" fg:w="9439"/><text x="78.1609%" y="334.50">encode (json/encoder.py:199)</text></g><g><title>iterencode (json/encoder.py:257) (9,438 samples, 17.80%)</title><rect x="77.9127%" y="340" width="17.8018%" height="15" fill="rgb(230,69,54)" fg:x="41307" fg:w="9438"/><text x="78.1627%" y="350.50">iterencode (json/encoder.py:..</text></g><g><title>default (_plotly_utils/utils.py:130) (272 samples, 0.51%)</title><rect x="95.2015%" y="356" width="0.5130%" height="15" fill="rgb(214,135,41)" fg:x="50473" fg:w="272"/><text x="95.4515%" y="366.50"></text></g><g><title>encode (_plotly_utils/utils.py:56) (9,481 samples, 17.88%)</title><rect x="77.9109%" y="308" width="17.8829%" height="15" fill="rgb(237,67,25)" fg:x="41306" fg:w="9481"/><text x="78.1609%" y="318.50">encode (_plotly_utils/utils...</text></g><g><title>to_html (plotly/io/_html.py:142) (9,651 samples, 18.20%)</title><rect x="77.8486%" y="260" width="18.2036%" height="15" fill="rgb(222,189,50)" fg:x="41273" fg:w="9651"/><text x="78.0986%" y="270.50">to_html (plotly/io/_html.py:..</text></g><g><title>to_json_plotly (plotly/io/_json.py:142) (9,618 samples, 18.14%)</title><rect x="77.9109%" y="276" width="18.1414%" height="15" fill="rgb(245,148,34)" fg:x="41306" fg:w="9618"/><text x="78.1609%" y="286.50">to_json_plotly (plotly/io/_j..</text></g><g><title>dumps (json/__init__.py:238) (9,618 samples, 18.14%)</title><rect x="77.9109%" y="292" width="18.1414%" height="15" fill="rgb(222,29,6)" fg:x="41306" fg:w="9618"/><text x="78.1609%" y="302.50">dumps (json/__init__.py:238)</text></g><g><title>encode (_plotly_utils/utils.py:62) (137 samples, 0.26%)</title><rect x="95.7938%" y="308" width="0.2584%" height="15" fill="rgb(221,189,43)" fg:x="50787" fg:w="137"/><text x="96.0438%" y="318.50"></text></g><g><title>_create_full_tex (src/dgcv/report/report.py:304) (21,418 samples, 40.40%)</title><rect x="55.9764%" y="196" width="40.3984%" height="15" fill="rgb(207,36,27)" fg:x="29677" fg:w="21418"/><text x="56.2264%" y="206.50">_create_full_tex (src/dgcv/report/report.py:304)</text></g><g><title>_generate_figures (src/dgcv/report/report.py:232) (12,272 samples, 23.15%)</title><rect x="73.2275%" y="212" width="23.1473%" height="15" fill="rgb(217,90,24)" fg:x="38823" fg:w="12272"/><text x="73.4775%" y="222.50">_generate_figures (src/dgcv/report/re..</text></g><g><title>plotly_figures (src/dgcv/report/html.py:442) (9,881 samples, 18.64%)</title><rect x="77.7373%" y="228" width="18.6374%" height="15" fill="rgb(224,66,35)" fg:x="41214" fg:w="9881"/><text x="77.9873%" y="238.50">plotly_figures (src/dgcv/repo..</text></g><g><title>to_html (plotly/basedatatypes.py:3602) (9,881 samples, 18.64%)</title><rect x="77.7373%" y="244" width="18.6374%" height="15" fill="rgb(221,13,50)" fg:x="41214" fg:w="9881"/><text x="77.9873%" y="254.50">to_html (plotly/basedatatypes..</text></g><g><title>to_html (plotly/io/_html.py:339) (86 samples, 0.16%)</title><rect x="96.2125%" y="260" width="0.1622%" height="15" fill="rgb(236,68,49)" fg:x="51009" fg:w="86"/><text x="96.4625%" y="270.50"></text></g><g><title>_create_full_tex (src/dgcv/report/report.py:316) (330 samples, 0.62%)</title><rect x="96.3747%" y="196" width="0.6224%" height="15" fill="rgb(229,146,28)" fg:x="51095" fg:w="330"/><text x="96.6247%" y="206.50"></text></g><g><title>create_html (src/dgcv/report/html.py:512) (315 samples, 0.59%)</title><rect x="96.4030%" y="212" width="0.5941%" height="15" fill="rgb(225,31,38)" fg:x="51110" fg:w="315"/><text x="96.6530%" y="222.50"></text></g><g><title>render (jinja2/environment.py:1302) (144 samples, 0.27%)</title><rect x="96.7256%" y="228" width="0.2716%" height="15" fill="rgb(250,208,3)" fg:x="51281" fg:w="144"/><text x="96.9756%" y="238.50"></text></g><g><title>_pcs_replace (src/dgcv/report/report.py:154) (60 samples, 0.11%)</title><rect x="97.0179%" y="212" width="0.1132%" height="15" fill="rgb(246,54,23)" fg:x="51436" fg:w="60"/><text x="97.2679%" y="222.50"></text></g><g><title>_get_template (src/dgcv/report/report.py:185) (59 samples, 0.11%)</title><rect x="97.0198%" y="228" width="0.1113%" height="15" fill="rgb(243,76,11)" fg:x="51437" fg:w="59"/><text x="97.2698%" y="238.50"></text></g><g><title>get_template (jinja2/environment.py:1013) (59 samples, 0.11%)</title><rect x="97.0198%" y="244" width="0.1113%" height="15" fill="rgb(245,21,50)" fg:x="51437" fg:w="59"/><text x="97.2698%" y="254.50"></text></g><g><title>_load_template (jinja2/environment.py:972) (59 samples, 0.11%)</title><rect x="97.0198%" y="260" width="0.1113%" height="15" fill="rgb(228,9,43)" fg:x="51437" fg:w="59"/><text x="97.2698%" y="270.50"></text></g><g><title>load (jinja2/loaders.py:138) (59 samples, 0.11%)</title><rect x="97.0198%" y="276" width="0.1113%" height="15" fill="rgb(208,100,47)" fg:x="51437" fg:w="59"/><text x="97.2698%" y="286.50"></text></g><g><title>create_pdf (src/dgcv/report/report.py:394) (23,441 samples, 44.21%)</title><rect x="52.9208%" y="164" width="44.2141%" height="15" fill="rgb(232,26,8)" fg:x="28057" fg:w="23441"/><text x="53.1708%" y="174.50">create_pdf (src/dgcv/report/report.py:394)</text></g><g><title>_create_reports (src/dgcv/report/report.py:50) (23,441 samples, 44.21%)</title><rect x="52.9208%" y="180" width="44.2141%" height="15" fill="rgb(216,166,38)" fg:x="28057" fg:w="23441"/><text x="53.1708%" y="190.50">_create_reports (src/dgcv/report/report.py:50)</text></g><g><title>_create_full_tex (src/dgcv/report/report.py:323) (73 samples, 0.14%)</title><rect x="96.9972%" y="196" width="0.1377%" height="15" fill="rgb(251,202,51)" fg:x="51425" fg:w="73"/><text x="97.2472%" y="206.50"></text></g><g><title>__create_report (src/dgcv/core/validation.py:156) (23,483 samples, 44.29%)</title><rect x="52.8434%" y="148" width="44.2933%" height="15" fill="rgb(254,216,34)" fg:x="28016" fg:w="23483"/><text x="53.0934%" y="158.50">__create_report (src/dgcv/core/validation.py:156)</text></g><g><title>validate (src/dgcv/core/validation.py:227) (24,047 samples, 45.36%)</title><rect x="52.8434%" y="132" width="45.3571%" height="15" fill="rgb(251,32,27)" fg:x="28016" fg:w="24047"/><text x="53.0934%" y="142.50">validate (src/dgcv/core/validation.py:227)</text></g><g><title>__create_report (src/dgcv/core/validation.py:178) (564 samples, 1.06%)</title><rect x="97.1368%" y="148" width="1.0638%" height="15" fill="rgb(208,127,28)" fg:x="51499" fg:w="564"/><text x="97.3868%" y="158.50"></text></g><g><title>copy_output_files (src/dgcv/files/manage_files.py:371) (564 samples, 1.06%)</title><rect x="97.1368%" y="164" width="1.0638%" height="15" fill="rgb(224,137,22)" fg:x="51499" fg:w="564"/><text x="97.3868%" y="174.50"></text></g><g><title>copytree (shutil.py:559) (564 samples, 1.06%)</title><rect x="97.1368%" y="180" width="1.0638%" height="15" fill="rgb(254,70,32)" fg:x="51499" fg:w="564"/><text x="97.3868%" y="190.50"></text></g><g><title>_copytree (shutil.py:495) (564 samples, 1.06%)</title><rect x="97.1368%" y="196" width="1.0638%" height="15" fill="rgb(229,75,37)" fg:x="51499" fg:w="564"/><text x="97.3868%" y="206.50"></text></g><g><title>copytree (shutil.py:559) (564 samples, 1.06%)</title><rect x="97.1368%" y="212" width="1.0638%" height="15" fill="rgb(252,64,23)" fg:x="51499" fg:w="564"/><text x="97.3868%" y="222.50"></text></g><g><title>_copytree (shutil.py:499) (542 samples, 1.02%)</title><rect x="97.1783%" y="228" width="1.0223%" height="15" fill="rgb(232,162,48)" fg:x="51521" fg:w="542"/><text x="97.4283%" y="238.50"></text></g><g><title>copy2 (shutil.py:434) (541 samples, 1.02%)</title><rect x="97.1801%" y="244" width="1.0204%" height="15" fill="rgb(246,160,12)" fg:x="51522" fg:w="541"/><text x="97.4301%" y="254.50"></text></g><g><title>copyfile (shutil.py:267) (540 samples, 1.02%)</title><rect x="97.1820%" y="260" width="1.0185%" height="15" fill="rgb(247,166,0)" fg:x="51523" fg:w="540"/><text x="97.4320%" y="270.50"></text></g><g><title>_fastcopy_sendfile (shutil.py:143) (540 samples, 1.02%)</title><rect x="97.1820%" y="276" width="1.0185%" height="15" fill="rgb(249,219,21)" fg:x="51523" fg:w="540"/><text x="97.4320%" y="286.50"></text></g><g><title>_copytree (shutil.py:495) (919 samples, 1.73%)</title><rect x="98.2006%" y="180" width="1.7334%" height="15" fill="rgb(205,209,3)" fg:x="52063" fg:w="919"/><text x="98.4506%" y="190.50"></text></g><g><title>copytree (shutil.py:559) (919 samples, 1.73%)</title><rect x="98.2006%" y="196" width="1.7334%" height="15" fill="rgb(243,44,1)" fg:x="52063" fg:w="919"/><text x="98.4506%" y="206.50"></text></g><g><title>_copytree (shutil.py:499) (919 samples, 1.73%)</title><rect x="98.2006%" y="212" width="1.7334%" height="15" fill="rgb(206,159,16)" fg:x="52063" fg:w="919"/><text x="98.4506%" y="222.50"></text></g><g><title>copy2 (shutil.py:434) (919 samples, 1.73%)</title><rect x="98.2006%" y="228" width="1.7334%" height="15" fill="rgb(244,77,30)" fg:x="52063" fg:w="919"/><text x="98.4506%" y="238.50"></text></g><g><title>copyfile (shutil.py:267) (868 samples, 1.64%)</title><rect x="98.2968%" y="244" width="1.6372%" height="15" fill="rgb(218,69,12)" fg:x="52114" fg:w="868"/><text x="98.5468%" y="254.50"></text></g><g><title>_fastcopy_sendfile (shutil.py:143) (868 samples, 1.64%)</title><rect x="98.2968%" y="260" width="1.6372%" height="15" fill="rgb(212,87,7)" fg:x="52114" fg:w="868"/><text x="98.5468%" y="270.50"></text></g><g><title>validate (src/dgcv/core/validation.py:229) (921 samples, 1.74%)</title><rect x="98.2006%" y="132" width="1.7372%" height="15" fill="rgb(245,114,25)" fg:x="52063" fg:w="921"/><text x="98.4506%" y="142.50"></text></g><g><title>copy_output_files (src/dgcv/files/manage_files.py:371) (921 samples, 1.74%)</title><rect x="98.2006%" y="148" width="1.7372%" height="15" fill="rgb(210,61,42)" fg:x="52063" fg:w="921"/><text x="98.4506%" y="158.50"></text></g><g><title>copytree (shutil.py:559) (921 samples, 1.74%)</title><rect x="98.2006%" y="164" width="1.7372%" height="15" fill="rgb(211,52,33)" fg:x="52063" fg:w="921"/><text x="98.4506%" y="174.50"></text></g><g><title>all (53,017 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(234,58,33)" fg:x="0" fg:w="53017"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (dgcv:8) (52,880 samples, 99.74%)</title><rect x="0.2584%" y="68" width="99.7416%" height="15" fill="rgb(220,115,36)" fg:x="137" fg:w="52880"/><text x="0.5084%" y="78.50">&lt;module&gt; (dgcv:8)</text></g><g><title>dgcv (src/dgcv/launchers.py:510) (52,879 samples, 99.74%)</title><rect x="0.2603%" y="84" width="99.7397%" height="15" fill="rgb(243,153,54)" fg:x="138" fg:w="52879"/><text x="0.5103%" y="94.50">dgcv (src/dgcv/launchers.py:510)</text></g><g><title>_execute_validate (src/dgcv/launchers.py:479) (52,879 samples, 99.74%)</title><rect x="0.2603%" y="100" width="99.7397%" height="15" fill="rgb(251,47,18)" fg:x="138" fg:w="52879"/><text x="0.5103%" y="110.50">_execute_validate (src/dgcv/launchers.py:479)</text></g><g><title>_model_validation (src/dgcv/launchers.py:93) (52,815 samples, 99.62%)</title><rect x="0.3810%" y="116" width="99.6190%" height="15" fill="rgb(242,102,42)" fg:x="202" fg:w="52815"/><text x="0.6310%" y="126.50">_model_validation (src/dgcv/launchers.py:93)</text></g></svg></svg>